(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 12.2' *)

(***************************************************************************)
(*                                                                         *)
(*                                                                         *)
(*  Under the Wolfram FreeCDF terms of use, this file and its content are  *)
(*  bound by the Creative Commons BY-SA Attribution-ShareAlike license.    *)
(*                                                                         *)
(*        For additional information concerning CDF licensing, see:        *)
(*                                                                         *)
(*         www.wolfram.com/cdf/adopting-cdf/licensing-options.html         *)
(*                                                                         *)
(*                                                                         *)
(***************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1088,         20]
NotebookDataLength[   2462704,      48412]
NotebookOptionsPosition[   2440071,      48053]
NotebookOutlinePosition[   2440559,      48071]
CellTagsIndexPosition[   2440516,      48068]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Goldratt\[CloseCurlyQuote]s \[OpenCurlyDoubleQuote]Dice  Game\
\[CloseCurlyDoubleQuote] and the Five Focusing Steps", "Title",
 CellChangeTimes->{{3.823779198211959*^9, 3.8237792510864363`*^9}, {
  3.825323138891062*^9, 
  3.8253231487387514`*^9}},ExpressionUUID->"d9495d32-4a2a-4616-a4cf-\
6e834bb4eada"],

Cell["A simulation for learning purposes.", "Subtitle",
 CellChangeTimes->{{3.8253296623510294`*^9, 
  3.825329676730133*^9}},ExpressionUUID->"588cb68b-4b26-4c6c-81db-\
41e4ac606573"],

Cell["\<\
\[Copyright] J\[UDoubleDot]rgen Kanz, March 2021
\
\>", "Text",
 CellChangeTimes->{{3.825323249428838*^9, 
  3.82532327707133*^9}},ExpressionUUID->"82de57c8-8ff6-4aeb-acad-\
3f687568dd4e"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.824454990589939*^9, 3.8244550160800247`*^9}, 
   3.824541034482335*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"2e02b318-f9b3-4be0-80c0-b9d2cd7f94f0"],

Cell[CellGroupData[{

Cell["1. Introduction", "Section",
 CellChangeTimes->{{3.8244475265703907`*^9, 3.8244475295298414`*^9}, {
  3.825222404025525*^9, 
  3.8252224046534595`*^9}},ExpressionUUID->"e17a423f-c7d5-479a-b876-\
4dc4f98170ed"],

Cell["\<\
The Dice Game was introduced in one of the best-selling business books of all \
time, THE GOAL, authored by Dr. Eli Goldratt.
The WSU website created by James Holt gives very clear instructions on how to \
run your own dice game in a group, including all the details for each \
iteration and what the expected results should be \
(https://public.wsu.edu/~engrmgmt/holt/em530/Docs/DiceGames.htm).
Meantime several Excel sheets (like \
https://www.researchgate.net/publication/235301922_An_Excel-based_dice_game_\
An_integrative_learning_activity_in_operations_management) and special \
commercial apps (like https://www.goldrattsdicegame.com/) have been developed \
to simulate the Dice Game.
This notebook is slightly different because we simulate five different \
scenarios to highlight the interdependencies within the line. The scenario \
sequence is as follows:\
\>", "Text",
 CellChangeTimes->{{3.824447656749487*^9, 3.8244476659536123`*^9}, {
   3.8244478912557197`*^9, 3.8244478918188887`*^9}, 3.8244479317286925`*^9, {
   3.8244481696752634`*^9, 3.824448174248064*^9}, {3.8244483238750134`*^9, 
   3.8244484015561495`*^9}, {3.8244484777880073`*^9, 3.824448495906375*^9}, {
   3.8244487872611713`*^9, 3.8244489025456567`*^9}, {3.824448978940544*^9, 
   3.824449005054652*^9}, 3.824449039793481*^9, {3.824450784577813*^9, 
   3.824450864537449*^9}, {3.82445089773919*^9, 3.824450949159423*^9}, 
   3.824451000248857*^9, 3.8252218889615774`*^9, {3.82522194563396*^9, 
   3.825222190081781*^9}, {3.8252224116487393`*^9, 3.825222436540659*^9}, {
   3.8252224680282755`*^9, 3.82522247889857*^9}, 3.825222614881337*^9, {
   3.8253154776927385`*^9, 3.8253155013758755`*^9}, {3.8253229897944407`*^9, 
   3.8253230090415077`*^9}},ExpressionUUID->"74d1c1c6-4348-4d93-9173-\
33cb1a8f0a54"],

Cell["Balanced Line", "Item",
 CellChangeTimes->{{3.825222533250242*^9, 
  3.8252225631740313`*^9}},ExpressionUUID->"502765f4-b3fc-4750-b545-\
7226e7ec0002"],

Cell["Constrained Line", "Item",
 CellChangeTimes->{{3.825222533250242*^9, 
  3.825222570259967*^9}},ExpressionUUID->"d142b3c8-e1ff-4803-a584-\
cd1c90755968"],

Cell["TOC - DBR with a focus on the Rope", "Item",
 CellChangeTimes->{{3.825222533250242*^9, 
  3.8252225984617405`*^9}},ExpressionUUID->"8721d4bb-7d58-4ad5-b2fb-\
c55a0d190dd2"],

Cell["TLS", "Item",
 CellChangeTimes->{{3.825222533250242*^9, 3.8252226007701607`*^9}, {
  3.8253229421613455`*^9, 
  3.825322942162345*^9}},ExpressionUUID->"914364b9-3e70-422e-a4b9-\
a7c84112e01f"],

Cell["Full TOC", "Item",
 CellChangeTimes->{{3.825222533250242*^9, 3.8252226007701607`*^9}, {
  3.825322943545042*^9, 
  3.825322947731228*^9}},ExpressionUUID->"185534aa-1c94-477d-9617-\
190279c7e453"],

Cell["\<\
For each of the scenarios, we analyze the statistics regarding the roll of \
dices, the queues between the work stations or work centers (called \
\[OpenCurlyDoubleQuote]stations\[CloseCurlyDoubleQuote] in the text), and the \
financial figures according to the Throughput Accounting.\
\>", "Text",
 CellChangeTimes->{
  3.8252224525310183`*^9, {3.8252226411324058`*^9, 
   3.825222653236393*^9}},ExpressionUUID->"808bf7f5-19e3-477d-b97f-\
9689db8fee8b"],

Cell[CellGroupData[{

Cell["1.1 Rules of the simulation", "Subsection",
 CellChangeTimes->{
  3.8252226751048527`*^9, {3.8252227210323515`*^9, 
   3.8252227216394186`*^9}},ExpressionUUID->"bbaa924c-4c3b-4658-bfeb-\
461f9a482435"],

Cell[TextData[{
 "1. We have unlimited raw material available.\n2. We can ship and sell what \
we produce.\n3. Apart from the constrained station, we have two dices that \
represent the available capacity at each station. The constrained station has \
only one dice.\n4. For comparison reasons, we save the rolled dice points \
from the ",
 StyleBox["Balanced Line ",
  FontSlant->"Italic"],
 "scenario and re-use them in all other scenarios apart from the constraint \
dice result."
}], "Text",
 CellChangeTimes->{
  3.825222699107738*^9, {3.8253233611888976`*^9, 
   3.825323374561927*^9}},ExpressionUUID->"2b1c5e2b-f9c7-4ce7-bef4-\
5fa9be57186a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["1.2 Rolling the dices", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.82522276426206*^9, 
  3.8252227828515167`*^9}},ExpressionUUID->"d4d7b97b-247d-438f-a1c5-\
a85e61c3d793"],

Cell[TextData[StyleBox["Please be aware that in case you have one dice and \
you roll it for example 100,000 times you get an almost Uniform distribution.",
 FontSize->16,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.8244514656297035`*^9, {3.824452332618792*^9, 3.824452341373356*^9}, 
   3.8252227982897325`*^9, {3.8252241286730995`*^9, 
   3.8252241320589333`*^9}},ExpressionUUID->"7cd75038-4c6c-4083-a32d-\
c12423664e07"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"oneDice", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "6"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", "oneDice", "]"}]}], "Input",
 CellChangeTimes->{{3.824451365445695*^9, 3.8244514419342737`*^9}, {
  3.8244519897927027`*^9, 3.824452044927846*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"ef9cf924-9004-41cb-8323-141d30643974"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.644], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.644], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0.5, 0}, {1.5, 16563.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{40.96617293835068, 
           93.26761409127302}, {-97.33880157097927, 86.84218920474295}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16563]& ,
        TagBoxNote->"16563"],
       StyleBox["16563", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16563, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 16576.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{92.76761409127302, 
           145.06905524419537`}, {-97.48296946810443, 86.84218920474295}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16576]& ,
        TagBoxNote->"16576"],
       StyleBox["16576", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16576, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 16780.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{144.56905524419537`, 
           196.8704963971177}, {-99.74529646914577, 86.84218920474295}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16780]& ,
        TagBoxNote->"16780"],
       StyleBox["16780", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16780, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 16774.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{196.3704963971177, 
           248.67193755004004`}, {-99.67875743970338, 86.84218920474295}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16774]& ,
        TagBoxNote->"16774"],
       StyleBox["16774", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16774, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 16667.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{248.17193755004004`, 
           300.4733787029624}, {-98.4921447479807, 86.84218920474295}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16667]& ,
        TagBoxNote->"16667"],
       StyleBox["16667", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16667, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 16640.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{299.9733787029624, 
           352.2748198558847}, {-98.19271911548996, 86.84218920474295}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16640]& ,
        TagBoxNote->"16640"],
       StyleBox["16640", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16640, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.38, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0.5, 6.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.824451444139271*^9, {3.82445201309503*^9, 3.8244520496646566`*^9}, 
   3.8251533331779833`*^9, 3.8251535142367373`*^9, 3.8251551294101934`*^9, 
   3.8251557437232127`*^9, 3.8251560453915873`*^9, 3.8251569002427006`*^9, 
   3.825157165679764*^9, 3.825157280026851*^9, 3.8251582805244102`*^9, 
   3.8251587472007484`*^9, 3.8251588343833237`*^9, 3.825163619960845*^9, 
   3.8252239249043417`*^9, 3.825225730358727*^9, 3.8252281970589476`*^9, 
   3.8252392171024327`*^9, 3.825239310067377*^9, 3.82523935191399*^9, 
   3.825240088052699*^9, 3.8252403738857307`*^9, 3.82524052893826*^9, 
   3.825240720947941*^9, 3.825244597278637*^9, 3.8252451785941687`*^9, 
   3.825245442392663*^9, 3.8252460814549723`*^9, 3.825246184116825*^9, 
   3.8252463188624635`*^9, 3.8252464594459014`*^9, 3.8252465764375114`*^9, 
   3.8252466544675894`*^9, 3.8252467550983324`*^9, 3.8252470445201163`*^9, 
   3.8252471275059805`*^9, 3.8252471871472225`*^9, 3.8252472553503056`*^9, 
   3.8252474058185863`*^9, 3.825247500686877*^9, 3.825247824416016*^9, 
   3.825248240409034*^9, 3.825248340737469*^9, 3.825248437098913*^9, 
   3.8252505458182774`*^9, 3.8252508150756664`*^9, 3.8253175117810135`*^9, 
   3.825319616103749*^9, 3.8253214291822042`*^9, 3.8253242781322875`*^9, 
   3.8253243364526687`*^9, 3.82532887200145*^9, 3.8253970722784348`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"5d897369-1728-4bdb-a020-de02ac7194c3"]
}, Open  ]],

Cell[TextData[StyleBox["Average",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.8244544124505386`*^9},ExpressionUUID->"e6c9e21f-5a02-41c7-8245-\
3e9060ee2257"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"averageOneDice", "=", 
  RowBox[{"N", "[", 
   RowBox[{"Mean", "[", "oneDice", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.824451949604658*^9, 3.82445198407718*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"6f54de26-bd2e-4cdf-92a2-f29d22dd5ebd"],

Cell[BoxData["3.50326`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAeKweVLWE+reOP6JXLHsWf0bxxpnr70gOk1Fv/05kM5S
+HkZRGec3PATRPue6Ex5AaQ97m5vBdEnNJmngGiHK0KCL4H0lYoMbxA9eZVf
GIhu9mhY8xpIsyTOk+NseOOotsOXgQtIX+taYsINpKdFq04TANIZE04vBNEM
USzLQbRVAQuzIJC+ELxPDURveq9gBaIbrqgEgeg9R1eZCQPprPXB9SD69xy/
BSCaodPwA4ier832F0QvqLrHKwKkH7kVyoPoN0qCeiA65sNFcxBt9y7VBUQX
5k7OANHyDz8Vgehty9OrQPRn+3dNIHor096pIJpz9YKFIPqFN/8pEL13H/8/
EL3vyiwuUZB9j5aKgWiNWhs5MSDN8fmJPYhuEPhzwQxIf6ljvWEOcn/Lil0W
QHrR42NyVkA6j1lQDUSnfWeMtQHSSf7cq2KBNACwmsvL
  "],
 CellLabel->"Out[4]=",ExpressionUUID->"8c0a7736-9d89-4cbe-a6e5-ee3bac2de683"]
}, Open  ]],

Cell[TextData[StyleBox["Standard Deviation",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8244544273570457`*^9, 
  3.824454435477251*^9}},ExpressionUUID->"b7749faf-9b28-4f75-9fea-\
0a09c72c3a91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stdOneDice", "=", 
  RowBox[{"N", "[", 
   RowBox[{"StandardDeviation", "[", "oneDice", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8244520796764975`*^9, 3.824452090666959*^9}, 
   3.8252454617832193`*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"1c1ef4a2-9496-4881-aeb9-cffea6c3e5d9"],

Cell[BoxData["1.705009807298606`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAeITUXfsJ9S9cRSKW7fsWf0bxwT7gL0gekmkaftzIG2T
9/8yiN7GsOsniF7X1J/yAkgfObavFUS3n+ScAqJFlCQFXwLpa+fyvEH0qubQ
MBB9laltzWsg3eazRI6z4Y2jBl8IAxeQdvi4yoQbSGvKaU8TANJmoZcWgmiR
25zLQfSW9ZzMgkBageeoGoj+oKJuBaLjf2oFgehHJzeYCQPpW+Kp9SCa61TI
AhAd4GjxAURX9vH9BdH32p7wigDppx2V8iCa4ZeEHojetuq6OZhek+sConV9
Z2eAaC/t30Ug2u1lfhWIZj78rQlEz/13aCqINjFavhBEc6iLngLRSfqi/0D0
tRsLuESB9BWHNWIg2ivCSU4MSHsEv7IH0W0TGS+aAWmmNdw3zIF0UcW6XRZA
+s37M3JWIH9dE1MD0W8escfaAOnutYKrYoE0AAhDyP4=
  "],
 CellLabel->"Out[5]=",ExpressionUUID->"3d2dea51-6d10-4897-a739-5c99e5a4de94"]
}, Open  ]],

Cell[TextData[StyleBox["If you have two dices and you throw them 100,000 \
times you get a Normal (Gaussian) distribution.",
 FontSize->16,
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.824451030395484*^9, 3.8244514579230533`*^9, 3.8244514881803756`*^9, {
   3.8244522614947524`*^9, 
   3.8244522725353765`*^9}},ExpressionUUID->"14bf0bca-a107-43be-9eac-\
5934713063ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"twoDices", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100000"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.824451530717312*^9, 3.8244515356766396`*^9}, {
  3.82445159049429*^9, 3.8244516055835943`*^9}, {3.8244516959433722`*^9, 
  3.824451700038684*^9}, {3.824451734462139*^9, 3.8244518179843493`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"8e8e29f4-51a9-421d-85d9-155bcaa3642e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "twoDices", "]"}]], "Input",
 CellChangeTimes->{{3.8244516261388593`*^9, 3.8244516307247686`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"79be946b-ffda-459c-b457-804b0047e683"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.5, 0}, {2.5, 2797.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{40.96617293835068, 69.72150447630831}, {
           54.99134608765663, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2797]& ,
        TagBoxNote->"2797"],
       StyleBox["2797", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2797, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.5, 0}, {3.5, 5577.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{69.22150447630831, 97.97683601426596}, {
           23.83105153438531, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5577]& ,
        TagBoxNote->"5577"],
       StyleBox["5577", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5577, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3.5, 0}, {4.5, 8423.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{97.47683601426596, 
           126.23216755222359`}, {-8.069019796050014, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8423]& ,
        TagBoxNote->"8423"],
       StyleBox["8423", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8423, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.5, 0}, {5.5, 11004.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{125.73216755222359`, 
           154.48749909018125`}, {-36.99877527878141, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11004]& ,
        TagBoxNote->"11004"],
       StyleBox["11004", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11004, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0}, {6.5, 13790.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{153.98749909018125`, 
           182.74283062813885`}, {-68.22632226634038, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 13790]& ,
        TagBoxNote->"13790"],
       StyleBox["13790", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13790, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.5, 0}, {7.5, 16602.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{182.24283062813885`, 
           210.9981621660965}, {-99.74529646914574, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 16602]& ,
        TagBoxNote->"16602"],
       StyleBox["16602", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[16602, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.5, 0}, {8.5, 13908.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{210.4981621660965, 
           239.25349370405416`}, {-69.5489534739972, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 13908]& ,
        TagBoxNote->"13908"],
       StyleBox["13908", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[13908, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8.5, 0}, {9.5, 11301.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{238.75349370405416`, 
           267.50882524201177`}, {-40.32777077601939, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 11301]& ,
        TagBoxNote->"11301"],
       StyleBox["11301", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11301, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9.5, 0}, {10.5, 8289.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{267.00882524201177`, 
           295.7641567799694}, {-6.567048763626147, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8289]& ,
        TagBoxNote->"8289"],
       StyleBox["8289", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8289, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10.5, 0}, {11.5, 5569.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{295.2641567799694, 324.0194883179271}, {
           23.920721446768823`, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5569]& ,
        TagBoxNote->"5569"],
       StyleBox["5569", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5569, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{11.5, 0}, {12.5, 2740.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{323.5194883179271, 352.2748198558847}, {
           55.630244213389176`, 86.84218920474292}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 2740]& ,
        TagBoxNote->"2740"],
       StyleBox["2740", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2740, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.28, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{1.5, 12.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwBeKJrAt5JtS9cVzNcVkKRIt0bl32rP6NY45YxF4QXa9h
2/4cSAfJsF8B0b1LTv0E0WJTp6W8ANL5vcdaQXQMt9AUEL1gu4LgSyB9xLvM
G0RvjooNA/NX9ax5DaR/dK6S42x443hNI5qBC0ibuW4y4QbSef8NpwkA6X0z
bi4E0Vd+Cy4H0Z92CjALAukPemfUQPSXCj0rEB3maxQEou+d3m4mDKRrnefV
g+gpZjELQPQ0X6cPIPpbithfEC2w6zWvCEj/lwZ5EN2QpqAHoj903jcH0b+S
Sl1A9DftxRkgOuAlUzGIVtlRXgWi13T+awLRW6+emgqib55dvxBEq62ROQWi
38yW+QeitfpXcImC9J3bLAaiJ/N5yYkB6YeCn+xBtFoj50UzkH8nC98wB9L8
Gdt2WQBpxnlX5KyAdNw1OTUQXVbFF2sDpO9YSa6KBdIAPcfQGA==
  "],
 CellLabel->"Out[7]=",ExpressionUUID->"c3c119d9-855e-4fff-9d35-f3686fb6fa7a"]
}, Open  ]],

Cell[TextData[StyleBox["Average",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.824454377182543*^9, 
  3.8244543792399197`*^9}},ExpressionUUID->"abf3be43-d8a2-47dc-b85f-\
c1bb0360457d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"averageTwoDices", "=", 
  RowBox[{"N", "[", 
   RowBox[{"Mean", "[", "twoDices", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.824451830742662*^9, 3.8244518728349733`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"195d4b99-2ba0-4314-a2c2-af1ec6beae5f"],

Cell[BoxData["6.99993`"], "Output",
 CellChangeTimes->{{3.8244518624452286`*^9, 3.8244518738595324`*^9}, 
   3.825153333741984*^9, 3.8251535148247457`*^9, 3.825155129970193*^9, 
   3.8251557442852073`*^9, 3.825156046506588*^9, 3.825156900767706*^9, 
   3.8251571662667627`*^9, 3.825157280632886*^9, 3.825158281094411*^9, 
   3.8251587477657504`*^9, 3.8251588349903216`*^9, 3.8251636204458466`*^9, 
   3.825223925370347*^9, 3.8252257309127274`*^9, 3.8252281976529484`*^9, 
   3.82523921772043*^9, 3.8252393108678966`*^9, 3.8252393525909863`*^9, 
   3.825240088708699*^9, 3.8252403745333357`*^9, 3.8252405296502595`*^9, 
   3.82524072163894*^9, 3.8252445977716727`*^9, 3.8252451810327387`*^9, 
   3.8252454430406623`*^9, 3.825246082286972*^9, 3.825246184913824*^9, 
   3.8252463195404634`*^9, 3.825246460210902*^9, 3.8252465772060294`*^9, 
   3.8252466551655884`*^9, 3.825246755846332*^9, 3.825247045291111*^9, 
   3.8252471282659807`*^9, 3.825247187936223*^9, 3.8252472561563063`*^9, 
   3.825247406526581*^9, 3.8252475015948772`*^9, 3.825247825073017*^9, 
   3.8252482409740334`*^9, 3.8252483414434695`*^9, 3.825248437704914*^9, 
   3.825250546383278*^9, 3.8252508156416655`*^9, 3.8253175124850163`*^9, 
   3.825319616680747*^9, 3.8253214297832036`*^9, 3.825324278840288*^9, 
   3.825324337055668*^9, 3.8253288724844503`*^9, 3.8253970729614344`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"4f1e8f42-55a5-4815-8343-a0140be6e4c7"]
}, Open  ]],

Cell[TextData[StyleBox["Standard Deviation",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.8244543878017316`*^9, 
  3.824454395425413*^9}},ExpressionUUID->"1b1bfd27-c8c6-4b98-9ee6-\
fd1fbc41a3e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stdTwoDices", "=", 
  RowBox[{"N", "[", 
   RowBox[{"StandardDeviation", "[", "twoDices", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.824451882543895*^9, 3.8244519091479535`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"fd261e8b-45f6-43d6-9878-490fb1ab0b43"],

Cell[BoxData["2.4168012753191035`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAeIXQQ81JtS9cbzgv3fZs/o3jg9WJuwF0XUaru3PgfTN
WP4rIJon+dpPEH1/67yUF0B6Wc65VhA9Zb/UFBDdwqkp+BJI3ztX5w2i3T3S
wkB0ytHJa14Dab7kjXKcDW8cS94nMXABadEDu0y4gfQlK9tpAkDa49bDhSB6
W4XkchDddkmGWRBIfza9rgaivTqtrEC0j6dNEIj+sOiwmTCQPlu1vB5EM8ll
LADRN9f6fwDRYV7Kf0H0qYbvvCJA+tibHnkQ/eqIjh6I9n73yhxEe31ocAHT
NuszQDRvHF8xiC772FwFop/ZcjeD6Jxv16aCaMVbOxeCaHF1zVMg+mWB6j8Q
PV9lC5cokL4sulcMRDs0BsmJAWkFpV/2IHqzmOhFMyBtskX6hjmQrlbZv8sC
5O55D+SsgPS7GRpqIDqhTCTWBkjHLVVdFQukAcn+y/E=
  "],
 CellLabel->"Out[9]=",ExpressionUUID->"e12e8f79-0e43-45ea-9131-2da08898b782"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.3 Throughput Accounting", "Subsection",
 CellChangeTimes->{{3.824454550944148*^9, 3.824454559889942*^9}, {
  3.8252228781831884`*^9, 
  3.8252228791214714`*^9}},ExpressionUUID->"01ddf129-ea6c-4a93-8b1a-\
5a0c22f683db"],

Cell["\<\
With the Input data and the simulation results, the Throughput Accounting \
figures can be determined:\
\>", "Text",
 CellChangeTimes->{
  3.8237626492679753`*^9, {3.823762724583993*^9, 3.823762768834567*^9}, {
   3.8237628162075853`*^9, 3.823762819480095*^9}, {3.823763320012909*^9, 
   3.823763798217986*^9}, {3.8237641647813973`*^9, 3.823764259416485*^9}, {
   3.8237654455480223`*^9, 3.823765488313986*^9}, {3.8237762318660283`*^9, 
   3.823776232521201*^9}, {3.823781981528387*^9, 3.8237820215479155`*^9}, 
   3.824454522406938*^9, {3.824454566288947*^9, 3.824454588251487*^9}, {
   3.825151983138381*^9, 3.8251519855724754`*^9}, {3.8252223726394653`*^9, 
   3.8252223841649604`*^9}, 3.825222830769941*^9, {3.825225132462078*^9, 
   3.825225138092087*^9}, {3.8252252970454454`*^9, 
   3.8252253024587493`*^9}},ExpressionUUID->"b7d9077e-31ed-4383-a52f-\
3fa176c205e4"],

Cell["\<\
Throughput = (Selling Price - Total Variable Cost) * Total Quantity Shipped\
\>", "Item",
 CellChangeTimes->{{3.8252251852685227`*^9, 
  3.825225193549923*^9}},ExpressionUUID->"631e0076-9204-44fa-814e-\
93ecc80a980c"],

Cell["\<\
Inventory = (Total Ending WIP * Total Variable Cost)  + Investment\
\>", "Item",
 CellChangeTimes->{{3.8252251852685227`*^9, 
  3.8252252109863825`*^9}},ExpressionUUID->"b19b5c92-6823-40ad-887a-\
95a5c7667f37"],

Cell["Net Profit = Throughput - Operating Expenses", "Item",
 CellChangeTimes->{{3.8252251852685227`*^9, 
  3.8252252238618374`*^9}},ExpressionUUID->"7aa92fdd-bc94-4c35-8006-\
7143e69f4195"],

Cell["ROI = Net Profit / Inventory", "Item",
 CellChangeTimes->{{3.8252251852685227`*^9, 
  3.8252252360984545`*^9}},ExpressionUUID->"26fb5fee-ac19-49ad-b0a1-\
7f59fa2dad63"],

Cell["Customer Service = Total Quantity Shipped / Market Demand", "Item",
 CellChangeTimes->{{3.8252251852685227`*^9, 
  3.825225255976022*^9}},ExpressionUUID->"d592e3d6-bbd6-4f69-b715-\
b14c0dd447bc"],

Cell["Productivity = Throughput / Operating Expenses", "Item",
 CellChangeTimes->{{3.8252251852685227`*^9, 
  3.8252252678929873`*^9}},ExpressionUUID->"d92ee17d-ec77-4813-aa84-\
90275480b959"],

Cell["Inventory Turnover = Total Quantity Shipped / Ending WIP", "Item",
 CellChangeTimes->{{3.8252251852685227`*^9, 
  3.825225277395402*^9}},ExpressionUUID->"407015a3-919f-4d83-a4d9-\
82761c586ffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1.4 The Five Focusing Steps", "Subsection",
 CellChangeTimes->{{3.8252263157391768`*^9, 
  3.825226327269526*^9}},ExpressionUUID->"0319adca-74b4-4c92-ae0d-\
2bb94977c79a"],

Cell["\<\
The Five Focusing Steps belong to the core of TOC - Theory of Constraints. It \
is a focusing process that helps to manage the constraint(s) in a system. \
\>", "Text",
 CellChangeTimes->{{3.8252264320908556`*^9, 
  3.8252265467395935`*^9}},ExpressionUUID->"c438f5df-5162-4e6f-81ca-\
adbfe5b83287"],

Cell["Identify the Constraint", "ItemNumbered",
 CellChangeTimes->{{3.825226580711853*^9, 
  3.8252265866347113`*^9}},ExpressionUUID->"831e0a4f-1fc7-4311-acc6-\
bf826b241f96"],

Cell["Exploit the Constraint", "ItemNumbered",
 CellChangeTimes->{{3.825226580711853*^9, 
  3.8252266049885254`*^9}},ExpressionUUID->"238870df-a21e-4546-9490-\
9cef3db10db5"],

Cell["Subordinate Everything Else to the Constraint", "ItemNumbered",
 CellChangeTimes->{{3.825226580711853*^9, 
  3.825226633723248*^9}},ExpressionUUID->"ab2a673d-0a91-4448-8c5f-\
9a4b8bbb8c64"],

Cell["Elevate the Constraint", "ItemNumbered",
 CellChangeTimes->{{3.825226580711853*^9, 
  3.825226646890896*^9}},ExpressionUUID->"bfb7254b-ae9a-44dc-8fc8-\
86849d9d9883"],

Cell["Prevent Inertia from Becoming the Constraint", "ItemNumbered",
 CellChangeTimes->{{3.825226580711853*^9, 
  3.825226659253433*^9}},ExpressionUUID->"34234ab2-1c0f-4670-a165-\
a02403b9d0dc"],

Cell["\<\
In this simulation we consider all steps during the Dice Game.\
\>", "Text",
 CellChangeTimes->{{3.825226733090206*^9, 3.825226783805303*^9}, {
  3.8252403900737953`*^9, 3.8252403906957955`*^9}, {3.8253231161393833`*^9, 
  3.8253231279738874`*^9}},ExpressionUUID->"848a480e-b8e7-4a17-b6fd-\
c1f0088d0e4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Input of data", "Section",
 CellChangeTimes->{{3.8020660318726673`*^9, 3.8020660323116817`*^9}, {
  3.8244475416197653`*^9, 3.824447542982802*^9}, {3.8252222555947194`*^9, 
  3.8252222588102365`*^9}, {3.8252228873379917`*^9, 
  3.825222888020122*^9}},ExpressionUUID->"434e09da-b8dd-4be0-a21e-\
2f63df69b138"],

Cell["\<\
INPUT: number of time units in the observed period. This can be seconds, \
minutes, hours, or days.\
\>", "Text",
 CellChangeTimes->{{3.8214556367893314`*^9, 3.8214556704376335`*^9}, {
  3.823085640460788*^9, 3.823085694310707*^9}, {3.823779269979245*^9, 
  3.82377927377195*^9}},ExpressionUUID->"3cb86dc4-86a1-45f3-879a-\
b33b6d42609d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeUnits", "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.821455606499711*^9, 3.8214556115141535`*^9}, 
   3.8217907512257643`*^9, 3.821884425643077*^9, {3.821884637475153*^9, 
   3.8218846411054926`*^9}, 3.8229223382971888`*^9, 3.8230826337231708`*^9, 
   3.8230886372066126`*^9, 3.8230887668999534`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"2e67312a-b1eb-425f-92e5-086f13a1932e"],

Cell["\<\
INPUT: amount of work-in-process in each queue at the beginning of the period\
\>", "Text",
 CellChangeTimes->{{3.8214557746785803`*^9, 
  3.8214557953455696`*^9}},ExpressionUUID->"87ac37ad-46f5-4c16-855f-\
c474ce614226"],

Cell[BoxData[
 RowBox[{
  RowBox[{"startWipLevel", "=", "15"}], ";"}]], "Input",
 CellChangeTimes->{{3.821455702445681*^9, 3.821455709225357*^9}, {
   3.8217908460788994`*^9, 3.8217908484479847`*^9}, 3.82188464654106*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"7940d3e1-1be0-4cbc-970d-96df8c3c7d86"],

Cell["INPUT : Total Variable Cost per produced unit [$]", "Text",
 CellChangeTimes->{{3.8237629032444916`*^9, 3.82376298363424*^9}, {
  3.823763017651876*^9, 
  3.8237630253061385`*^9}},ExpressionUUID->"dfb2a934-0c7c-4d9f-8720-\
4a12fc0cf939"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tvc", "=", "200"}], ";"}]], "Input",
 CellChangeTimes->{{3.8237629946120143`*^9, 3.823763008577294*^9}, 
   3.8237752253780155`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"3a6390e4-558a-49d3-a8e0-988fd202c164"],

Cell["INPUT : Selling Price per shipped unit [$]", "Text",
 CellChangeTimes->{{3.82376304627538*^9, 
  3.8237630778626194`*^9}},ExpressionUUID->"e4321bdf-6901-4dfc-a24a-\
ca58bb014ae9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sp", "=", " ", "400"}], ";"}]], "Input",
 CellChangeTimes->{{3.8237631097876596`*^9, 3.823763129023901*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"58d7f74e-2bca-4f43-a476-39c47ff02f71"],

Cell["\<\
INPUT: Operating Expenses (oe) for the period. OE is typically the summation \
of Period Expense + Carrying Cost + Improvement Initiative Cost  [$]\
\>", "Text",
 CellChangeTimes->{
  3.8237625322659173`*^9, {3.823762588332061*^9, 3.823762627999469*^9}, {
   3.8237628066663957`*^9, 3.8237628128289413`*^9}, {3.823763150008704*^9, 
   3.823763231797924*^9}, {3.8252253331945815`*^9, 
   3.825225337108922*^9}},ExpressionUUID->"3277686c-d463-4c38-b630-\
86f1a01f1148"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oe", "=", "30000"}], ";"}]], "Input",
 CellChangeTimes->{{3.823762571470886*^9, 3.823762577806634*^9}, 
   3.823762758720475*^9, {3.8237752303949723`*^9, 3.8237752306258836`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"4f79cf7f-9d1c-446c-a054-fff0b9c7270a"],

Cell["\<\
INPUT: Needed Investment (invest) in the period in order to fulfill the \
order(s). [$]\
\>", "Text",
 CellChangeTimes->{{3.823765467244507*^9, 3.8237654779875765`*^9}, {
  3.8252253459984727`*^9, 
  3.8252253569172277`*^9}},ExpressionUUID->"899d6ffa-457a-4162-92b5-\
4430a340300a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"invest", "=", "20000"}], ";"}]], "Input",
 CellChangeTimes->{{3.8237655106665363`*^9, 3.82376551691054*^9}, {
  3.823779005551066*^9, 3.8237790065545473`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"e714a18a-04ab-46e7-908a-c6a5fab26218"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Calculation for Balanced Line", "Section",
 CellChangeTimes->{{3.8214561974537773`*^9, 3.8214562194485636`*^9}, {
   3.8244546258785143`*^9, 3.8244546263665714`*^9}, 
   3.825222966057498*^9},ExpressionUUID->"0d923d96-bd3a-4248-a2ec-\
dd00ba2c1b1f"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Ql0VGW28P28fbWdwAlQCIMKAgGiDDIoKgQSUMIYkHmSwTAHGcIkImAA
mUXGAAFEBdE4BTAgYGuL2tpi3/uK937davvdbrv1fn21l29729e1eq3+TtVT
OTk5U506Z6f2s59n19qLFSqVEEIZwt+zf88tk+cOLfxZRkbGgsuNH4ZOWtxr
/vxJS4dda/xkeNGCGdOKHprar2jhQ9Memn/n5H8x7mxlPPbcpRkZsZczXh1i
zv96tcB/flY9Q73mX8x5Tcwwr7nEZR6wzaWeM1zMz5PNZa+NSDqXV8/IxFS4
zxUVo5LOldUz2nWucpkxtqnjOWPF1A0yx8cZc3WAueb4eP+5tnomeM111TPR
da53mQdtU8+cE7aZZJv6fjNZTINkc8OJKf5zY/VM9ZqGzjn5kOs0qp5Cr8m0
zzTbNPab6WKaJJumJ2ckn9dj0+z1mUnnpuqZ5To3u8xs29ziMnOs09xvisS0
MKfSa+aKuTXZtKx8OOm0qp55rtPaZebbJss5p8QssE0bl1lom7aeUyymXYDJ
PrXIf26rnsX2OZ2Y2+2zxGvau8xS63Twm2ViOnrOI2I6BZg7Ti9PzBtJpvMb
j/pPl+pZ4TVdXeYx63Tzm5Vi7nTOGdusEnOX36wW0z3Z3H3m8aRzT2JKvOZe
l1mTmLOx6eE3a23T03PWickJML3OPuE/vc+uTzq55pzb4D951bPRdfq4zCbb
9PWczWLuCzD3n9tinzfdp9+bW5NO/ptP+k//6tnmNQPs85RtBvrML7YbMyjQ
7BAzONkM+cXOpFNQPbtcZ2j17PaaYW/ZZo/XPOAypdYZ7jd7xYxINiPf2pd0
RlXP/sS87T6jq6fMa8Yk5oDXjHWZg9YZ5zeHxIz3mV/GZsIvnw4+E3952H8e
rJ5nvGaSfZ61zWSXec42U97xmiO2meo3R415KMAUvvO8/0yrnmNeM90251+w
zQy/edE2M+1TbptZfvOSMbMDzJzzL3vOu7Epqp5Xks7c6nnVdR52mddsM89z
KsTM95vjYha8l3ROiFmYbIrfO5l0FlXP666z2GUqbbPEnPdtc0rM0kBzWswy
z3njvffe+3P8FjCY/K8wwcSzmaQnmARpJmoHkyDNJGkwuQY/mNibSXqCSZBm
UsvBxN5M0hxMgjSTpMHErZnIHkyCNJOkwcStmQQPJvZmom0w8W0mSYPJMpRg
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
LSGCCTMm0YLJUrruKwhjQjGYsPsK4r6CbOXgua+yMCYU3Vd5GBOK7qsqjEn4
YAKylUMxmDBjIg9joq37uhw7mPhkExDGxBZMXLOJ1834V/+Ej56yMSYBs8n/
/OMn2Gxi3B68sMM1myS9Xfz+D1bGZPKFnUnf5PMfvjGzic91JtbbFz98YzVM
Kr/5OPhHaMkm7sHENZs8ApFNkt7Kv3rfyphs+exEwDd89NNjdNxXaRgTXd1X
kK2cSMEEhjHBcV+rmwlaMIFgTCK4ryBbORTdV2ZMtA0m0Fs5WMFEBcaEovsq
D2PC7ivFYFKEH0wqsN1XiK2cSMFEC8YkYDappWCSUjY5+sd3ss7Msbmv6377
svGqT77/zz2/P21lTIyXbUfwFH/ytOm+2tqINZvcd3713//xk/G2z//xvPGw
tmcfFozJ/e8+fvH7P9R4q28u+GQT4508/9W72WfnGfP6Nxdsr7Var7Z3+6cf
v518Yaepl4hLRMxssq/mdSnGg5dcfE4s40yJbe58Z33t1I93mdnEdhXHr//6
eYdzC+ufmDT1491fWDQVcYtnE8+LTEJkkxtTzCbf/fQ3sY8z+P0Nn/6fP1pf
9fsf/svqvn730w/W157+5l+7vLk082Rh1zeXln/1K+ur/v3/fKWf+8qMCTMm
hN3Xzuy+4m/lIAUTaRgTbd1XVRgTgsGEGRPa7usR5GCiBGPC7itF91UexiRt
wWTlr35hjDWbwDImzmYSPJv8M76ks+63Lyc9KEfkkSfiRcW8VWWTsf7ZxOdw
4XZnH67xVlXZ5Jrj4xdffMb6qr//46dJF3ZY3VcbV9vv3TWimdx2dr71/m9/
+puNMTF++qcfvz321bvirBxrYzEe3P7sAqv72uHsAmseqfzmY9FMll58zvqr
fPHDNza6xBZARDbxCSZinFyJz1k5tjZiZpOGjmzy5x+/s27iGC9bf1Pf/fSD
eSzOtI/3Wt+w/Ktf2QwTm3mis/sKtJVDOJiAMCZ4wYQZE3ZfCTMmFIOJKu6r
CowJu6/aBhMQxoSi+1oIEUyYMYkWTF6j676CMCYUg0ntua+uwcSYVZZsUtvB
JNVsIm4TPnrKP5i4buIUf3LYdF+TZBNHMDGnxltZcFdbNnG6r7YLTuK8SSyb
2N5Q5BGfw4WtAeHtv3zqdF+tl478+q+fi8OFbVVk0+8qnKfkWB9gPD5pM3FV
Xn0OF3ZmE/NAYdurln961Ia+fmE5H8e4mdnEdj1J1/h1Jlb39dFPj1kfMPT9
jVIxJqGCiQqMibbua7b2wQRkKydaMGHGRHfGhKL7mg8RTIC2crDcV4CtnGjB
pBTbfUVmTPCCiSyMibbuK8hWjsbu63HsYKICY4LuvroGk1WBs4m9mYQKJq7Z
xHa48O7fn/6ff/xf6wM+/+FrWzMRZxAb93/l7X4Uf3LYCzCpziZVwaTd2YdL
v3zj4vd/+Nw76byeLJtY3dfXa9IiZjaxYbBLLj7rFUzEeH0wrrcYb3JikjOb
uJ4sbH2AfzbxORzHNZi4ZpPlgbNJo5MP/d4jm/gfoOO8PfrpMfkYk/DBBIQx
wXNfZWFMKLqv8jAmFN1XWMYEL5ggMyZ4wYQZExUYE23d15H4wQSZMcELJsyY
qMCYaOu+FusaTGAZE9hgEiSbRGFMnHOlbzYRjMmEj56y/fu3z/lVZjP5xV8u
Bvknc/JsUnWFSemXbyQ9quafybKJ9aAc12xy3fEJ1znut2aT613mwSC/U/MW
OJtMDphNgp0pbA8mobOJ6b7WWjZRiTGJ4L5CbOWgBZNKZPcVZCsnWjBRgTFB
c18lYkxSDyZn2H3FDiYybuWkzJjgua/aMyYRgslo9GDyNmH3FWgrh3AwAWFM
8NxXZkyQGROKwQSEMXE2E59sAh5MrvTNJlbAxHbVh6m/fvjdZwH/yeyXTb65
YG0mAd9hsmwywTqOPCKyyUTXbOIaTMQE/NjEbePvKuq50SWuhwtbH+DMJsEO
xzni1Uw8s0k8jzizSaPqZhLLI67ZxEmX+N/+/ON3mjAm7L4SCiYyua/LsN1X
ZkyQGRNt3VdVGBNt3VdmTFRgTEIFExUYE23d1znaBxOQrZxowYQZk0jBxCub
QDEmtmAi8ohrNrkqWTapUzFmYs2rUD75/j993Ff/bGLqJdbrTP7047frf/dK
u7MPC/fVGOtb+WaTj5Nlk8RVJcYL1vuPffWuVzBxZhNTfLXMJOt4ia9LLz7n
PCin5nv+jX8w8c4mLsHE1X21buJ4Z5NC12ziI74GOCtH5WACy5jgBRMVGBN2
XykGE3kYE4ruK+xWTqhgogJjoq37WqB9MBmFH0zQGZPwwYQZE23dV5kYE3ru
K+xWDl4wSetWjn82qb1g4ppNHAflxIST/6m5NdP3/Ko6FWOO/vEd651mMBHu
6xO/fcX62iDZ5MELO6z3L7p42Dwrx5jss/OsrwXJJvnvrrHeHz8cZ76tmfz6
u8+NEe6r9Yhh48Edzi1wDSb1aq7h7PvyrPVX+fT7P9oOyvnor19YH2BmE59m
4pZNjno1k9SzSaF1vLLJ1s9OWO+Pn6QDEEwkZEwouq8tIYIJMybRgslSuu4r
CGNCMZiw+wrivoJs5eC5r7IwJhTdV3kYE4ruqyqMSfhgArKVQzGYMGMiD2Oi
rfu6nFowsWWT2tnKGW0bn2zS5kzRnt+f/vanv1kf8NWP34qzck5+XeN4GuOn
bc/MrVsx9r7zq42XbT5JdTY5Pq74ons2WVTz/ovf/+H+d0tEMCn98g3bh2F1
X/2zib9hYnu3X/zwzZQLu0Qw2fi710QniSkl8Wzy9l8+tT7YeO3G31V0OLdQ
pBLjhaUXn6v85jfG/ca7NbPJgPfW/bPmzXhMx3PFDU5MXnbxiPXwHfO1/sHk
hsSZwkmySUPLpJJNng+WTaZ1fXOp7SM//c2/zfh4n5lKjJcP/L+/uPDX3xtP
BuMFvGAiDWOiq/sKspUTKZjAMCY47mt1M0ELJhCMCbuvzJiw+4q2lYMVTFRg
TCi6r/IwJuy+UgwmRfjBpALbfYXYyokUTHRnTIIEk9W/esuYmtkEkjFxNhNn
Nkl6e+K3L7seMex/S2STuGHilU1sRwz736zuq1c2ua5qvLLJ9ccn7qt5mI7r
LZFNTjzY/721QbhacbNecPLp938M/ls7lSyb3JjIJoFokWkfl/q7r6fDZJPE
Ms47//0fAX9Tb3zzb/TdVxUYk2juKzMmhN3Xzuy+4m/lIAUTaRgTbd1XVRgT
gsGEGRPa7usR5GCiBGPC7itF91UexkQG99U1mDiySa1s5dgOyvE55Nd5+8Vf
LopmIsZ2qYbPrfjiYdN9XeSdTYIbs1XZZIJrNrmuuplMTEq/Oq/3sN0ufv8H
EzCxbdz43Kzu69SP9/j3Fuv6j082sZ6VEzCbGA9z3cQxz8rxySbiwhJHNqk2
TLq9ufTPlo/c5+aTTTRmTAi7ryCMCV4wYcaE3VfCjAnFYKKK+6oCY8Luq7bB
BIQxoei+FkIEE2ZMogWT1+i6ryCMCcVgIo/76hpM7NmkNoPJlR7cq9ft25/+
Zl5nYjImEz/a7lUDvvrx20++/0/zp8VVUIlPNhH7OH/68VvXd2j8Qm9ZDju2
buJ4ZJOJ5jizidV9bX92/sXv/+D1G//Tj99ZDJMYY7Lvy7NJrzn59Ps/2NzX
Tb+rcH0r4879X5575OIR8x7XbOI8XDhiNjHdV9dskmkZr2wiNnG6vbnU9gDX
24yP99f2Vk6oYKICY6Kt+5qtfTAB2cqJFkyYMdGdMaHovuZDBBOgrRws9xVg
KydaMCnFdl+RGRO8YCILY6Kt+wqylaOx+3ocO5iowJiQc1+9mknSbAIYTMSs
++3LPv/a/erHbz/87rM9vz9tCyZ1qnzXtmfmnvz6wleW1vH5D18//8fzxv3m
acJ//8dPD17YYWaT+9993LxMxXiVoF9N39UY4w2tMedPP3771l8u9nu3ZPKF
HWZ52PvlGTOb9Ht3jfUdWukS88Qc8w2NR/Z/d43zrJwlF5/79XefW9/Pxe//
sO/Ls64H5XQ4t9B41aff/8F6vY3xJl/88M3bf/l00+8qbAfliBn43hO//Mu/
f1f1JsYLxk8HvffEDSemPGS5HGX/l+f8g4mYQe+tD7IxNO3jvQ1PPrTlsxPm
g7/76Ycuby4xLymxvarrm0sza2aT8q9+Zb633//wX67u64yP973z3/9h6yd/
/vG7f/8/X7301QdD398kv/sKwpjgua+yMCYU3Vd5GBOK7qsqjEn4YAKylYMX
TJgxUYEx0dZ9HYkfTJAZE7xgwoyJCoyJtu5rsa7BBJYxwQ0m/tkkOmPiPFk4
PmNsU8dzagSTJFO1kpN0rMHEda6tngleY9vKcY7jZGH74cLirJzE+J4sbDso
xzEuwcR1grivrsHEy31NTJX1aptG1VPoNZn2mWYb74NyauVwYZLuK8RWDlow
qUR2X0G2cqIFExUYEzT3VSLGJHX39Qy7r9jBBHsrJ1IwqWomeO6r9oxJhGAy
Gj2YvE3YfQXayiEcTEAYEzz3lRkTZMaEYjBBYUwCZhOKwSRIM0kaTK7BDyb2
ZpI0mARpJkmDSZBmUsvBxN5M0hxM5GFMKLqvsIwJoWAik/u6DNt9ZcYEmTHR
1n1VhTHR1n1lxkQFxiRUMFGBMdHWfZ2jfTAB2cqJFkyYMUlrMDHm8Q/etmUT
8K2cFINJKs2kVoKJZzNJGkzcmolewSRIM0kaTHybicrBBJYxwQsmKjAm7L5S
DCbyMCYU3VfYrZxQwUQFxkRb97VA+2AyCj+YoDMm4YMJMybauq8yMSb03FfY
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
15vH9BafhOxHxjgvKem2d54oJ/W6tFKGMemwfELitzxvuD9jYj6yy7pC2RiT
NLuvrcfen/ifv49OcTImeWWPiN2WG7u0JcGYBHFfBxxdJ37L8e0bF8akWe+u
xms7TH+gUdfsqmzC7mvMes15bJb41OXveNTrcGFxzcllda8ad6KUEGNic1/v
nDE29jdIbvfp51+wZRORRzyyCXnGBMR9nfxiqbia4sasW81gYt3KaV/QT3xW
R+5+InowST9jYskmSdzX6eUHxadi8Oql0jMmmgYTkK2caMHkPF33lTRj4mwm
PtmEEmPC7itWMKkMH0zkYUwouq/VzcQNes1+OvG9a+OpuV7ua/NlQ8VjsrY8
GCqYIDAmVve15bLhbdaME2HEK5t40SXdXloqHn/z1L7RGROK7utdzyQ2r28t
zPfSS7KXjxGP6bxtJvVgIibv1RLxO2pdONCffs17dU3iv47CgbUVTPAZk+Tu
631HHk+EpmkFXvRr1xVTxGN6bl8oOWNibybe7qu44KRR13ZO8TVvR2w1o07m
DcOOb/PPJkq6r27NpPqInFt635kR11993Ne+G4rFE8Z4wewkAlYtOLjOVkua
595l3G/8aKslQw+uazOkj8mxNul6e++Vc2yRRLztPQun2oLJvQunim5jCyYT
T+zrOH7I1VUqS4Os5t1mjJ14Yr+zmYw59pTx5saMeWG7NZtYC4kjmwAGk3Js
9zXkVo5Jv4oqcnndOjWbSQ3G5NrGDWN/R3frJJP76tlMbOirazZxPStHrOc0
bNMqWDA5pbn7CrKVw+4rXjAhxpi4jjObaMuYaOu+ysSYaOu+RmJMbNNsbr74
Ru62p2d76SUdyhOXyDYafY8ZTG6e29+45/qe7WzBJHvPtMS/nvZMswWTm+cO
uKpVpnjt5ZnX3Tiwc4eni6zB5LY90zPiEKszmIhlmVvmDrAFk6w148wFHOMx
xsvZW6f4HC7szCb+p+Q4sokUjEl6gok4Kyfr4UQ06/7sEq9s0uOVleIxt4zp
bRaSG3NiBGKbecNszcS4JyPOrtpqSc4rq28Zk3tllTd7deumrQr793pltbWZ
tJ0XYyIa5nSwRZLuexckPsi9C2zBpN284de0bipea7zzZoO693jukaQH5ZjZ
JKtwoP9BOffuS/zLrsu6abXnvkrImNgOyuk4P5HO7jvyuJf7OrBic+KzOq6f
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
1nPSHEzSz5jYgokY8dm4bVqB/8nClmtIEteWWLJJDcbkdkc26VP2qLjHbCai
igyp2Coaxb1PzLFlEydaIu63ZhPxtrELS2qu5DTqGou9bcf1twaTOO7arlHX
bHEyjvGjcY81mIhpNy72RDV+NK8tMbOJkoxJ8GDik01cxVdLNjliyyZTPbNJ
wn0Vjxy4c6Utmxj3iFeZeSRANkkUkqaJR451MibikUN2rRbNJG/l3AwH9Jr4
C646mySWcUYc2jip6tqSyScP9N+49IZ4col9ijYukzmYFEG4r85gIia3eKb4
JCQ9XDjx1X7mg8myyYmqR1ZnE5EyxIUl1q0cEUPunDjSK5uYKzm3dIv9fyVr
NhFrO1UXltglk4ZZLc1scv+ixF9ettu1jRtNPrzLZEzMbCJu1zVu1LzbHc3j
v25GPJ4YD6DImEQLJm/SdV+ZMaEZTDybiS2YOLKJ3O7rSfRgogJjEs19ZcYE
yX0N0EysbcQrm9jcV2c2aeqSTR6zZpO2WyaJPNKs6pFO91Ukjtg1JJ7ZJLGS
I+43s0n21oQt6WRMzHNzXA/KuTlZNjHd1ztfWlanVeOM+PUw1ktN0rWVk9Zg
4tVMXLOJ60E51mwiIknNbFK9j2M+0owk4pGtCvtbm4lIIuKRXbfNds0m5j6O
M5u0Tjwyy8mYGHdmVFmvzmaS9+oasdpzZWZ926Um4goT88Rh89agS9Zd2+ZC
MSZ4wSQoY+I6P7dnE/dTcoJkExFJnNlE3NOwSzun+2rcabzq9mnDUsomo97a
l7s9cSG9kzFpPz0G6TTq2s56hYk4Gcd6q5N5Q/cV0yzN5MCgo7F/sv287lXD
jj+VLJvAb+VI5b46g4nJmCT+Qkl2uLDYiInbJkGzia2NNMhqbtxpHVM48ckm
4vISZzYRPzU+KqGaWEe8SmSTB0+WiVWgEYc2emSTJIzJ5JMHr4lLpzdktUjn
Vg6K++oxFWY2SXq4sHiYbzZJMCZVj0xkk9G7N4h7nO5rz5mxb2Zu6dbJmU1s
7qszm4hHjt290cqYGDN29ybxKitjMm7PJutxOYNXLxUlJwbhVh0rbGaTqmtL
EjllRvkhceXJdY0bYQaT9wm7r8yYgGzlaOu+WprJb2zjk02UdF9lYky0dV/R
GZPwwQRkK6f2gokY55KO61k5N8QXaqwrOTWzSbX76swmwkW5pM7lcdXkVjHX
xkdcMZLIJmdWtttqyybVB+WI+81sYrwg7rm26l2ZI4QTWzYxq4hPNrEdLizW
c4yPsGPpbLqMSZRg4lzS8TlZWCzp1OvSuo9LNqlBv7ZyZBPx0ysz6wnVxJj6
VSNe5cwmNvfVmU1EG7m07hVCNbGO6B7WbGJtI2I9x3jMPfuKbcHEdlBOn1fX
dlw+8crM+okPct00qRiTtAUT0UlqLul4niwsFmqMh5mMyY3x4mFmk+Ge2STR
Rn5e90qhmlhHRBszm5gxxCebiINy2k97QNwTv4akxgjhJH5EjsvJwsb0XD9X
xJCMOAkrmolZSLoumGBlTBzZRHbGBMR99TpZ2JpN/E8WTny5XjjFXMkR9ziy
yVGvbOJ1s56PY8sm5kpOt/jZwRmObOJzG35o4/TzL4hDhztNKKh5prCZTcYF
OSvnrhnjxOMpMiYRg4kYC1rid7jw1PLEf9ejdq93yyY1DsoR95vZpMfMxHcs
N3frZMwtlhHCiTObjElkk2rGxJZNxu5ObF01zGpprt6IMYUTf8ZkyuFd4mHd
J46yZRMnYzJyc+IUs6mHdyvDmFAMJiW6BhNmTFybiVc2YcaEEGNC0X2F3srR
0X31OlnYlk18DhcW6eP6nu26umSTGocLt/XIJj63qvNxrNnEfriwuN+STfr6
v8/6OdmuZ+W4ZhNbMDGbSUaVBBstmJBhTPyzif/JwiKSNMxp75NNRCTxyiY+
t+57F9TMJlm2w4W9sonPLXvecOfJwiZpYpVgncHEFk9EObm07pWSBJPaZkxc
D8pxWq+uJwuLhzXt3dm8tsTMJrYDhS3ZJHGysMgmPrc7qs7HCZZNYpeXmNnE
69asdxdnMLFu5dxUdf2JYEz67IidvXV965tt9Kslm6TMmOC5r2BbOU73tXG8
ctTPau7TTPpuSFw1NPTguqme2eSoGK9sYi7p2BZwrGNmk2mWZuKTTWIn45jr
OfGVHOvMOP9C027t/Z9XGbHLYFr4Hy6cLJtIGkzCMSauhwt7ZJPjtsOFzUgy
4fBTjmxiP1lY3O/MJl63rLwe5kqOuGfM7o22M4XNbGIaJv7v8/K6dbyCibmV
IxZwjB9t2SROwtZgTOadetF8la2Z4AUTZkxUYEwoBhMsxiRINqEYTJrhB5M5
2O4rMybIjEn63VefI3KaTM0Vf+F2LF/oGkyM6VieoB5untvfJ5uISOKVTa7p
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
ImcwETOotEyG58mgHQcCNBOsYKIdY+LaTIwZfeg54w/r8fxCrGeLMcZz1fgY
Ru17Lp2Mibbua7BmUh1MxEzY/4IMX1XG7n5Bz2DCjIk8jIm27ivIVo5/MPHK
JrK5r9BbOVjuKzpjomkwkYcxkdx99WkmxvR4foPxXcHEiSVY35aI7fKcZ7fg
MSZkgkmtMibOYCKm3ws7ZHiG9D+yWz3GBM99jbqVU3MOGvPASwdkeJ4Mf/4Q
u68yBxNjZp0vn1p5zPjDGla4GevZYsy4SWuNj2FKxYuk3Nfj2MGkVhgTZzAR
M+u1Chm+qswsr1CMMdE2mIBs5VB0X7fhBxOJGJOk2YQZE3Zf5WdMKAYTWMYk
zcEkMafX9CreZ3xj8O1V16T/e5K/X3pZ3ty9MT3j1Hp2X2ULJok5+1Tv4v3o
z5DBZ5QKJtBbOVjBJNFMjBnzi4Poz5Pe8/dPeNMOm7D7isiYOIOJOX2WxC5P
+qxB0/Q/W4z5+ur6sTPNi8uKzr+softaDBFMgBgT92AiZsm7p/KKD2B/VSl7
5PyZWggmb9J1X0EYE4rBhN1XEPcVZCsHMJgYs9eSTfRkTCi6r8yYgGzloLmv
EjEmwYJJYtbkrN2FtWb+XvPbY7DJqj3yMCbRggltxsTRTJ4Sk7euFPcZ0mf1
PiqMCZr7CrOVEyaYmNNvXRnu8+T+xw9EZkxSDiawjAlaMKk1xsQZTMQUbD1s
/JEdu+O+9D9bjDGepcavPnjDYWZMJGFMPOaNgvXP4X5VGVzyrMzuKzMm2rqv
zJhE3Moxg8lez2yiRTBh9xUkmIBs5eC5r7IwJpK4r17BREzP0q3G9wbr+05K
/7clO3qOjGWTHdtlCCYg7itpxsQZTMTct3cX7jPk/l2l6QomzJiECSbj4jNk
Xxnu82Tw7oOau6+F+MHE3kycwUTM2OeOGH9kiwseTv+zxZjH8wtjZsWh55UJ
JvIwJlDBRMyDB17E/aoyfm+5ZowJmWCiHGOCFUxkYUzSHEyszWTvhU8d2URP
9xWWMUnZfWXGRNtgIg9j4hNM7j0bmx4vxXiT0VOeSP+3JQ+NeyyWTY5tZve1
lrdyggcTezMZ+OZT+S/vwH2GDHhxd9itHE2Dyaj0BhMxI147iPs8GfnSIWZM
5GFMvIJJfF4qfCP2z+H82Tt/uuTS9D9hhhVuNn716afKJWZM6AWT6Fs51mby
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
ZA2YBK7cOH7jrff/z798/PHH//Zv/3bp0qXr16//6U9/AneEN9//5wPXb/qC
8ASXxqR16s1Tb7/3q3/9V/Dt/vznP4PvAr6X8K1/85vz7/6kferNwJW3PAhM
8GpMyAETj2pM5MxEjk08qzFh0fsa7g5gQrorRwxMFp2qzDjfPfn/s3fe4U1c
6eLOn/f53b2792aTkNASUsimbwoh7AZI2/SEHiAkhACh95CQQOgQCKH3Du4F
3HuVrF4tq8uSLEuy5Sbb2BgXbIN/Z+ZY49GoWJZmLMnWPN/jZzQazdjoQ2fm
1fe9RyMBdzT379/ncrkff/zxc8899+KLLy5durS6uvrevXvVdbWJUuayoqt4
ZuIdMJlFO/s7L0mkV925c6ezsxMMNO22Bd7sgBWVUX9GlDWffiGkMXFeZOID
MJnvrfd1ISNsLy+FrZG5yZOauto0GW8TK853jcliRvgxQWaxXuMmTzRGwxVx
wXJmVLBpTIay93UNO+GoIJdXqnCbJ3VZctFOTrrvwGQjO+m8iCYt07rJk1JT
eaSE9TM7JaQx8bvGxA0wOSqgp8qLY0v4v/MLqPa+7uDlnxOxUhTFV4o5u7h5
waIxCUZgQm5XziEB96JIkKOUJ8tKTgn5gwBMwovF2QpFjKT4KJ/vHTAJHI3J
EPa+nhdKEyRylbkCfOj39PQIBILPPvts/Pjxzz///MqVK2tqasDGW83NAr0h
uljuOzC5IlRkSFVlVTVdXV3d3d3t9gvYAsa+yjprgVJ7XaQMBI3JsPW+xvgf
mJChMfEBmHjXleMGmwQzMAkUjcmw9b4OAY3Jaub1NDm3tt4KPvzBLQb4tN+6
detDDz30yiuvvPDCC4888khGRgb4/Af3I+BZg8V8rTj/26KLXnfl/MqJpWmK
bzU1EW5w8AvYDp5taWkR6JW/85Nm08+FNCZ+15hsYd/IUgjqPMuTcktFtISx
mhntZZFJEcJnGBqph3ki0quPC7KWMCOHm8YkAL2ve3kZ+cpiD/PEaAEXCdxf
2CleduWwEo8K8jilCg/zRFJWekFE38RJGQLAhJSunMDxvu7l5iXLRHVNt2BR
famlIkzC3cmhqivnEI+Wq5LVNzWBczW3tLB16lNC5naOc2wyJDUmQep9PcHn
ZilkVvSNA4veYomXSo7wOV515fQPTM4L+HS1ugE93e07d/g63VWx+DCfR1JX
jr+8ryR05fgGTMjWmIhksSVKsd5wp7UVVn2Anz/99NP/+3//77nnnnv66af/
+te/pqSkgI2wFKTWWk9Xaa+LZF525YiUiSUqhdEMxhZwNEjmnY47cKQrNZkz
ZJprYiXGTPznfQ0UjUkwel8DR2MyyMAERAoOmwSUxiQYgUkAduUMW43JQIHJ
94zLkVKaqaoS3sLAj3owrPD5/E8++WT8+PFgxFm+fLnFYoHPwrsPsCIr1x4T
pH1FOzsgYLKaFZ4oY9fU1eJP52aBp2tobMxTCn/hxHrWlTNMgQkpGhNXwGQd
KzZexvIiTxRG/Tlh7tKi8AF15Wzh3EyT82usdQPNk0KVZC8vdVFRSGPiH43J
b9y0ZDnfjPpnBpQnKmPZNXHRJrRnx3ONyT5eZrZCXDvwPGGoZUcEeetZpGlM
ghGYkOJ9JaUrZxc3N1LCK6u2EIrqwRtWXK4/J2Lu4JAJTA7wC1MUksq6WkJR
vbWxIVejOMyn7+AOdleO/7yvwaQxOSbgJkgl5dXVjs0XUmN5eLHoCJ+EIhMM
mJwRCLKVSktdnWPzRVFp6QWh4KiAHyAak2D0vpLWlSOShYtl7FJ9A+oVQT43
0OX+/ftw3AGDzgsvvADGndraWvgseCvv3bsHdjBV1+QqtddsZSeeAJNLQkWs
WCHUGVruIHwGjl/ul7to6UtrW5vCVJFQor4qVg8JYDIUNCa+AZOhoDHxEJik
9I9NQt7XYAUm75MBTEjpyvGf99Wjrpx59HMnhRlqswFcD4ARhPAtLRhcGhoa
RCKRXC5vbW0l3JKAh2DEaWtrY+tkO7k3ZiJ4xAkzwQOT74suX5PkG6sqwbmw
cY1wTFdfFoPt4HQ1dXU35azVzPDA15j4D5iQrzFZxoy8KM4vNZf7kic8nfIg
P20RI6xfYLKOFRNVwjBVW7zPE2tdqoK/hZ3gF2BCSldOMAKTH9lJ4cUMrdno
S54I9epTgvwNrKR+gck2TupNKc9cXeV1ntRa67KU4n28rKGnMQkm7ys7+4KQ
KTEa3BTVNzY300qVR/k03zUmO7l5kcVcjaXCTVG9sbYmQSbexw1KjclQBSaH
eOxIsVBuMrpvvmDrtBdFAt+ByVEe76ZEorVY3OSJua4uQyE/ZUdOgl5jEnTe
1ysiWa5CbbHWgwSAynH8OwVGh7q6OrFYLJPJ7ty5Q3grwUAAgZjWUp0kUVz2
wPsaIVYy1LrG2y3whY6DC0wYpywF/DKwsE2gNcRJ3JCTYasxCWLvKykaE/95
X10ykxT7cIFNhpL3dZ9/va+kdOWEvK+kA5OZhad3c2/wdQrY9V9WVmY2m2E5
PeG+A3z+w69yCGMN0qpjMJhMJrDDrVu3MhS8DawIV0Um82jnjgjSFEYdOFRL
Sws4F/gJRhDCgNLc3AwO6Oop8CpwtwXWyy0Vl8S53xddGRRg4neNib+ACcJM
FhWFHeKnC3UqsvIkRyn6jZOwsMg5MFnGiDgjylUay0jJE6OlIryYvp4ZOwy9
r4OsMVnPSjgtzC/Wa8jKkwKV5AA3ay3TOTDZzE66Ki5Smwyk5InJUhlXwvmN
k042MEn1t/eVjK4cSoEJJ+eEkMHSqVta73hSVF9ttaYpQGLke6kx4eafF7GK
Dfq29nZPiuqVRkOEhLeX673GZNh6Xw+QC0z4nCvFQr5O1+JZ80WN1ZqrVJy2
LzvxXGNylM+LKBZLy8vbPcsTtdF4U1pyQiAIdmASdBqTS0Jpqkylr7SANwK8
HeDTvrISqYYlUHSYMI5lIbB8CL4KHAEMByVlxvhi5WUXwOS6SJmrKK1ES4/A
sFJRUQG1XYSUAOMXGFzgU9hIhz0FXnXnzh3YIsTQ6CNFSqfMxH/AZChoTELe
VyqACRq1Dtgk8DUm3ntfSerK8ZP31TUzKWtBPsTYVh3FwORw8HpfCcxkEzsy
VyVsbGwEtwxarXbZsmUvv/zyG2+8sXfv3oaGhn4L3cHQAwaFjRs3vvrqq6+9
9tqWLVvA/yAwAFVWV0VL6UsYV+28r/SzO7g3OKW9nD8zM3PatGngXHPmzKHT
6fhzpaenT58+HT5VUFCAPQVWMjIywKtef/11+CpwnLa2Nqmh9LAg9Wv6xaHv
ffWTxmQ7N7FQLSE9TyzVVTdl7A3sODww+Z4ZcZCfxitVkJ4ncoPutDB3BTPa
f97XaD8DE4o1Jn/wsxkaGQV5Up0iF2znpNt5XzlJJ4UFQq2K9DxRGvRXxIyf
OWkBqzEJRu+rS2bCyfmDV5CtltWjGpMBFdUbqizxMtE+boHnXTm/cfJO8OmM
UmUzesMykKL6VlG5/ryQtZsb0pj4Q2PCZ58V8miaXq/IgPKkvLo6VSE/MRBg
cpjHvSIUcLTa2wPOk7YSozFCLD6GwpPA05gEITBxrzERy2+UKOVGE0SgpaWl
YNwBH+lvvfXW7t27m5qa+h13QLZUVlauW7duArr8/PPPIIXAoRpuNfF05ZG4
mpPLYtXVYnW6XKMxV0IuB0aQL7/8Epxr1qxZNBoN1pzABi7w1BdffIE9hWUs
WAFDEnwVGHcKCwshADRV1+YqtGHIKSjqyvEemAwTjYmxEfnP3tLRFUDeV680
JgJTrxMMrJDYlYMBExg4bEIEJkc1WT0OS21HM6NOM515PBC8r8y6UvhbtXd3
7pQlugcmu+RJYDe4f0613O8aEwIbmc86x7bq8qoVYGWgRSaVrY3gj+L0YpOQ
99UdMAGxjRNXbjbBL4LB1QW4ScE8jY899hj0NLofbsC/9sWLFx9++OGX0AW8
/Ny5c8iXMshXxp1ivXIx4wqGTc6IsqxWK6xarKioACd68sknwc+xY8e+9957
t27dgoX0YPwCNzjjxo2DT33wwQdw4AMLeDkYaLCnJk+eDLZ0dnaBaGm5kyBl
zaadH4YaE0qBCYj9vFRK80SiV69nx2LY5LK4gNI8SZXxljCigtr7uowMYEJu
V85q1s1jglyjrbCEijyR6kt/46ats2GTSAmL0jzJkos3IUgkpDFxzkxI8b7u
4ubdkApMqFfE66J6RaXpsoi1wwONyUE+LUNZYm1u8rqo/lbLbZpGeVzACFJg
so8MYEJKV86AvK/HBNw0mbTCWudLnqgtldHFoiMedOWcFQryVaqG27e9zpOm
lhZWaekVsdgNMwlG7yspGhMSgQnCTIrl1sZGrPRo69atWOkRWElNTUXujNwu
YIcTJ07813/91z/+8Y/x48f/5S9/uXTpEnbA8uraCJScXEYjT65p7+iAN1BG
o/HVV1995JFHnn/+eTBavf3222BwgbkBxp2XX3750UcfBb8JeGrq1KkgReFT
YOXFF18ET4GR8cEHHwRPNTQ0wHOBHXhaw/VA15h4D0ycMpPbHZ2Ot9hwKbU2
Q0jCKq+rbGqFD6nzvlqa25xiEzfARGdtaWrvvNt1D/7CYKWh9a6qptm/GhOp
pRn+PjJLM6nApI+ZELAJobyEUadx9Z62d3dul930u8akorUB+5XqOprdV5jo
W2qxnVlWbaBpTPKqFfB3O12aP1Dvqw2b6IeV9/XTgQMTNE5eFuWazWaLxdLS
0gI+tPPz8ydMmPDUU0+Bu4/PP/+8vLy8329YwKvAtQoYLJ5Cl3feeUciQZ1s
7S09nY236i2/cuOxKYYLFSIwlNTX14MXgmubjRs3Pmlbdu/e3WFbbt++vW7d
OrgdHHP79u3tKL0HS2tr66ZNm7BXgafa2sBT7Xfbb/d0N2nMpQuLrvgJmPhd
Y+I9MHGlMcEiophGdZ7s5adhUwwXKSWU5onWrF2NdOuEvK/kABPITEDESdhU
58lRYT7KTJI2spPZKimleaKr0P3KSR80jYn/gIl/NCY7ODnXJFx1hYmUovo7
ra08felpQdFOboFTYLKXVxAvE5pqEeuF70X11da6dGXJIS4tpDGhWmNyhM+J
K5FoKyvIar4QlemviYRHXQCTkwJ+qlxmRosNfM+TGqs1T6U6JxBQ3JXjL2Di
T40JGgoQhXJVbW1tdXU1/DcH487EiROfeOKJcePGwXHHqe0Kv9y7d08kEoFx
B7wEvPD9998vKSlB3lkw7nQ3geElUdLLTK4Vq8UqjdVqBePO3bt3QTpt3rx5
7Nix8IU7d+6EbafwqQ0bNjz++OPwKTAktaP1SDBbsKfAgo5WKMcHp+tpr26s
j0ZOFBwaE1K8r67ur/HY5FbbXbiFUo2JIzZxU2QiqbyF0RLHpa2zm2ds8Jf3
VdYfNvERmIBIxWETx5YcDJtgXTnTmcezqmRwY1Nnm9+9rxCbNHe2wV9ppyzJ
VUvOGlG4ja7ctmGTAXflwBMlVoio8L6eLs0HB+/o7twrTxmoxsQNNglpTPDA
BMZlUa7BYFCr1TqdrqamBnyYl5WVgUGnqKgIjEH4yw9Y7AoXwhgEdgPXJAUF
BYWFNHC10NXZ0dVef7+9uuduTWOd6Rd2HMQms+lnC+VCvV6v0WjAQHYLXZhM
ZnJyMpvNBrc22LUHGD2amprgU1wuF/8UWAGvYjAY4CnwHxZc1dztaAOn62mv
6umq1VZovsNhk0H2vg4Vjck1QnyDYhOq82QvNwVikyWMyCKFmNI80VeUrmXG
DUmNiW/AZMAaEwyYYNiE6jw5ws9bx04CsYmdzFKUUJonZZXabU6wSYB6X38K
HmCyjZtzRsQUGnSkF9VbbzXma5SHeTQ8MNnFLwiT8GSm8k6yi+rLqixxUuF+
rp+BSeBoTEj2vgq414tFknID6XlSD/7Xa7XnhQI8MzkmFMRLS5QmE+nNF0iL
kEx2SuBpkYn/NCZBBEx6mQmCTRRqs9kMxh0wHID3F4wgYNxJTU3NyckBD/HF
QpBrwTsgQukjIrYymcA7m5mZZa6ouNfd2dXegIw7XTXtbfUJxX3YRKQqBSMO
GHeMRuNtdAFvdFRUFJ1Oh8MNNpCBAQUMf5GRkWAExJvP8U+B0efOnTtdne3o
MFfV09NQba2KFqsDH5iQqDGB70hlU6ublhzwLHJj2HWPUo0JHpu478rRWVvg
r9197z54FUpIkJYcmq7O1NgKcUpD611/aUzcYBPvNCaOzMQlNskjYBM7jQm2
3b7gxA8aE4hNwE+4omiqxJgJQV3CsmrBDsqmSrgnAZt4WGEC/2q2VUu5xmSA
3len2MRvwMTfXTlugAmGTeDnvxpdwFgDawWh3Aw/1oDP/LS0tM2bN+/cuVMs
FhO+0AEP7927D26A7nU23QMDDfjwB4He5vzKscMm4BTwdOAn/EYGnMtxog3w
EP4a8KsiwlP3upFu5Xvdd7s7GvtO11WnNauxapOhoDHxAZjM99b7SgAm39iw
CdV5speXupAR9h0jHGITSvNEb9Y4YBMqunKGsveVAEwwbEJ1nhwV5OOxCaV5
UlZRutUOm4Q0Jp4yE5feVyRyzwmKahsaeigrqtdWVf7Bp/WqX3n5N6XCto52
eNFCRVF9gUax1wZMSOnKCUZgQm5XziEBF0SYSFDXSGGe6KurzwkFWJ1Jukza
RmXzBbO09NSgdOUMYe8rAZjAKFCowYd/aWkpGAhUKhUYFJqbe+8Z8cwENmZm
Zmb+/PPPu3fvLikpIbRfYQVLPd0t99tretotSHTVtrfVJ0rUKDZBJgsWKhFg
As8FFpAPkLP1oJVObW1t+IEMqz3AIz6wT99TYLy624QAE3i6nsaquqroYs2w
8r72i00G0JXjm/cVwybuNSZcYwO4aoAlJRmqKkeNSYaquralA8SgAROC+tUp
NiERmDjHJjjpKx6b4KtKMOcJWBk0jYlT7yuGTRLMwh60dWgO67RT7yssFDlR
mkvAJv125eDBiCtsMjjeVzcT5Thik5DGxCkwAfFF4ckrNmwCF3izA7bU19eD
D3bs/gKMJhcvXhw7duyTTz75+OOPv/LKK3w+HzfigN1aO9tv3UMGmqq+sMcm
c+jnMGyi1+sNBgNYASMdLIKFNfPuL4GwpaP9Tmd7433C6RBsolpYdCXQNCZB
5H11ykzw2IS6PNnHS/uOEU7AJhTlid6sxmGTQNeYBKD31RGYELAJdXniFJtQ
lCdlFRobNvEPMCGlKydQvK8oMIGRIhVSWlTf1t5yQciCzGQPv5CrlFNaVF/R
UHOYVxSAGpOg9L7amAmILJmU6jyJFIshMzkuFAhUKkrzxNJYd0EoDCKNiW/A
hBKNCQGYELAJYdxpaGhot5V/dKBA7Pz5848++uiYMWNGjhz53HPPgXEHV3MC
3r62zvam++21KMHABgKITTSXxWo8NgEnAoOO2WyGJ62srIR1jJ6NOx3Ib9Te
2tV+CylowZ/OBTYJRo2J595XN9iEOo2J03CGTZx4X8EOsM7ExkzI15h4DUyc
YhNfvK9OgQkRmzhMLoxhk0kusUk2BkxmMk/cNAt0LTWYdrW2o5lZVwq2Y8AE
bge7EVAJfAnYTgAm0EYCDuJqohwMm8xhnYYHSagQOjITsLEH7eWZkv87hk3w
hCTMwFI2VWLNPmBF2WRZK4okABPC0tHdiWcje+Qp4FUdtj+/orUxqUJMYCZw
yhuwfb0oCrIOsD94+H7+H3vlKfCFeEKyQRydV62Ee/b+F2ttTK4QEzpx8Nhk
SGpMvAImRGbyhS2uiO2wCX7QAeNCY2Nju+2L2sOHDz/yyCPjx49/6qmnwPUA
g8FA5/FEBpq77U33kIGmihjIbY4RYpPptDNz6OchNtFqtZmZmVeuXAEXMGAd
nAv8tFgsng06bU7up3DY5DvGlcABJgGoMRkoMLFhEzrVeYJhk6XMyCK5mNI8
sWGTkMbEG++r60iIL+FQnSd92ISTArEJdXliwybBCkxI8b6SM7mwjZlsQyNF
KqK0qL61zXpByN6BYpO9/EKOUk5pUX1FnfkIjxFQwCRINSYYMOnFJnIppXnS
1maNEBWj2ERwQijkq1SU5onFWnkhSIAJKd5XKjQmTqNQrsJjE2zcgW9lU1MT
5F0gN/7444+//e1vTz/99OOPP/7YY4+Bdxb5lhkZd9o7e8cdix3EcMAmSJOO
EhnOQE7m5eWFh4crlUqdTqdSqcC4A+4fwZuOMTQXC3gOGXf6Clrwp3PAJv4D
JpRoTJxOlOMKm+DZSDk6x83tji5sC7vc2oMqWGMlxuLKxlvtvbecrZ3dipom
AjBJU1l01ttgH1glAgtFLM1taaoqvMbEAZs4mSiHpquDR9BZWwYKTOg6awP4
wLD3xxbprU6ZSVn9Hchn4ALWwRanwERT0wL+HOzvAg/x2AQDJrlqa3Vzx93u
3rM3t3cJTU0eakychgtsgrTkuMIm2PYZKBKBYbbZWWs7msE6+Ik9xPAIxCCK
pko8M9khS4B7gmcJhSVw+zUD0xkzQRwmGDaZnL9f2VTZg6pLHLEJ3A2dPccJ
NoH9O5CWVLQ2VtgYRUd35zobOSlrqcW2Y7uVtdRhzCSpQox/FhpUepC2IAse
m0C+AV6I0ZUedOLg9wsOQbcJHpt8zT6P7QZeCAIDO8WNJqfYZBC6cvznffW+
KwfPTD4vOHlBkFeOfkvruMBBB1y0wA7i+vr648ePf/fddz/88ENCQgJShoiK
E++11zm547DDJvHTaWdAzCq4kC8VlpcbxGLxlClTRowYsXjxYjDWwMEO8yGA
QcfZzU7vFwHOb3CcYxMKNSb+AyaUa0wcYwHt2jUhneo8wbDJ9/QomrSY0jxB
sUm8HzUmwQhM3DKTBBCrGAlRIg7VeYJhk/XMFIashNI8QZt0MkLeV1KACcZM
IDahtKgewSYiDsQme3gFbIWM0qJ6c635CN8dNgkBk4ECE6zahNI8aWuzRool
RwQCEMeFAp5SSWmeVNZVXhSK/asxCU7vqztmcoavyC5WVpgr7KlJ7wLeRw3a
vwkyB7ybYPQ5ffr0N998s3Tp0rS0tK4uJE9w447F2UDQh02uiNWXhGqeXG2x
WAQCwaRJkx588EEw7oAUhcQenA6OO62trS7GnfbO9mbnfMYZNhlaGhOXMwv3
3tzhsIljSUllE3LTh2ETFJX03mvXtLT3OCyVzW348hKMP7R1doN1PGTAa0xw
2MTlzMKmxlb42gxV9YAmF9Zb7zj+nnDR19/BA5NsdS32GxIWsB08i68waWh1
Mg8R9nIbNkGYCdzYfe/+nY5ubAeWvnGgRSa2qHPAJn0aE0dsskJ4DdvIrCvF
N+A0dbYpmipXCq9jW45psuGe1wwMSEiyUZ1se3cnviUnx+aYBdvxzOSagQk3
OhaZYN5XDJtMQecXhsdZIwrHTy68RhQBt89hnXGKTaDw5GRpHtaVs04UCQGF
uKHcaZMOoQdnj61QJLdagXXlnC7Nh9AjqUJMwCZwyatWvJ//xwZxNAin2ARs
B0dgW3UL2OexrhyOVQ93W8C+4BabDHfvqyMw+TT39PspF96KDDtayDAYypze
5mA3O2BEANcP4O7jHrgKQCb07Oq+1323o6XbzQ2O7TbnltW0lRs3reDMB6lX
psbEZIokJmN5dnb2s88++8orrzz99NOxsbGwzB77Vlqv19fV1cFBB7sYuds7
0Lg9XVddaQXEJkGkMfEXMHGpMcHH/ILr09Oj3o++cYrGoTpP9vFTF9LDp6fH
fhKXlC0qoTRPdBV92CQYva+BoDHBA5Pl9MSFmSlfxmaco/OpzpOjwry1zKRv
s9Jm38jOFcsozRN9Zek2ToZ7ZuI/7ysZXTmDDkwI2AT/TpFYVI/DJgV7eIUQ
m2goK6p3g02GuMaEMmBCwCYU5UkvNhEKQGDYhLo8IWAT/3lfg1hjgo+TPPne
AtnGRElEkcJsLHeKTfDjjsViAQNBD1qPBJfOdjDuWF0CEwybtNcnSzWXBJp9
eYrNyfICkaqupjolJeWpp5566aWXRo8eHRMTAzMHngsiPqvV2tbWZqNqEJhA
PuP6XDhsMlQ1Jk7VJfBWDmITV504GDbBWnKKK/vuIls7u8HD2BJTga6m1QYH
0lQWDJvc7bpX33q3UFeL1ZYUV96Cr1XWNLvHJjfso6H1LuQSngMTEHxj728L
Dg7WISRR19zGUEaRvh6rIWlCK2fARnNjG4Qk4Nmq5l46VNdy17EZp6G1k6Fv
gFvwyEVmuQ17cMyNyMvvdt/LVVthhYnI1AT2BD+9ACYwcNjEzvuKxyaEpb27
k8BMXGlMIKMAO8OHq4Rh8Ag7ZAmYxgQ/L/BxTQ6GTUQNSFKhllcHYGLzvuKx
CSYwAS/EzywMq1DATwhJnDXpOJlZmI2WoFS0NjrDJjoCNoGtN8omC6ElB+zZ
gxbAOGIT2JiD78dxxCZONSYg4G5nSguwlhx7bDJgjUkwel891JjA+CT39DuJ
l96KiJhwLfq1q1EINinTu7nNwRatVltdXY3efbR2w5km3H/4I7c51U1W45qs
lLfCIydcjXk7PD4TkeKXgUuaN99888UXXxw3btzOnTudVvWD6xZwaYQMOu3w
fqq/c/Vhk6tBAkwCVGMCY15B2Bcp0e9FJUwNS/r39UQEm1CaJ/XGzTnZ70cm
TLme9J/I1GxRCaV5gmETEjUmfgMmftKYQGayjJ44Py3li9jMTyKy/xOeiWAT
ivPkt1zal9GZn4RnTYvOzRXLKM2TMpfYJOR99VRjss1ZpEiFlBbV27BJAYJN
+L3YhLqieqfYJKQx8ZGZgMi2xyak5wmCTYoRbHJUKDghEvBRbEJdnuCxCald
OUEITLzVmGDAZGeubG1iydIYydLo4vAiuXtsAkccWBNSjU7x1tnR1t1utdUC
uR8Ialtb6y7QFZtuypdGS1fFSQtE6ipLJbhhfOWVV55//vmRI0fu3r3bYrHA
zMQnqg3xdYBx516/fMaWJ9XWqpj+6kx8Byb+0pi4wSaOS/e9+y6xSYkJwyat
nd1pKgvWlVOoq4HbwQ5uNCbxJWZYgmJpbsNacgjY5IaTqISvAj/xwKSkssnx
9zc1tmEaE0hC7nbdI2hMstQ1sG+oobUTMhOBqZfnOLbkYOQEEhIQze1dEIYQ
vK+NthIUDJtUNyOEua7lrncaEwIzSZMhgccmrppxCEt2lcxD7ysBm4CAzTuo
rqRXYwKPCfcUNZRjGhPIQK4bmE6ByWRc9w2GTXKq5T0o1cGYyRzWGeg8OVma
6wKbOGEmTrHJu/kHXWETuP10ab7TOYXB4tik4yh6JWATp8CEgE3+4wSbDE/v
qwuNScHJj7PPTr15dWIYAkxAvHE16rVr/WMTzBUAV8wmY3eb67J2h9ucW1bT
D4kZb1wBZ4x5OzwuUyQp0+vAZcnBgwfBPc6TTz4JLk6wb4fBokMXOKkoGIKs
tZaeDo9P11VXalZ/V0TEJsGoMfEbMKFf+yov/LPE2Hcjbk4JS0LieuLksIR+
sYnvebI6OW/KtcR3wpI+jEjJFpVQmic6s2YdMz6gvK/L/A9MBqIxYSYsLUz6
Kjnts6iMjyOykAjP+jCif2zie55sSqF/HJb1SUT2tKicXLGM0jwpq9BuY2cM
H43JIAATEL8w826KhJQW1eOxyQ4OjSGTUVpUT8Am/tOYeA9MSOnKIRGYgDjI
4aWKSyjNE4hNjqLY5AhfyJYrKc0TiE2GpMZkcIDJOZHiGEe+NVu28oZ0SYzk
hzjJMhAxkn6xCXjvwFsJBgKwolSqzGY47ngAz5E8qWlpqTmYKl0RLV0eK10T
LysUa4zlBqPRePjw4dGjR48ZMyYyMtJkMmGnM6BLeXk5mjlqax0Yd6o9PV1/
2CTQvK/edeX4hE1solcMm0Bmgm/JgfIQC9Kn45KZ2GOT3sISDJs4BSYwMGyC
ryrhGRscf/+q5nbM+Aq3YM04eI0J7LK5230Pz0awh3iNCUPfYCMqrRCS4B/i
va8yy20CNoHVJuCfFFdeMgCNCb7IBDITPDaZ5BqbQO/rSuF1BVq50YPqWx2B
CbTCihoMcEZgEBBZ4LEJWO9BCjCaIR45rsmB3OMmOhUO3D45b99qW13KHOYp
p8BkijNsMod1Gr4qoUIEsUlihagH9Y1gtSU4bGIHTMIMLLZVC6UlFTaLCMQm
BDxCwCanSvPg9rqO29BAggVmOMEmyoF8A8pMXGETAjDZKI7Jr1aqmquww3qC
TYLR+/opecDk88JTH2Weezvu+sSwqDeuRk+4FoXE9eg3rkf3i03AEJOXlzd9
+vTly5cLhUJwBVFepu1u9ezDH97m1Jt+SMpAQM31PmwCvzyKjY0FYw28GgHD
GdgIVuLi4ubOnXvmzBm0nVlTU1nW0+HZudp7JyDGYxPfgInfNSbeAxMvNCYL
6Ndn50R8fCPu3YiEKdcTp4QlTkUDrPSLTUjJkzXJeVPDkt4J78Mm1OWJ3iU2
CXlf+2Emq5iJi/OTZyWkfx6FoJKPIzI/icj6BCUn/WITUvLkx9SiTyKyP4ns
wybU5YnBDpsEkcYkILyvjvETM3dldv7X8fkXaWJKi+rb2q2XxJzf2IWrsmjf
3SzKEckoLarHY5OQxsR3YLKPzduSy112k3uNLqW6+SJaIjnME27JEaxKEuSJ
FJTmSWVd5SVhsWfMxF/AxO8aE5fA5I8i+ZYM6Yr4kiUxJT/EliyLs0VMiXts
YjAYwLgzY8aMVatWFRcXg/HBUKbtAuOOk7GguueuA1fvqmm5U3MoXboqVro8
ToZhE8hhwKATFhYGzgISo7wc/A6lYOXGjRsLFiy4cOECWAfjTrWrcaejGsUp
nmKTwdGYDDIwgV058FausqnNzUQ5brCJ41w5GA/Bo5I0VZXO2lLb0g6ehQHL
PDzAJnbSV3jwts5uNy05cB8Mm2C1KHxTo+NcOebGXlcnfAhf29Te6XSiHPg7
Vzd34CkK3vsKwxGbYG6THlQGW1pzxxdg4gE2KYXnwrMRXQtSCNTe3TkT54MF
sUOW0N7txNCCYRNYXrLTJoCdzTz1dt4+SFFyquTgIY6T7ANbelBJrCtg4gyb
IJwEtvygWxBIAsFFbrXcKTaBwGQu6yzGNwhLRWujY1UJAZtguMPV0tHdic0s
PBBsgjCT5IpiV4fFYZPDBGwynDUmn+Wf/CD1wtsxYW9eR4HJ9WgITLB4vT9s
AoabH3/8cdSoUeD6YePGjVqtzmjQ3XO8zQGf/F11yM9Oe10ADpu8eT1msg2b
aNB5QsvQRavVgv93GRkZ8IwzZ84Ep3v66afB5YpeX1ZjMTgZbjprkNN11RIH
OLSKAMMmvgOToaIx6QeYfE27NiMj8qO4+HfCExFgEp401cZMPMQmpOSJDZsk
Y9iEujwpM5c6YJMA1Zj4BkzI1JisZCQszE6ZeTPj00gEmHwSmQWBiefYhJQ8
ccQm1OVJeYUOxSYDBiZkd+UEpfcVHz8z8pZlFMyLp82ILJweXniRLqK0qP5O
a+3BAs6CWPqMCPrc6KIckZzSonpzHYJNAk1j4hswYfkJmHB/zOYtuclbEM39
OpJzlV5CdZ6cKBQvjxcsiOIviuXniZSU5kml1R02oUZjEkTAxDkzOSuUH6DL
f0yTLouVLokptgMmHmATkBtGo3Hz5s0PP/zwI488AsadMoPBVK7vbqsijgWd
tfe66zvaa+5319s7cFBskgGxiXxNvBxiE5gVJpMJHB8MPXw+PysrC6zodLov
vvji73//+7hx42JjYw3lxhpLmRM80m3t6mzo7qxHRp/+sElQeV8NAwImMOCt
nCM2wc8sXNnsEps4Ti7siE04xnpsDh3C4habOJkoB+uUyVRVu5pc2A6bSC0l
ll5s4nRyYanNT4LHJuC1TmcWbulA0AfEJg7T5dQ4xSZYYUmu2tqI88fe7b6H
wZOBApP+sMkep9hkpfA63Ii16vw7b+8s5knITCpaG45rsh2bdPAzCzehhRw3
zcK3bTMI75QlTs7bV4f27ySYhZNtUw+j686BiQM26e3KuW5gwV9vrSjiZGku
XP+KdQZryanoBRdarPsGbmnubAszsOayzhKadNxgE0InjmOTDlZkgrERN9jk
TB826W3GOVNaALcUN5r2KdKw2hIcNumtLcGwSaABE1K6cgbkff1XzHWkqgSp
MOkrMgHxJhoEbAK/nCU0EYMhYP369U8++eTLL788adIkkVhsNuqJtzl3a243
lP2+Z+vcOdP5rCy7IQBxETjBJli1JLjUEYlEH3/88RNPPLFlyxalUgnWX3zx
xWeeeeb7778HV0J1VeXEoa2rtrJM8vOPa37csKrBorK70+mq01cg2CRwNSY+
AJP5lHlf/xMXPwUCkzA7YOIUm1CXJ2uS8wnYhLo8MVTgsUmAApNA8r4iGpPp
N9I/gcAkwkkQsAl1eeK02oSiPDFW6raxM0MaE6+ByVZO7o/0vMVphV/F0KZH
0GZG0WZF0WZG9I9NfCyqv91SszWZMzuCPiuSPj+akSNSUFpUb64zH+UzAweY
kOx9JaMrp59+HD53N5O7PoO/KI7/dRRvQQz3mxjeN1HcfrGJ780Xu1NEC6P4
30bzF8cK8sQqSvPEFTYJeV/daEw2ppQsiZUsjZEQaYkDNoEMDbxB4CcBm2zY
sGHcuHEvvPDCm2++yecLK83l3W321SaddbebzHt2bPny8495YNy53+AMm8j6
sImhDB4Z5B44XUlJyYcffjhixIhffvkFnPSDDz4A53r88ccXLlyIYhMDEZt0
15uN8o3rV65eucRarbb7gsAemwwl76urmYVdYRMMmMDwDJv0QhICNklXVUFm
ArZLKm9hMwvjm3QgJ7HHJs5nFlbV9BIJvfWOIzBJIGATqR02EZhuEZiJm2oT
R2ZCqDYR2iwoWEmJIzaR47AJbMnJVdcb6tuwaYhLa+54ojHxGJvsgcF0hk1A
wFadps42DI9gU+TMYp506jbBmAne9QrFJs2dbdBeAitMUAfsfghh5rBOu2Em
TrHJ1PzfsUlwCDJY2JJDwCa75cnwbzxZmofXmECbqytsggcj81nn4PZwA9sJ
MLH3vjrFJrC8xBGbQNMseMkH9tMK27BJocfYZChpTFwCExiTosL6mImtwuRN
Z9gEfP6DWww6nQ7tZ/jbnBs3bowfPx7c6bz++usCgcBsLLO7zUG/ET70+/ZR
o0ePHDX6p02re7rr+gYIcJvTYFpuj03A6cC5UlJSwH83cPmRnp7+7LPPglsb
cIrExMQdO3aAaxWwPn36dHBZQrzN6ajuajEvWjgfnOuxkSOjw0C+4Ue3On2l
ZhERm5CvMRky3lcYH8TccMVMCNiE0jxZa49NKM0TQyXEJv7RmASd9xXGtLh0
tCvHJTb5CMEmAqrzZLMNm0xHsQmleWK0INgk0DQmQeF93crJXZef/31y4WwE
mNBRYEJHgzYzguYem/heVH/7Ts1vqeyvImmzo4owbEJdUb17bOJvYBLQ3teD
fO5vNO7aNN7CWN7XUfxvYnjfooFiE557bEJK88XedOGiaHBGAYZNqMsTR2wy
yBoT34DJoGpMsFiXJF0SLfkhVrIs1gU5iSmJQLGJToeMNSwWCww6Op0OyxOj
0RgXFzdu3LiRI0e+8sorXC7XUmGPTcCbdb/xwP4dDz8y4n//7+8rVyzpud/k
iE1Wx8pW2LCJGZ2oOiMjQygUWiwWsAJGmX/84x/gLGAdjDsjRowYPXr0l19+
WVZmqK2yxyZ3a+62VS1cMPehh0f83/89GH4djDu37bBJfS82CTSNCRXAxCk2
iXVgJgRsAiGJPTaxU5fgsUk8+BRBpwzuvnc/XVWFnyIH2+2GE2zinJnAgO4U
8DNTVUMAJk6xSZa611LraHnF3CbgJfBhXQvibsVbXrFw7MqBDw31rR5gE6L3
Fepk73R0D7TIBA0rCHts0gtMIB5xhU2uGhhwO1ZYAves7WjGM5O38/bW9Qlg
+2YWhj6T9u7O6+gUw9hcOdBnAraf0CBVInUdt90AEwhJ8NgEa8MRo1gG6xhC
ZbB9GhMCNjlpM5PAOhOMkIgbjI7YxPZaHaGkBPb4KJssboCJU2yC15hgtSWE
aYWLG014ZvIN+wIBm3zoDpsEqMaETO+rfXyWd6p30pzrMXhgQsAm5QakqnD7
9u3PPPPMkiVLJBIJ/k4HrB85cmTKlCl79uzRaEpN5fbfDnfW1lcqJ054/aWX
X37yyad2/fZTT7cVNzpAbJI54VpMLzYRl5iMxoMHD44dO3bq1KmFhYVMJvPl
l19+6aWXnnjiib1795aUlHz77bfglur8+fPgKggdbvCI3irm5ox/5pnXXntt
3JNPJsRctv9SAJkwFIdNAt37SorGxBdg8k3RdRDzC8O+TIl5P/LmVKfVJuG9
2ITqPLHDJmIppXliqNQSsMmw1Zh4AkzWoLGyKPHrtJQvYqADNhPPTD5Ff0Js
QnWeQGzyKcQmxXJK88Ro0f/GcY9Ngs/7SlJXjktg8is7Z21e/reJhbMi6dMj
CnHAxCNsQkpRvVNsQl1RvStsEtKYuAEmB3icrYXcFcm8b6P5X0dxMWDiITYh
q/lib7poUTQfj02oyxM8NglG7+vgaEzwcVGsOCOU786TrUmQLY2V/hArJTCT
5SBQbFJhNhoMhm3btj3++ONg3FEoFBg5AakCnjpx4sTEiRPBuKPV6cxG+zzp
rq+q0Pxr0puo0GbsT5vW9PQ0u8EmNLGmtrrqzz//fOyxxyZPnsxgMAQCwQvo
Akaiffv26fX6b7755vnnnwfjjsFAyBNLz/1bPHbO2DFjJkx447HHRkZHXERP
Z8HypLq+Ora4lAJgEhAaE/fYxCkwwWOTlo6uOCfYhGh8JUyRA2FIW2c3npmA
gK4Pe2zSTsAmTqcVxgpOwBGyVDUEZpIgJWKTRGkVPBfGRrAo0vd2D5kb22BX
jqamBWMjBGxS13IX8h+sJQce9k5HN56Z4DUmNmziRGMC59ZxwCYeARMQ6XbY
pA+YuMcm/87bCxttFE2VkJBcs4EUsAKByWzmSWxmYQI2AYF19PT0zZWDOExs
IlZke0613D0zwWMT3GzCv68VRfTYFlQGazdRDgGbzGWdhXuKG4wYHoGlJo7Y
pNLWzjOfdQ6250BOEm5gw/0RHoIDJhvE0WALMtewM2xCmCjHEZsUN5p6UDXK
RnEMZCb7FGlWm4YFYpMPXWKTAAUmpHflEIN2CsSn+WfeSbzyVkQk6mV1gk3A
dYJEUjxp0qRnn312zJgxR48eBUMM/voEjD4ymayX25frCLc5tRXy117759ix
T4wf/wy3KINwm9PcYMZjkyxxSVmZfs6cOU8//TS4r1m0aBE4+K+//grGGnDq
c+fOgQsVlUoFxiANOvMF8TbnXj2Llvr4E088/vgTU6f+21qpsCtu7Kors0Bs
EkTe10HVmDgyExDfovF1YdjnybHvIVMA25hJOBIoNkEmIKY6TzBs8lFESo5Y
SmmelFvssMnwBCZumYkdMMHHiqLE+ampn0dnYj7YT+2xCdV5sjm16FMbNskr
llOaJ6Yq99jEv8AkQDUmCxIKZkTSZvS25NAdog+baCgrqsdhE0YvNqGyqN4R
m4SASb8ak2VJ3AXRvAVRPAIwccQm1OUJAZvki1WU5gmGTUjsyglO72v/zORi
XyhBnOYpdubK19yU4X2wy3uxiTSiSFFlqZBKpVOmTAEDwWOPPfbnn3/iu6vA
e1peXg7GAjirmqlcZ4dN7tVXVqgmvvnG3x96ZPwzT/M5OeDNcsAmMgybFEm0
lRWmuXPngtwbNWrUkiVLLBbLb7/99uijj4JTX7x4EdxFgjMKhUJwOhUYd+zy
xNLT01RUmDZiBNh75Nv/fqsO5El3HT5PbNgk8DUmJAATJ9jEAZi4xia3PMQm
yppeBwhYgcAkQ1UFZwTGYRMEkuCxiVNggnXl1KI1IRBimBrb+MZGCEz4pkbw
EJIQ6CeBobbBEHBerFUHbITNMuBnjroOwyMQeoCDlNW3wu0MfQNkJhCwYITE
UN8KNza2duaqrSnSGrnlNsZMbNgEQSVtnfeqmzty1fUQj+Sp69s778EXegxM
7JgJHps4zozjiE0IE+KAZZUwDD+zcA86Gw6kGRgAIWCTyXn7sBl5evBz5eTv
h/07cFkjCncDTNxgE8z7CpbEChFhZmFHt4nYdtLmzjbwbEcv0mnEYxOIR5Iq
xD32C1ZwUtzQ+18AvBzOdwMRUI99S46Nb+gcJxfGYxMISTaKYzpsNTPghRCY
gC1w5Wxp4YfOscnQ9766ASYgvrTFZ3ln30m8OjE8asL1mDevEbGJQqH4+OOP
n3vuufHjx3/33XfQsUb4ZgdORUG8zQFjwd3qKxeOgmuSlITriFwRfwnhDJuA
061cuRIMbS+++OLkyZPBSAeOf+bMmRMnToBfA7rd0KsjcDqHovq7Na2NhnWr
f5j+5ad8Zibx25xebHJtWHpfPdKYOAUm+JhfEP55Uuy7kYlo5Qkyr83U8CQM
m1CaJwRsQmmeYNgkpDHxHJjgYzk9aR4CT5CJgJHaD3tsQmmeELAJpXniGpsE
qsbEr8AExvwbqMYkkjYrsh9sQl1RPYpNOF9F0jFsQmlRvdnah02CW2MyKMAE
xJ8C3tIE/teR3AXR3G+iuY7YBAkbNqG0+QJik4UxgiUoNqE0TyrrKy8jVGSo
aUwoBSZYXBApT3Ll27OlK+NLlsaULIuVoNhECrGJpdKsUqnAuPPMM8889dRT
c+fOLSsrI4w70IQD3l8Em7RX2eVJZ+3li8e//OLTZDDu3Ku3e1tBnrTWHMqQ
r47pxSb04tKaKsuaNWvGjBkDhrlJkyaBsQYk58mTJ48cOaJUKuFsbvAXUKnV
SJ7cxR2ws+ZOU/ma1UunT/uUz862QzRontQ0VMe6qDMZAhoTpxPl9N7cNbe5
YiZxJSYLEZuYnWITh5mFzfjCkh60PgQ+C4+G7taO1ZZg2MQNMMG6cvTWO640
s3BR17Q4NuM4LuAgAtMtfFUJeOjqyI2tnYR+nDsd3Y67YTgFwybYbmAFWwdn
YekbvQAm/WITzFiCByYwVgnDYMXITbMAbpnFPMmsK22ysQJ9S+1xTQ7sx8Gw
yWRbnEC39zjMlbNTngS3Y3MKuwImsCsHFrSAn/bYBJlNuAclDJjiFYsy9CW5
1QpMYwIiqUKMTaYDVsBDaDKpaG0k9OOwrTrIQ8DBxQ1GfFfO6dL8spY6DHSA
3cBDfKkJCKgrQbHJn4TYp0iDL8S35GwUx6iaq+AxwU+wvlEcy7Hqe+yxiaH3
sHrvgUkQakzcMxMsPsk9O/XmFQhPEGxyNeo4DWnSAcv58+fBhcGjjz4KxgII
5B2X3tucNnsBWgdaBAs2dtURv3m5W327wbw8MXPClV5ski2WmIzl2dnZEyZM
AOcC1x5wuIGmNaiRxC6NwOmcKBw7qrtaKztbzMR7HOSLnjqDRYNhE795X8nR
mHgPTPrtynEKTPqCcX1eQcTnibHvIfAkGcEm1xNPo006lObJuuS8qdd6sUlu
sZTSPCmvQrCJe2biN2ASABoT98wExFpWIojlhclzk1M/j4LwJOuj8MzzdD7V
ebI5peiTsOxPI3OmR+XmI006FOaJqUrngE0CFZj4T2NCiF/YeSsyC+bF0WdE
Fs2MdIlNKC2qJ2CTPJGC0qJ6s7UCYhN/A5OA1phgwATGAR5vczZv8Q3+gmgQ
LrEJ1c0XeGxSIFZRmieWestl1y05OGYSNMCEXI3JBRfABB+XxMoTXOW2LNnK
uJKlMdIfYkqWR5dEMRWVFUhT1dmzZ8eMGfPggw8uW7YMGmmcjjtEbALJSXd9
111rz/1G4rgD8qSt7lCabEWUdHmsfG28vKhYU1NlycvLe/311//2t79Nnz4d
HBbkhtlsNplMID8NtgVsV6kcsAlCTmq7O61dd2uR8ifCCNjTWN1QEysmVpsM
GY2J07lyICIwNt5xCkxggGd7erFJ3+Q48FYRD0zw2MTY2Ir146SrqizNbdBJ
0oOWfEgqb0lQ8ILHJibUguICmxC9ryCyVDWmxjZsLuMetG4EHLys/k62utZR
YyK1NINnsZ3bOrurmzvwdSZYgI3gKYz2gJc0t3c5ql9hgD0xxSvYDaISuEVk
ak6xlZeA3WCFCfw9rS1385DiE2+ASb/YhFBh4ibe7ot9TmOyk9jvfnJh98DE
dRwgdOW4Cnz3jdNwnBbH5UQ5zjQmhPjAoSvHMf5DjMOEcD1RzhDzvnqkMekX
mODj45xzU29ee/N69GtXozdn5CAf8ujkF+fOnVu/fn1hYSH+Cx3H4YZ4m9Pu
QoCGDENWnVG7KCv67eiIiddiJl6LvcLkmE3IfVVGRsbuPXvA/Q5Wdgu/gD50
6ND8+fMTExPBGOT8Ngce2VHvBkalew2MUsl8+qUA1Jj43fvqITCBsZARBmJu
XuRnifHvoNhka2YhpXmiN+pW5yR9HHvz3bDkd8NSrrP4lOYJRytbwYwdrK4c
fwET7zUm/QITfPxQkDw3Of3TyKyPwrJ2ZjEpzZMyk+7nvJxZ8ZlIwUlETgRb
RGme8LWKnxFIEqwak0EGJiB+4+bB2MLMW55ZOA+dAnimPTaZhWITSovqUWzC
xbBJQbGK0qJ6s7XimIBFQVeO98CElK4cioAJPvazeT9m8xbHIxPoELt1UGxC
dfPF3nQxhk1oEg2leYJiE0lQaEz8B0xcMpNLfaECcYyt+DVTtiJOujRKcixH
ZjabKkxIa9Xp06dXrVpFo9Fc4XpV77jj4MCBH/uOW3paKuos55mqn5Ply2Nl
y2OlSRyVtcZSYTZlZmVt3bYtNzcXOxesbwTjzoIFC1JSUgwGkJxg3HHAJr3j
jsPGrhpwJ60wmiPEWn8BE1K6cjwHJm66chymFSZ6Xx2LTHBRQYgbTsLJ5ML9
Vpg4akwI4YhKXIXTiXLwkdwXTlAJjBQn4URj4sXkwu6BiSfYxHdg4oyZeA5M
iMxkcICJJ8yEYmBCZCaDDEzI7srxJzBB4zQShac+yb4w5ca1SeGxm9JzC4sl
4N7DaDSCKxBX9zjubnOIwwFS336nyZKjEKxnxM6knZ1ecO7jtCv/jor6MOLm
8QJmiVJtNhlNJiP+XGCdTqc/99xz4HJl4sSJTCYTjD7Wame3OY7jWpe10WpO
lHJWFEUFsMbEe2BCisbEc2DSF0XX5+ZFfZoQ935k8i8ZNFqxlIo8KVCKt7FS
vmdEfEePnJMR92FM4rSo9NOF3BIVJXmSJhP8xEwKaUx8Bya4SPihMGVOUtoX
0dk7MllFEhkVeUJXSvdz8jawU9YxUxdnZ8yIy54Xk3eeJpBSkyfZ8uLdnJzA
0Jj4y/ua4wUw6QtO3s9FeT+k58+Jps2IQIDJ7F5sQr9IFxOK6ufNm0diUf3t
1prfUnlfRfRik3yxktKi+op6j7DJsNWYOAUmWBzi8/axuJsyOYti7VUnKDah
NE9aWmv2phcviurFJoXFakrzpKrBCTYZ6hoT8oEJFhdEymMs1c/p8pVx0hPZ
coECUY5UWSqhmsbVuOMOm9gNBDU9PbfaWutKygwxIvXVYs1FoeYPunpjonLD
DXk8W63RldXVgrNVotMqqeHBwZBHo9Gef/75hx566K233uJyueA3qatycOA4
BgJMbrXcrhHoDJEiDYkak8DxvnoOTJwxE8+BCZGZBCMwSfI/MKlzD0zcY5NA
AyZumUmAAhNPmEm/wMQtMwlpTDxlJtOwKDz9cdb5qfFXP4yKP5BD58sU4GZH
q3Ux258ntznIDU5tZ2sNr1S6m5P8VeGFmbSzaJwDMb3g/EcpVyZHRy64kRbG
5KmRqf302OUPGFyys7PBpdGrr746btw4cKFSZjD0c5uD3k+13a4qVIl+ZSZ8
Rbs4PDQm3ntfBwBM7OBJ2Fe5kZ/djJsWk/JnLosvU5KVJwKt/E9u1tKi6O8Z
Ed8zImF8R4uanR73cWzikpu5kSyhupS0PGGoJXvZmUsZ/tSY+AZM/KAx6YeZ
sHtjHQi08mReUvq8uNzjeTwBeXki1ipP8WmbWGkb2CkwNrJT1jFSF2elz47P
WpVIj2GJScwTtlp6hFv4I5u6rpyg9772A0zsYzMjf2lqIYQnMyNos8JpV4rE
VBfVb0/mzg6jz45kfB3NKECxCXVF9RUNlmN8JtVdOb4BE5ZfgEm/zATEYVvs
ZfHXZ/C/i+EtiOJ/E8X7NpIbxpBSnSf7UsULI/gLowVLYwU0sZrSPLE0VF3y
VWMSRMDEe42JM2aichPH2codabIfE6RXC5UyTZmlwqTXa20kg7j0j03A9vsN
dzsbteaKxGLNVZHmKvhZXArjsqj0ME39c4JiV4oijac2lJcj1uJSDTwbyNWs
rKxnn30WjDujR48+fPiw0WTuB5t0ILnR1maVG803RHDe4YDyvhr8DUxcMpN+
gYkzZuI5MHHNTAYJmLhkJv0CE7fMxEuNiYfYZCBdOZ4DEyIzGWRgQnJXznAF
JqR05fgETGzMxHNgYsdMcPEpCk+mx908T2dLlepyg97lZYlRd9/pbQ5iJKi5
f7dOXa4+zs2eV3gZD0zwMaPw3Cepl6fGRK5KyUrhidGvb5DviMEZ5XL5l19+
Ce5xxo4du3//foOh3Frj4jYHPV1XW61YJ/+dkzGPdsU/GhMfgAkpGhPKgYl9
zMuN/Pxm/Pwb6ZfoPKnKpzzRGDXneYXLimLxwASLxeBnUeTcjNjP4hI2pBak
8Yp9zBOJTnmMl7+cERfyvuKZCWnApDeSYCwvSJmXlP59Qt61IqHMtzzRGkuv
CVg/MtMxYAKZCRYbWCk/ZKV/dSNzSxojg1fiY56U6FXn+Myf2BlDXmMyOMAE
xHZbbKYXLE6hzY6mzwij7cvkmcxG6orqTbUVe2nMRTdpsyMZsyPpsawSSovq
xeW6g3xG0HhfyejKIReYHBbwsdjN4K1L4y2M4S+I4P6RJTZTmSfm2sqjReLV
ifxvo4XfRvNvsOWU5kmJ0XBGEKze1z5mMtjAxCUzuYyLSyLlCaZyR7p8V4r8
JkulLTNUmo1aZ+MOeOPMRjRPnEKM7rqenmZTdWW2TH9VoEKBSR8zuWaLS8LS
YzT1thTF4UwFTaKtMBuNBiRVwACkVCo/++yz0aNHjxgxYufOnSZzhbXaBTYB
iXrP2t3dpDeb0kp014WugMlQ8L7G+B+YEJnJIAMTUrpyfAMmtSQCk3RZPQg8
NglGjclgA5OQxiQgva8DAib4+Dzn3NQb1xYmpcRz+GqNFv/VbT+3OXdrejrr
Kir110VF3xWGuQImWMyin5tZeO6ztEsfxEVtzSooRGeb1Wm14BIlMzPzP//5
z7vvvpuTk6PV6Zzc5qA3OD13rTpT6TlewYLC68HsfQ0UjYkn8R0jHMaC/IjP
EuOWJWff5Ai9yJNKiz5azFlDv4kCEyIzWWwf39Mj52XETLuRtCubQRPLvMgT
vUl7RcBYVXSDuq6coe199YyZJDnGShriPFmXSkvkir3Kk7IbxcJfmFmugIkd
PGGm/pCdNj8h+/ccLh2dlXigeVJm0kUKeVuYWYOvMQlG76snzGR7X+TD+I2T
/yOt8Lsk2lfR9N+z+DyFhoqier6+9CSPtYtXuJ1NW59HWxDP+C6GFc6UqnV6
KorqGaXqwzznHToh76sHzITvGIf4/N0MwepU/qIY3uGsYr6ilIo8EZXprwiK
jwlFh3mi3wqFy2+KVsSJolkKDTV5wtHqzg+QmVAMTPyuMfEemBCYCRpqNDRn
2eqd6fIDGYpsobbcaDQZy7XorG39Y5Ou2p6eplqrpUChuypQXxE7Byb4uCrS
nChU/ZYqP1egFip1FWaToUwPUiU/P/+dd96ZPHlyXl6+Xl/mBJsgwKSu535T
ZVVFVok+jF86HLyvQ0xjMsjAxBkzGTAw8UVj4shMMnDYJOiASQB25QxbjUmA
eF8HBExATKedgfFFztkPEq6vS8/KFkrQr261+NscM+E2B4wFXXUNVnOyhLei
MGpGYf/AxC5oZz9Pv/x5QtyRAoZArkCm4NDrZTKZRCIpLdWCKxbibQ56P1VV
ZYgSMZcURASa95UUjUkgAxN8fJMfPj0pfnNmfq5I6nmepJcIN9OTFtGdABNH
ZrKYEdUbRZFfZ8Z+lZR6spAjkCs9zJPqqvJ4MXc9PWFYaUwGHZg4ZyZYrKIl
fZOa/lsWI08k8zxPsqWSnYyc9cz+gQkaqSA2gWClrMhJ/z4l7yxNIBxIniQV
C7cxsoPU+0pSVw61wKQveEj8SC9YllTwfXzR2QJxiUZHVlG90mS4LODv5tJ2
8QptQdvBoW/IpS+Ko29M5CZyZSQW1YvK9ef5vD0hjYmXwMQ5MwFxBA2wsofB
35TMXXWDf7FAKtXoycoTjckYJSo5LhAdE/bGcaHoKF+0I1+4+obg12RxCldJ
Yp6UlJeHCUpOBJ73NYg0Jh4Ak764Ilaf5yp3Z8rP5smLpDqTyVRu0GNZo1Jp
KpBxBz8QgHeq4VZzLVdjiORrwBH6BSb4uF6sPU3T7M9URtBVUm1ZhdlkMhoV
CgUYehB1sEpNxCad1T09t2rqqxgKg2/AZChoTHwDJkNBYxL43ldHYAKZiYfY
JOR9HUhXjvfAhJSuHP95XwNPY+IBMMHHF9lnP0sO35GbxyqRg7sPHTo/hd1t
DjpPaFuzhaYQb6bdnFV43n2RCRGYIHG+N2jnPs+4PD/l5lUGV67SGMsN2ISh
fbc5qNvtVn0FuO9eR4uf3Z/GxH/AJMg1Jh4AEzt4khc+N/Xm/jw6u0ThPk8Y
CsmOovTFRZEDAya2WMKMWsKI/Do7dklaehhT0G+eZEvFvxalL2HEDB9gMqga
Ew+ACYj1tlhdmLwkI+tQPpsj7SdPWErpAWbBBlaq58Ckl5lgwUpZkZu+Jj0/
iinuN0/ypCX7mAWb2IHgfR0KGpPf+gMmIHagAbb8VFiwLLlgfSIriiktLSvz
pajeUGWKl0j2seh4YAJjNxrbOfTNufQfEop2pvPzitU+FtVrTIYIsXg/14nP
ZNgCE6+7chyBCT4O8/l76YJNKbwtSaJYlqLUt+aL8uqKFKnyBFeIByb4OMwT
7c4XbkgS7s+QFBRrfMwTrcl4o1hxij/kva+DpDFxACZEZnLFPs5xFYfz5NcY
qmJVmaWyogwtVVKp1H3YBOnVaujqbJToDbFC9SXhwIAJZCYwrolLT7E0x/JU
KTyNVm+ssvRWK4G0RMcdNE86a3p6Glta6gSl5VH80msuu3L8pTEZtt7XSn97
X4NAY0IAJp5gE6+AyT7/el9J6coJeV+DEZh4wkycAhM7eJJ7Zm5WxHE6TaJQ
Gwxl4FLFbNTfRz/8u1prikuVexkZX+Vf9B6Y2Me0rCsrspNu8ISlOh0Y4NQa
DapwRG5wOm5XsxTSX2nJcwsvDw/vq581Jp4wk0W2+LYgYnFO4ukilkTpJE8k
WtWfrPwltGjPgAmRmSDAxD6+zY3bmJOVyBc7zROOQra3KHtZUWxIY+JHYIJj
JslYrKEnrc3LusDglTjLE6lWfYrD3FiU5j0wsY/V+Zlb82gp/BKnecJTKg4z
6ZtZ6QGtMQlKYOLATOyBiX0U/kovXJ5cuCWVkyZQGQZeVF9jrUyTyvazGTvt
i0wwYIKPXRzaTzm05YlFh/PEfEWpF0X15ipzfLH0ANu5ADbgNCbBA0ycMRNB
bwhBCA8wBZvT+DvTxBlCjRfNFyBPsmWqkzzxUYFzYIKPY3zh3nzhpmThyXyZ
QKH1Ik8qqswpEtVpblBqTPwHTDzSmLgpMrGL4t64KNCcoCkTuBq1rryywqwt
1SK4HrxZPfXdXY1ak+mGsPQCV43XmAwImBDiDFtzjqYslOgMxgqTyQhStB6M
O0iFSf3duw0ynSFOoL3scZFJMGpMQt7X4QBM+sUmvntfSerK8ZP3lYyuHN+A
yWHvgUlIYzJwYAJihi2+zDv/Q15sOIelVJfWVpnut9eWGbXH2fkL8q96ojHx
BJiAmI1FzpVfC9LyiyX6MkNTvflee41Mrz7AzPo6/1owa0y8ByakdOVQBEwW
MSKw+LYwckNBShSHh8sT3TlO0YrCOO+AiVNmYovo7/Pjd9NyC4ulWJ7I9Zpj
7MLltHinXTl+AyZDQmPiFTCxYyZYrC5K2UbLjecKsTwxGHVXuNyfijI80Zh4
Akw2sdNg/MhJW1+YcYheRC+WYXmi0Jee5bA2MzIDGpgEjMbEJ2DCdQNMCvCx
lZG/IrXwYA6voETjeVF9oUp9lM3ewS10VWTiKrbk0DakMi8WFktK9R4W1VfX
W7Jkyj/Y7JDGhHpgQmAmgqO2OMTm/5TBP5ZbTJNqPc8Thlp7gVt8xANggsUJ
oRjE7/miremiqzRZyQCaLyz58tIzHAlOYxI0wCQANSbeAJM+ZqKBcbVYc56r
usRS5ZZoS/XltxqQd6qitipDor3Ic+l9HSgwwcc5tiaGW8pXlZtM5tYmS8/9
W7pKc4pYe4UX0pgEvPd1SGhMqAYmbrDJkNSYhLyv/gMmAaQx6ReYzKCdxWJ6
/vmfaAmxAu5VLnNp/sA1Jq6ZyWwncWFBftifzLw8ieQ8t2hRfmSgaUyGvPd1
QMAEHwtpkTuKMm4KBRE87vpC5xoTH4EJPlbQbp5kFxVIpFd5nDW0xEHRmPgL
mAS6xqRfYAJigy3WMVIOMguShOIYvnArfeAaEw+ACT5+ZmRd4HAKS2QRfMEv
RTlBqjEJCu+rB0UmBa5iGyPvp0z6abpIpNK7L6oX6LRnuNydbGKFSb/ABMQe
Hh3Ebi7tl0L69ix2PEem1Ze7L6pnakpPcLh7uT5qTLwHJqR05fjP+zqArhwC
MMEzEyz+YPN2Z/MvFsnE/TVfiHX6q3zJEZ5woMAEi+MC0e9Fot9zihO5yn7z
hKPRX+KWnOCJA01j4j9gQrnGxFWRCZ6ZYHFZqI4WqOmyspwS/VWe6uIAu3I8
ASZhtrgu1oYJtclCDU9Vlikpu8LRXBP7AZiQ0pUzbL2vIY2JK2DiFJuENCYh
76sHzGToAxNCzOwLSoAJIQINmJDifSVFYzLIwMQTZvK9k/BKY+IZM3GAJCGN
SeACEzwzsUUKIXzrynEOTFxEkAETcrty/AdMXDKTnbjYzirYllsUwZGodAbH
onq10XCZJ9rO8AaYYMwEH1tp9P35nOxilcFodiyqF2u157jCXayQ9zUggIkt
hCD+5Ap/LxDFcuROmy9KTcYIvuxPtkuNSb/AhBAHGaKjBcV5xRqneVKi01/n
yY5yqAYmfteY+AuY9KMx6ReYuAhvNCb9AhNYT+I0hqf3NZA0Jv4BJkn+ByZ1
XntfPcEmgwxMSOnK8Z/3NaQxCVbvqx+BiTNm4jkwGWIak0D3vlIGTPrXmLgC
Jm6ZyaBqTHwDJkNBY+IVMCEyk0EGJmR35YS8r+QAE1sUgthWVPA7nZVaLMeK
6k21lXEiyW6mS+/rQIEJPrbRis6xhWylDiuq11QYIwTFe1kMirpyfAMmrOD1
vvanMXEPTHqZCRaHWIITDHGmRI3libnWklSsPEoeMIFxEo0/GOJrHBlXWYbl
ibbSFC9UHB8IMDkVlMAkULyvbjQmQxuYkKsx8R8wCWlMglJj4gE28V5jEoze
1/eGPTAhpSvHJ2BiYyaD7H31hJn0C0y81Ji4YCaDDkwu+Q5MSNGYBLL31RUw
ccZMSNaYBCYwCSTv601/e1/778rxqsjEU42J/4BJoGhMAtv76rIrxykwwccu
Nu0kl5MjVSUVKw4wmdvZA9aY9AtMQEASAlYOcJjhfBFLqb0hlu9jMPfwgsH7
SkZXjv+ACd9rYALimC2O8oSX+ZJ8mTZdojnFFh32oSvHFTBBoxjECYH4NE8S
J5BxlPrkYs0Jlji4NSZB7X11pjEhkZlQA0yGgvc1xv/AhAyNiQ/AhJSuHN+A
yaBqTPrDJgGhMQlG72tIYxKk3ldSgYmfu3L8530dXhoTT4pMBguYkNmVM2y9
r2uDEJh4xkwGVWMSjN7XwdeYuCoy6QMm7oI0YIIxE08i5H31gJmQ4H0dEDBx
iAF7Xz0HJk6DxK4c34CJ3zUm3gMTUjQmgwxMPGEmIe9rEGlMgtH7Opgak4Fi
k2D0voY0JqR05Qwr76sLZhI0wCTkfSW7K8d7YBLSmAxb7yspGpNgBCaBpDEJ
YmDilpkEKDAJaUwo1Zh4BkworDChGpiQ4n0dKhoTX72vQQtMhoLGxDdgMhQ0
JsHoffWOmbjBJsPc+/o+GcCElK4c/3lfQxoTP2tM/Od9DWlM/AxMSOnKCUZg
EtKYBLn3NaQx8Q8w8bwrJwRMqO7K8Q2YEJlJv8CEXI2JG2Yy1L2vgaIxGbbe
V5K6coat97XS397XIagx8RCbuCwy8ZP3lZSunJD3NRiBCdldOf4CJn7XmPgL
mAwFjcmw9b4GksbEP8Bknf+Bid81Jt4Dky3BDUwGS2PSHzMZZGASiBqT4AEm
5HpfgxGYBI7GxH/AhFSNiTfARONvYDIUNCYh72sImHiCTQarK8dP3lcyunJ8
AyaHvQcmQ0JjEvK++s37Sk5XjvfAhJSunGHsfY32MzAZEhqTYPS+ktuVE4ze
V1K6cnwCJlz/AJMA7MoZthoTn7yvQ0RjEjTAJAA1JsHofb1OBjAJaUz85n0d
EhqTQAMmBGwSdBqTkPfVf8BkKGhMgtH7GtKYhLyvJHXl+AuYDAWNiW/AZLhr
TELe12AEJvvIACakdOX4z/sa0pj4WWPiP2AS0pj4GZiQ0pUzbL2vIY0JWcDE
NTYZXhqTYet9/XS4AhNyu3KCEZjMIwOYkKIx8Z/3NVA0JiHvaxABE1K8r0NF
Y+Iv72uOv4FJSGMyFDQmwQhMyO7K8Rcw8bvGxF/AZChoTIat9zWQNCb+ASZJ
/gcmdYPmffUYm3gPTEjpyvGf9zWkMQl5X/3jfR0qGpNh630dChoT34DJUNCY
BKP3NXA0JiHvazACE1K6cnwDJqzg9b6GNCanghKYBIr3lSSNybD1vhr8DUxC
GpNhoTHpD5vYMZNg9L6+N+yBCSldOT4BE/9rTLwHJkNEY+IDMCFFYxKM3tdA
0pgMW+/rTX97X/2sMfEfMAkUjcmw9b6S0pUT8r76D5jwvQYmgaMxCUbvax8z
CWrvq781JsPW+xrjf2BChsbEB2BCSleOb8AkoDUm/WMTCjQmweh9DWlMfAEm
5Hbl+M/76ueuHP95X0Mak6GgMRm23te1QQhMAlBjEoze15DGJOR9JakrZ9h6
X0noyhm23ldSNCb+874GisYkGL2vgaMxCUbvayBrTPrBJgHpfQ1pTEjpyhm2
3tcZQQhMQt5XsrtyvAcmIY1JSGMS8r76T2MSxMCElK4c/3lfQxqTkPfVP97X
oaIxGbbe16GgMfENmAwFjUkwel8Hh5ngscnQ9r6+P1yBSUhjEjgaE/95X0Ma
Ez8DE1K6coIRmIQ0JkHufR0KGpOQ93XYAhNSunJ8AyZDQWMSnN7XQNGYBKP3
NZA0JsPW+1rpb++rnzUmAQhMPMMmAaoxCXlfgxGYBI7GJOR99QqYDAWNybD1
vgaSxsQ/wGSd/4GJ3zUm3gOTLUEITAJQYxKM3teQxmTYApPA6crxHzAhVWPi
DTDR+BuYDAWNScj7GkTAJHA0JgPEJgEKTMjtyvENmBz2HpgMCY2J/4AJuRqT
IPS+ktOV4z0wIaUrZxh7X6P9DEyGhMYkGL2v5HblBKP3lZSuHJ+ACTeIva8h
jQkpXTk+eV+HiMYkaIAJuRqTYet9vU4GMAlpTPzmfR0SGpNgByausYl/NCYh
76v/gMlQ0JgEo/c1pDEJeV9J6srxFzAZChqTYAQmgaMxCSLv61MT33jAfvlg
9Q9Dz/v69Ftvgj/th4unCZBkU2Is/m9/5q03fQQmBGaCP/jfR4+iAph8unY1
ODj46YhKVl08j/8FFuzbO1Bm8s2+fYT0+Pvo0UNPY7Lh8lXwpz036V+OnARs
xP/5u1LSSNSYzFi3AX/wxb8fogKYwIM7BSYvTPo3dvaHR4/xXWNyIDXnAYfl
QGru0NOYwD/NEZjMW78F/7evPniCxK6ctQdP4g8+f/0vVACTEWMeBwc/mc50
BCYffvUt/hcIHO9rSGPiL2DiApsEvcZk2HpfPw0kYPL69u8Jo8l/j3woKDQm
AwIm7576Cfxpj054wRGYgI34P/+z6P0kApOnp72DP/j7p7f4DkwIzGRazB/g
yH8Z+YhTYPI/Ix/Bzj7yzRcxZuI1MJkRe9jxCmRm7OGg05i4ByZz406Av+uv
o0Y4QpI3V35t957uWkeixuSDXevxB39r5QIqvK9/G/UoOPi38WccgcmLMz7C
/wIkApPvbtjdLsEFbBw07+ugaUzgn+YITKausvuw/WLPFhKBybQ9v+AP/s7q
xVR05fzfqJHg4KtvhjlCktdnfoH/BXypMHnqLQSbYLUls/ZuAw/BxiGjMdmU
GIP9QzliE2zjfj5j2cXT4OGDo0eRpTH5++hR8/btghUmPyXegL8DuV054BTw
sI7Y5Ot9e8D2z9auhmDkM5SuOJIT90UmEJuAn1h5CTzd1qQkioAJ2V05/Xtf
J8+eA/8oR2wCngKBVZg8NHoM2G3j5WukaEwW//7Hw6PHYEUmU2Z/BQ4+Y91G
Er2vS3//E0t+R2byMPrnYEUmDziQEy+8rxCbvDN7PlZh8uKkt8GW5b8fCSKN
iXtgsurAcexflcBMVh888cjosViFyQdzFoB95q3fQorGZOdV5DMEIyTz1yPD
0AdzviGxK2fXtZvYn2bDJn1VJa/8ayq6nQUfQroyxLyvSf4HJoGuMekPm5Df
leM/72tIY+JnjckbKDYBPzE8Aj+dPojeFbDAZKAak6emTYV/lA2b9DET8BQI
jJD8ZeTDYLf3Tv1MSoXJKytmP/bmC9hDsA4O/q8dy0jUmLy6ovfiCsMm+KoS
sP1/Rj4C16fHHHoAIScv+agxgdjk2envYRUm4Jhgy5Sdq4aMxgQDI47Y5L1d
a7GNy5ixz0//D9ht4sqvSfG+Tj+zGxwNKy95ayVyefPCjA9J1JjMPNv3Ra09
NkHKS8ZO/CfYvjD+LGQjkK6QpTGB2OSlGR9jWx6f+CrY8snuH4PL++qGmXy+
52fsn5fATL7Ys+V/Rz2GPfznzM/APlNXfU+K9/Wb88j/Sqy85J3Vi8HDV2d+
TiIw+fb8UexPc8QmT6L1IWA7pCKQrvTHTFx6XwnYBMQbM78EWxZdOBHswATE
h2tWQBLyEbriiE0IXTkTZ00Huy27eIY87ysLqzD5ZM0qcPD5+3aTAkywShKI
RxyxCTJ2vPUWnpBAxjKgrhwHbCJYc/EiMrbOnjU0NCbw33DR7wedYpNT9i05
Gy8jA/3k2V9R5H2F4IIsjQmsJJk6ey5cIXTlzFq3CWz8+UoEBkl+QBkL2O6L
9/VAai4em0BOArY8MnpsUACTfr2vL02aDP6c9+cseOlfk3HYxGVXDthnxOix
vmhM3DTjjBj9OAQppGhMYCXJK/+aCldQbNLHTNYfRG5YwE+swmTPtQSwBewc
0pgMK42J59gk4DQmwxWYkNKV4xMw8VZj4ohN3j65EWwZN23yoHlfKdWYwCuQ
t3YstWETd105751C7nqemjbVG41Jf97XL2IOgIM/9uaLZGlM/oJWkry6Yg5Y
+YsNj2Axftq74NnpMYewCpNXVyDfHE3esdKXlhw8NsHACMJnRj0S5BqT3pac
v44aAf6cN1d+DVacVpsQunIgXaHI+wp/GbK8r7CSZOzEf8IVHDZBmMlHu5D/
+OAnhkdmoYwF7EyK99URm6xnJ4Etfxv1qH+7csjyvj4x8TXw5/xz5mfj0JV+
u3LAPv876jGKNCbgyOD4HjKTfr2vr6GVJE9OfAOWlBCwyYw9W8FG8BMDI9+d
Pwa2gJ29877aYxMEj3ywehkBm4D1B3DL9xdOYJxkXULUA0hfz7LFuH3+s3oZ
gZlMmDntAYcF4yQbEqLx25dcOEWW9/XNWdNBgBWn2MRRY/LRmpVgt7n7dlHh
fZ2/D0G1n6xdRYr39et9e/4+ehTGT/DY5E8Bb9VFZDgm1JbAghPwlOcaE3ts
grTkbE1OgtgET0j+Mekt7O0D63ha8q/Zs8HGY0LhPyZNwvYhAJPfklMc0+OL
teswWvJv9CC2408iy/u6MyUNHBD8hPyEgE0cNSa7UtLhbhRpTGD5h0tmMkDv
Kzja0t//xPgJQWMCNjp25YDdwHZfNCYYNsH34zwyeiyCTXDA5N0587E3FDyF
5yTLDxxBPk6vRs1ZvxnbZ+vVaAIhAa8iJMxLkyZjeOSr9T/hj0+i9xUcbfXB
42DFhk360ZiMQH9PiryvL/9rCjj4iTSGR8ykP+/rK/+aumDDr3E2foJVleDb
cwgtOSPGPA5iMDQmPgATUrpyfAMmQ0pj4gk26bcrJxi9ryGNiS/AxDuNiSM2
+SB61wMoNsGzkf8e+RD2gY89BYEJeAg2zqCdHTHheWwfAjD5KHqv4xXIi8tn
YMDkyWlTsO3gOGRpTD6N3g8OCH7OoSPfRj064QX3ApPP0P3BbhRpTB5Ay0LI
0piAo314eitYAcf8HwdsAragXTl9GpMZMcgXN+OnveeLxsSGTd7H45H/GfUI
AZv8Y/r72BsKnsJzkjdWzAMbZ8Uewe8zO/YIgZk4Jsw/pn+AcZIJK/qucP46
agSJGhNwwC/O7PoB5SeO2MSxpASSDYq8r2MmvgIOviD+FCne17ET/zlp5TcY
P0GxSZ/GBG4kFJb8bdSjIAbYleNcXYLHJlhXDjw+HpW8PONj7J0FT+GBySe7
kUvWr84deHvVd9g+4CEBmPwvWiSDX56Y+BqGSiavWoRt/99Rj5GoMQFH+2LP
lp84GW6wCb4rB5INiryvT058HRx85c1rpGhMnpz4xnurl2KdOARsAjcSCMn/
jRoJwrvJhW3YpK+qBFabrE2IxCgKODhWYfLUWxMewJETiE3A8uCokRCS/Ael
LrP3/oYVmTyNvmRDQvRuHm323u1gfcLMaRgzgVvm7N0BwciHq5fjHxKYyYOj
Rzp+WIHlzVnT3HtfCdjElfcVYhNYbUK69xViE0K1CcZDxr810emfBra7977i
sYkjIcFjkwX7kGuDb/bt9dz7isMmvRqTNZeQ8f3ztWsxZoJ8vu3fB9fXXrr0
AEo2MGyCEY+F+/dDVALWHxo9GqswWXfpMtgCdoOEBDwFHm5PTsGYCdgCAmMj
8OVOgcmi/b87/TcEy87kNPdz5TyAwyauvK8Qm0ye/RVF3teHR48hVJtgRSab
r4S5+tN+uhLm3vuKYRO89/UBlJAQsAn8BQZYZGInfYXY5F17bAK2vDjpbYyZ
PDJ67Jz1myEk+SMt7wF7cgKxCXKQOfNhkQls8zmUlo8xE/gSuP7eHKRgdeWB
YxgzgQUh2EMIWJwyk21XY5z9iyLLb1dj3XtfX0KRRb/e1xGjx6LVJpR4XyE2
cYpKTqQxXP1p6w6ecu99dYpNbITEriUHtu2EvK/DSmPiHpuENCZBpDEJfO+r
q2qTF5ZPh2zkP9HIZdXkk5vgwze2I+Xf46ZNxopMxtmIx4TtiyEteQARpDyM
VZhMPfkj2PLktCmwsOS/0UaYj6L3YrUlYAsIrMgEvtwpMHlp+UxXn7r9el8f
8AibIFc4T097hyLv6wP21SZ4YPLvHctd/WnTYv5w7339HwdsAltyxk97j9CS
8wDap+OL93WmM2wCD4unKG/8//bu/dnOqs7z+P697WnbC4gJOk1ptdJya01C
uNMIQqJwcg+CBBImF8gF1JgBQgghEBAEIdGQgyYpBxII0aCxBarHeOnYFtCZ
mqqpKWZ+4YfRX7r8J+Z5nnXOOms/t7P3s75nf9Z3rc9T30rl7HM8BAjx5J31
fa31K0wkWfJq/vWGW05MNsl/1q1faU6YZO/N3rTBZOmr+TrArLkXmrMl2Xey
Nxfu22GbiXnFFhITLmqbyVd/8EjTP9XsXe3uaymbNNEl5sO6beVMe7mwySa1
weS2Y/ua/tau33l/u/s6mU1+eG9dIXHHrO2IuK8mm1y46EaXMcle+fS8S2wz
yX4AV9yzynSSu17P/2y6KCcTB0tMNsmeixbdZAqJWfNZ/foB20x6eQz5hCkk
2YflP3Me3WqbiTkQYg+ZmHBRW0tW7n+q6R/vrfu/2+6+1maTKmOS/dVLp038
3Ve7lWOySW0w2XD8cNPf2tiuB9rd12o2qRYSM4Z1HTaYTGaTvGnYZrLkse35
LxeLb27ayrmrOFXy5XvXmmyypcgmtpmYyV75zKVzTDMxJ0muv3ed7STZu7KP
t29m7527+BY3j2TvzUb2ohw3m7TclfORYo3Fbyun8aIcE0a+c+J12cuFTTax
homZ+Uvy//suZZPbi2ySfeTgF+VMZZNJxsT87G1ZyTGnSuxWjskmtplk87VN
m/Jf6F76kXuSxEYSU1HuePwJ8+bNmzbnPz/f+IUtJKuKNpJ9O/xFOW135fQm
jpG0XZQzVgiuq594smswaWsm3/pRHkauWrq8G2MybTZxm8njhUDiZhNzvMQc
d+kWTMxKzpOlbPI/JmyT/3rwlaatHHPy5KmT/zKZTfKvSbIXbSR58GD+a8iy
LVvNm+uLD8hetGEke/Ofln3dfH/DnueK9x61WzmmjSzf8h25i3LyrRw3mzSh
rw8ffC3/1XLZbcMyJoM0ExNGLrzsKvGLcqrZ5Nj//H/ZK/3Z5E82m+z95R80
MiYa3dcwm8kA2STQYHJdqsEkQMakFnotZZOx3/xg4uvn5pWcv/rkx7KxOzgm
m9hmks0X1i3KXrn6hW+ZTmJOkth9HFNR5u5YY5rJBcUH33hkt40kc4uFmuzb
DoxJbTMxSaTXmk1MFblo3ZLsw+bvWOsTTJqayWVFGLl4/dJujEnLRTnVbHLD
vvzYfPVgSa/QTnwuyqlmE2Ob3LRve9NWjjlVsuTV75mVHJNNbDO56/cvX/NI
/qeQ2bcmm8wpPmDZq8+abLLs1fxLjjnrbzXN5JpHNvby6LHDRpLs+/kHbLi1
21ZO0/04Npu0cK83/2Bn9pc+f+x68WCSzW3H9maf/Nx5F3VwX1vvypk4WGIN
EzO9olHUZpM7ju33vyjnzqlsMhFJTPRYtn9P01aOOXly1+sH3Gxim0k2y/fn
i29X3rPKbOUseDQ/Bb1i/5O2k5iPN99fOPHep0pt5Kp77uzgvrZclFPKJrXu
69f350e/Llm8cFjGZNpgUoSR/CjaefO+2I0xabkrx80mtpBkrzRlk43HfzJU
MDFbOSabuM+mn77cwpiY4yVfWnyzKSQmm8yZfNOcMDHdw1SRNQfyqx+WPvZw
bTZZcyD/7650tmRusdEje7OwySZrx/e1XC5sjprcuHGDeDCxR00uXbJIMJgM
nk3MSs5kNtk4+M3C1Zt03HMmtYyJ2crZ/sYbbjaxbz733r/fUXQPG0Y+N3/+
x2bPrmYTU0XMe92DJTveyH+puXnT5qHc12lvFnaySf0tOeaoycdmnyvCmNQe
Nck+/2M//1UHxqT9cuHJbDJ1qqSUTexKTlM2mfZyYXuwxGQT9ynOmbQxJmYZ
54GDrxjDxGST9Xuetdnkuyf/uxtSlhULOE+f/HVtNjGHT0pbOeYDhmVMmoKJ
GZtNWi7KMRs6z578rWwwMWOOmuw8+HoHxqT9ZmE3m9hO4mSTqX0ck032lbPJ
0IwJzn0FMyYRBJPpsslIGRO6rxqDScvlwl+q3KRjz5k0MSZmGaeUTW44sstu
5cwtTqTMfXiN6STZxxeHTyYMk6v39mUT8173bMmNR/Ivii5Yt9g/mLiMSVM2
sWHEHDX50Cc/3txMOgYTe9QkezoFk3Izqe7jONkkX8lpyyazzho2mLiMyeLK
TTrmnEkLY2I6yYJ9D9/lZJPizYnjJdn3e0VIMZ3kc2Nfzt60jImbTdb86yuf
L95bWsnJv7wc+7JUMHGzSfstOeagy62vveDPmFTHHDUZ++FjgsHEzCDZxOSR
mmwyfDAxWzl3Vm7Scc+Z1DImZhln+f49xjBZUGST7FubTVYXJ1KKkJIzJmYB
Z83r43XZ5ORFixb0KmdL8g9YvKDbVk4TXeJmk6aLcsxBl7XHDw6xlTNAMHGP
mnzjxe8JBpP+bPITt5D0pskmQwQTM+5pE2OYZK+0uK+b+ztJJZv8ppRNqqdN
3MMkyx7b0Wt4hmVMBs4m9TcLrx3P/xTjI7NnNQWTph+neS5dsqivmfTTJd85
MXmNjmgwcRmTpmziMiamgVSzSW0wMSs5tz+e/0/sDs5Hiw2ah9440eK+Xt6Y
TSa2ckrZpHTa5I7+wyRmZ6f63Lxp81CMSfvsm8omjTcLm2t0vvmjQ7XBZKz/
KuHqs+vnv2q5Isdco7N48/2ywWR8umxSYkyq2WTaYPKj/muFJ06bLLvVrOSY
kyTr9nyvBX2dzCZHDjqHSVqySek8ydMnf91zsonZ0Kk+pWwyCGPSFEzcbNJy
s7BzjU5NKtn45PO1P077PHLw9ZbLhb9eXKNz/bLbvYNJuZnYbLL3l6eP1WST
Psbk4nI2ofsas/s6ZDYBua8SWzl+weSZ7sEkCsZEJJj0nzZZ7Rom1x95tOWu
nNps8pUju+xWztyH1/ScbGJPm5hOMndH8d48m+SRxOzsVJ9KNukeTJqySamN
mGt0rtu7rfaQSekq4erTEkyyOWfuF7KPuXzHOs9gUm0mTjaZYky+0ppNugWT
2tMmf1+cJLn6kXta3NcBs8mcyWwyedrkOXO8ZOG+4jDJenOY5JXZxYZO9XGz
ybSMSXswGTCb2Gt0alPJdf1XCVefsR/uarlZ2LlGpwtj0tJMNk6XTdxTJeVs
0imYbJnIJvnvpOxpE3OS5KZHv9Xivtpscn9jNsn/u66cJ5k4bbJm4r0LzFaO
2dCpPk428Q0mbjZpuVz4kuIanWvuWV0bTG7uv0q4+tz+4jMtNwtfe2/+C+w/
Lv5qN8akfQbJJmYlZzKb/LdqM2kJJtVs8sikB7vkse1uMDGbO+5Tl02m7spx
s8mjk7ZJrWRisknVgG3KI822yVhTMDHHSyazyQ9qm8m3f/aa+TxSjElpzCff
duJ4SyRpsU2agomZ2mxibJN7J7JJ+VqcaQ+Z2MuFv9GfTR4qPNgCfe0LJh+t
xI1KNvn5c/1hxGYTc7zEArAlyST7fsmAbdnKufPxPU3/IRv3tfminMZsYiJJ
9q7e1HqOAGPizqLN+bL21UtXtDSTVtvkJ03BxESSajbp11+nIsmkbdIlmExk
k5M2m0ycMDG0SCmVmM0d93lgEn1tySbu8RILwJrjJfbwSfZ69lcc0H3d3myb
PHzw1aZgYk6YXNiYTfJmsnLLtl6xniPFmLiz6cn8kF5pPafUTF745b82/a1t
eXJvUzBpziZ/KumvppOYbELGJBH3dZhsIraVQ/cVF0xGyphUx1olNpsYyeSs
OZ8vBZPqr3I2m5w3lU0m1nBK2cRs5VywblG/ZPKizSauAdvuvk5nm9QHk9ps
Umom2bt6/es5noyJO58tLrW5eP3SlmZyRZtt8t2mYFLKJjaP1OivxQmTXnE4
pFswqWYTc7zEyCSlVDKr2Nxxn6Zssvr3Ly/szybmeIkFYEuSyey5FzoG7DQr
OS22iXFfWy7Kac8m84pLis8fu8Hffa3O9TvzPyU8d97FLYdMbj9W81+leW7Y
eX9TMNnYnE2MbVJaxpmyTYY/ZLJlavJOUsomRjLJXikFE7O54z4N2SQ/XlLK
JuZ4iQVgzfGSNa+/ZKpI9nqzAVsOJrfu/27TP97sXQNnk5pbcq6+x9wOvNCT
Mal1S27Z9UCvbz2nJpjc02ybLNr1YEsz2f7Hf6nNJtY2cRkTk00GOGTy6+qY
bOIeL+kVZcY2EyPEThKv5eMlk2/e4l4uXD1t8pFZU7nDXckx2cR9RfCEicOY
9Fmv1cuFzQ/s2z97TTyYZGOu/d0wvl/qkImbR5qyye1T+uvUqZKFm/KlywdO
/GyQYGIuFy5lk2wuW5pv12566SUTTB56I0eTCuL1vdqtHPOmS7xWT5u4R0pK
KzluRZFiTGrd115dNjHN5MriKMjY5vs6MCbtwSSbNU/kv/qdP//ylkMmg58w
qTaTajaxjIktJHZ6+SU4KwdkTMpTXJTjZhOXeLUGbDbmX7S9XNgs3Tw4XTYp
6SXuTTqmmZiVHHPaRI4xabwopy6bTOgl9xYnSbIPEA8m2ew8mB9dO3v2p0UY
k+ocK2eTvn2ckvt69rmfvviyq8mYJOK+DpZNAmVMknVfFygMJvZy4VI2GZu8
GefKF75pgslVL3yzV9xuYzuJe9pk8VQ2eaw2m5hbctwjJaWVHFtROlyUM+0J
k9psUt3BMSdJLlq3xIMxqQ8m2Vy8Pv8K7bO3XCvCmNTNYZNNqgdLJvTXScbE
XILzxfXLuwWTUjaxWzlXFzLJl9avtM3E/Iu2dwqXOon75upyNpm6Jeevi/0X
87j7OLOnKkqXi3Lap8l6LV0ufN3OnAQ8d+5FUoyJe1HO2A/z31xkf+kBt3IG
PGGysTWb9BUSZ/5m1iey1z2DSW02ue8Pb9z0aB5UJw3Y/HiJ+ddtbxa+svG0
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
2eATTO6cyCZ5FSllE3PCJHvRpBJDvJrnr2edbd5cMNlJ+rNJH/pq7sox50mW
v/ZcaTHHdBIz5j4d+3RuJtVaUvtPtbhiOG8j54/dUPsB/zB2QzfGxBVfL91w
e+0n/9S8iz23ctzbhEtPyTP5G2fD5YJFN4oEE7OSc1c5m0ydMLlw0U33ORcK
m+fDsz5h3ly+/0mzkrOwLZvkJ0xWFBcKr3SuGL5o8YLaV+zT0kyGDSamyZQe
u49jGNjqk73uGUwsA1t9zpv3pQ7BpNpMzBpO6cnDSP9Wjn3XFxd/bUDGpBRM
mu7K2dk2U+5r+9TeJmznI8Xij+BWTu0Jk1rGpOVyYX/GZKiLcjpv5ZTGPWFS
O9Nu5dQGk9qLcp6d3MSpm4mLcr4/wNTeJmxnVdFV7ptYzJmprZyqYdJys7C/
++oGE2nGpOaESf/Nwv/7pcqdws135QzKmNhm0nJLjjP/127ltI+7fVM7Z83+
1AXzr7TNJJtnTuan4JZv+c4MMSZN7qudmXBfa0ecMemfP5Xm9Zqh+5o6Y9Ih
m5AxGc1Wjkb3taWZ1F6U0zT2opymMWdL+mfqNmE3m8zbkR/q7l/MkWRMmtzX
5puFBdxXN5jIXpRTe8KkfiaDSeeLclqbSf1FOXdOLuP0z8vurK6ZV0pTuU14
6hUju9rFHHHGpGnWTU1H97WdMSnNTDAm1SmdMOkbb/e1qZnUXpRj5/62+YVd
yWmYk3Yr58OzzvnP8/7RXcy5+3h+zOyqe+4caiVncMakyX21h0w83ddBmong
RTlNh0zccd3XgS8X7h5MWpvJ0MHEzGcunWOvG+73TObOEGPSIZiIMCaylwsP
E0wam8lQjIlHMHmvQzAxs+WlH/ec64bNCRNz/uS+lw6OIJjUNZOh3dcBt3Jm
IJg0NpPRBJPBmolYMDGMSa9ym/BDxfkTk01mgjFpCSatzcSLMRltMCk3k2mD
SYCMiUb3NY5m0pJNcIxJWsEkAsbEO5g0NpPaYGLm6r35Sfu5O+52t3L6PZOh
GZMRB5MBGZP2YCLFmICCSWMzmTaY1DWTxmCSzfLX8h3hORtudbdyrt25yWaT
NINJZ8Zk0GYSajBpbSYnS4xJr+824XxWFudPimyCDSaSjMkwwcR3K8c7mEzD
mMx0MKk2E3vaxC7pPPbO7z5TcCJ3j+9jMOncTGY4mJSbybTBZJBmUiu+mtMm
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
CYcT+dhs8v8BY1hbrQ==
     "], {{0, 412.5}, {1101.75, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96, 96}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "Greenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{989.75, Automatic},
   ImageSizeRaw->{1101.75, 412.5},
   PlotRange->{{0, 1101.75}, {0, 412.5}}]], "Input",ExpressionUUID->
  "a9e957d7-9775-4cc7-9b88-71f075024b9e"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.823151924655737*^9, 3.8231519513856044`*^9}, {
   3.8231541379359493`*^9, 3.8231541518287706`*^9}, {3.8231550715678587`*^9, 
   3.8231550731823483`*^9}, 3.8231551165242395`*^9, {3.825329887620778*^9, 
   3.8253298876217775`*^9}},ExpressionUUID->"c3dfe293-7c5a-41ff-869b-\
830206bf43fb"],

Cell[TextData[{
 "The Balanced Line is a typical manufacturing line. Each station has two \
dices that represent the available capacity of the station. The statistical \
range per station is ten. Which means that each dice can roll one to six \
points. The points are added for each station in every round. The number of \
rounds depends on the variable ",
 StyleBox["timeUnits",
  FontSlant->"Italic"],
 ". What ",
 StyleBox["station 1 ",
  FontSlant->"Italic"],
 "has rolled will be forwarded to ",
 StyleBox["station 2 ",
  FontSlant->"Italic"],
 "in the form of material. For more details about the process, the reader \
should study the material as suggested in section 1. Introduction."
}], "Text",
 CellChangeTimes->{{3.825226866928685*^9, 3.8252270138128777`*^9}, {
  3.8252270554873986`*^9, 3.82522725956558*^9}, {3.8252272973374987`*^9, 
  3.825227427713239*^9}, {3.825315679936857*^9, 
  3.825315712579197*^9}},ExpressionUUID->"3e300580-181b-42fa-9351-\
791860667ca1"],

Cell[CellGroupData[{

Cell["3.1 Calculation part", "Subsection",
 CellChangeTimes->{{3.821518252599161*^9, 3.8215182557789326`*^9}, {
   3.823778541584429*^9, 3.823778542792016*^9}, {3.8244546364732184`*^9, 
   3.8244546376653285`*^9}, 
   3.825222971703415*^9},ExpressionUUID->"df34e171-0bcd-4ac3-8933-\
341b271aebb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SeedRandom", "[", "1577", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.821874677497647*^9, 3.8218746896727066`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"82767dd4-ddc7-46c9-bc35-a67743b2c091"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dg", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "timeUnits"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "19"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8214558035311375`*^9, 3.821455807342852*^9}, 
   3.8214558859648914`*^9, 3.8214561632587276`*^9, {3.8214564494878187`*^9, 
   3.821456454408559*^9}, {3.8214583452073336`*^9, 3.8214583466446075`*^9}, 
   3.8214585591724825`*^9, {3.82145922125205*^9, 3.8214592258135605`*^9}, 
   3.8230826337261705`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"fdacdaf0-3052-46ea-b1c2-a3355edfce15"],

Cell[BoxData[
 RowBox[{"Do", "[", "\[IndentingNewLine]", "       ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], " ", "=", " ", "i"}], ";", 
    "\n", "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], ",", " ", "2"}], "]"}], "]"}]}], ";",
     "\[IndentingNewLine]", "      ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "=", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "4"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "6"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "3"}], "]"}], "]"}]}]}]}], "]"}], ";", "\n", 
    "        ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], ",", " ", "2"}], "]"}], "]"}]}], ";",
     "\n", "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "               ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "7"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "9"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "    ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], ",", " ", "2"}], "]"}], "]"}]}], ";",
     "\n", "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "10"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "12"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "    ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], ",", "2"}], "]"}], "]"}]}], ";", 
    "\n", "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "               ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "15"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "    ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], ",", " ", "2"}], "]"}], "]"}]}], ";",
     "\n", "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "16"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "18"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "    ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], ",", " ", "2"}], "]"}], "]"}]}], ";",
     "\n", "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "18"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "19"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "18"}], "]"}], "]"}]}]}], ",", "\[IndentingNewLine]",
    " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "timeUnits", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.8214580617588253`*^9, {3.821458126102867*^9, 3.8214581867917557`*^9}, 
   3.8214582284850206`*^9, {3.821458275598774*^9, 3.821458276754862*^9}, 
   3.8214584242355423`*^9, 3.8230826337311697`*^9, {3.8253212168692026`*^9, 
   3.8253212396938777`*^9}, {3.8253213343069925`*^9, 3.825321389548726*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b3264b48-837c-48ea-a343-b4e11b307d3d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalwipBL1", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finishedgoodsBL1", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"dg", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BL1", "=", "dg"}], ";"}]}], "Input",
 CellChangeTimes->{{3.821457222675911*^9, 3.821457234438753*^9}, {
   3.821457293315337*^9, 3.821457321011918*^9}, {3.8214573518641214`*^9, 
   3.821457397212779*^9}, 3.8217925219316416`*^9, {3.8217930498308496`*^9, 
   3.8217930552387447`*^9}, {3.821793096002242*^9, 3.8217931053612275`*^9}, {
   3.823082633736913*^9, 3.8230826337419653`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e050e895-ce2e-4dd4-a26d-29ad8c31b000"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"availCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{
           RowBox[{"3", "*", "i"}], "-", "1"}]}], "]"}], "]"}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"utilCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"3", "*", "i"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"8e828675-1d82-4443-bc80-44719f2b2a63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<station 1\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  2\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  3\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  4\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  5\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  6\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}]}], "|>"}]}]}], " ", "|>"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<available versus utilized capacity per workstation\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<available capacity\>\"", ",", "\"\<utilized capacity\>\""}], 
          "}"}], ",", "Below"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<station 1\>\"", ",", "\"\<station 2\>\"", ",", 
           "\"\<station 3\>\"", ",", "\"\<station 4\>\"", ",", 
           "\"\<station 5\>\"", ",", "\"\<station 6\>\""}], "}"}], ",", 
         "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}], ",", 
        RowBox[{"Total", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}], ",", "Blue"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<queue12\>\"", ",", "\"\<queue23\>\"", ",", "\"\<queue34\>\"", 
         ",", "\"\<queue45\>\"", ",", "\"\<queue56\>\"", ",", 
         "\"\<totalwip\>\"", ",", "\"\<finalgoods\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<wip per queue, total wip of all queues and final goods\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BL1RollingStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "Pink"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BL1QueueStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "LightBlue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"BL1QueueGraph", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue12\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue23\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "10"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue34\>\""}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "13"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue45\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "16"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue56\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "18"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<finalgoods\>\""}]}], "]"}]}],
          "}"}]}], "}"}], ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TBL1", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sp", "-", "tvc"}], ")"}], "*", "finishedgoodsBL1"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IBL1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"totalwipBL1", "*", "tvc"}], ")"}], "+", "invest"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npBL1", "=", 
   RowBox[{"TBL1", "-", "oe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roiBL1", "=", 
   RowBox[{"PercentForm", "[", 
    RowBox[{
     RowBox[{"npBL1", "/", "IBL1"}], " ", "/", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"csBL1", "=", 
   RowBox[{"PercentForm", "[", "1.", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ltBL1", "=", 
   RowBox[{
    RowBox[{"totalwipBL1", " ", "/", " ", "finishedgoodsBL1"}], " ", "/", " ",
     "timeUnits"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pBL1", "=", 
   RowBox[{"TBL1", "/", "oe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"itBL1", "=", 
    RowBox[{"finishedgoodsBL1", " ", "/", " ", "totalwipBL1"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"financeBL1", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<Throughput\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Balanced Line\>\"", "->", 
           RowBox[{"N", "[", "TBL1", "]"}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Inventory\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Balanced Line\>\"", "->", 
           RowBox[{"N", "[", "IBL1", "]"}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Operating Expenses\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Balanced Line\>\"", "->", 
           RowBox[{"N", "[", "oe", "]"}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Net Profit\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Balanced Line\>\"", "->", 
           RowBox[{"N", "[", "npBL1", "]"}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ROI\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Balanced Line\>\"", "->", 
           RowBox[{"N", "[", "roiBL1", "]"}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Customer Service\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Balanced Line\>\"", "->", 
           RowBox[{"N", "[", "csBL1", "]"}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Productivity\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Balanced Line\>\"", "->", 
           RowBox[{"N", "[", "pBL1", "]"}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Inventory Turnover\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{"\"\<Balanced Line\>\"", "->", 
           RowBox[{"N", "[", "itBL1", "]"}]}], "|>"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "}"}], ",", 
     RowBox[{"HeaderBackground", "\[Rule]", "LightGreen"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.821457715262518*^9, 3.821457729134305*^9}, {
   3.8217859195405917`*^9, 3.821785930310586*^9}, {3.8217859662167063`*^9, 
   3.8217859840569983`*^9}, {3.8217860163240356`*^9, 
   3.8217860168040657`*^9}, {3.821790264833404*^9, 3.821790279446218*^9}, {
   3.8218718063223743`*^9, 3.821871815803341*^9}, {3.8218725835723352`*^9, 
   3.8218725840916433`*^9}, {3.8230826337562437`*^9, 3.8230826337761903`*^9}, 
   3.82308274879951*^9, 3.823082803106676*^9, {3.8230873066508627`*^9, 
   3.8230873197116375`*^9}, {3.8231578212193975`*^9, 
   3.8231578292130375`*^9}, {3.8231578773926697`*^9, 
   3.8231578835930605`*^9}, {3.823157922333503*^9, 3.823157955132847*^9}, {
   3.8231580161563587`*^9, 3.8231580275835505`*^9}, {3.823158066305477*^9, 
   3.8231580813600025`*^9}, {3.8231581191100473`*^9, 
   3.8231581358000317`*^9}, {3.8231581783412156`*^9, 
   3.8231581850584097`*^9}, {3.8237638578800583`*^9, 3.82376390626791*^9}, {
   3.8237639647070036`*^9, 3.8237639877705317`*^9}, {3.823764082196866*^9, 
   3.8237641399991384`*^9}, {3.823764335835684*^9, 3.82376446641782*^9}, {
   3.823764789233591*^9, 3.82376479057397*^9}, {3.8237648748118267`*^9, 
   3.8237648938435907`*^9}, {3.8237649293641553`*^9, 3.823764960514818*^9}, {
   3.823765009301943*^9, 3.823765322370308*^9}, {3.8237717802231483`*^9, 
   3.8237719222028255`*^9}, {3.823772301588084*^9, 3.823772309624287*^9}, {
   3.823772507274143*^9, 3.823772647781766*^9}, 3.8237727006161075`*^9, {
   3.823772747340617*^9, 3.823772774943731*^9}, {3.823772843163081*^9, 
   3.8237728446297293`*^9}, {3.823774221269699*^9, 3.823774244712495*^9}, {
   3.823775749953433*^9, 3.823775754875225*^9}, {3.82515224043254*^9, 
   3.8251522931745152`*^9}, {3.825152348037773*^9, 3.8251526146436443`*^9}, {
   3.825152647733885*^9, 3.825153121012685*^9}, {3.825153181182821*^9, 
   3.825153224723009*^9}, {3.8251532696139793`*^9, 3.825153323591646*^9}, {
   3.825153402995452*^9, 3.8251534680547495`*^9}, 3.8251536186523523`*^9, {
   3.8251536592426867`*^9, 3.8251536736407566`*^9}, {3.8251537145344114`*^9, 
   3.8251541775399046`*^9}, {3.825154248648899*^9, 3.82515431693164*^9}, {
   3.8251543836563206`*^9, 3.825154389503564*^9}, {3.825154492106853*^9, 
   3.825154520077314*^9}, {3.825154565664471*^9, 3.82515456765907*^9}, {
   3.8251546184650106`*^9, 3.8251546637003736`*^9}, {3.8251546986308727`*^9, 
   3.8251551229654236`*^9}, 3.825155162179881*^9, {3.82515588077423*^9, 
   3.825155887274656*^9}, {3.8251559585244837`*^9, 3.825155976174837*^9}, {
   3.8251570460816617`*^9, 3.825157049976363*^9}, {3.825157112504949*^9, 
   3.8251571465277777`*^9}, 3.8251572749669313`*^9, {3.8253249575827856`*^9, 
   3.8253249604963264`*^9}, {3.8253250028720775`*^9, 
   3.8253250357403474`*^9}, {3.825325528111929*^9, 3.8253256173812623`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"66aae4b6-ef6d-4729-9d51-d5c417a3b62e"]
}, Closed]],

Cell[CellGroupData[{

Cell["3.2 Rolling dice statistics", "Subsection",
 CellChangeTimes->{{3.8218814891017313`*^9, 3.821881492078343*^9}, {
   3.8230872746144*^9, 3.823087278465913*^9}, 3.823778457422862*^9, {
   3.824454645292658*^9, 3.8244546460287514`*^9}, 
   3.8252229736718345`*^9},ExpressionUUID->"88d2e239-caf1-4ed9-ab59-\
d8eaa0890d21"],

Cell[TextData[{
 "How many points have been rolled in each station? What are the statistical \
results when we take the results overall",
 StyleBox[" timeUnits",
  FontSlant->"Italic"],
 "? "
}], "Text",
 CellChangeTimes->{{3.82522748302849*^9, 3.8252275664029474`*^9}, {
  3.825227639638699*^9, 3.8252276440881605`*^9}, {3.825315739155265*^9, 
  3.825315757622254*^9}},ExpressionUUID->"d3e629c9-df5f-42a6-9c26-\
97452def9c2c"],

Cell[CellGroupData[{

Cell[BoxData["BL1RollingStat"], "Input",
 CellChangeTimes->{{3.821880786642864*^9, 3.8218807866578655`*^9}, {
   3.8218808169207344`*^9, 3.821880872435788*^9}, {3.8218809151433873`*^9, 
   3.821881138477154*^9}, {3.821881177694233*^9, 3.8218812253474064`*^9}, {
   3.821881277549237*^9, 3.821881439081002*^9}, {3.8230827221636705`*^9, 
   3.823082764657403*^9}, {3.8251559863950386`*^9, 3.82515599839196*^9}, {
   3.825157096071124*^9, 3.8251570979376955`*^9}, {3.8251635328846903`*^9, 
   3.8251635533890514`*^9}, {3.825163604836212*^9, 3.825163611602789*^9}, {
   3.825323756559862*^9, 3.825323787654911*^9}, {3.825323869877418*^9, 
   3.8253239167595253`*^9}, {3.8253242550512114`*^9, 3.825324261966707*^9}, {
   3.8253244513791094`*^9, 3.825324471920475*^9}, {3.825324641952342*^9, 
   3.8253246540663347`*^9}, {3.825324721190631*^9, 3.8253247363040695`*^9}, {
   3.8253247673764477`*^9, 3.825324773980121*^9}, {3.825324843427622*^9, 
   3.8253248443574266`*^9}, 3.8253248793513613`*^9, {3.8253256401889296`*^9, 
   3.825325680031376*^9}, {3.8253258015374336`*^9, 3.8253258589113073`*^9}, {
   3.825325974795277*^9, 3.825325984609789*^9}, {3.8253260800201335`*^9, 
   3.8253261735800858`*^9}, {3.825326504485051*^9, 3.825326508675639*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"04957034-0155-4abe-b008-a6470f4ada3b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "station 1" -> 2., "station 2" -> 2., "station 3" -> 2., "station 4" -> 
          2., "station 5" -> 2., "station 6" -> 2.], "Mean" -> 
        Association[
         "station 1" -> 6.91, "station 2" -> 6.95, "station 3" -> 6.73, 
          "station 4" -> 6.58, "station 5" -> 6.91, "station 6" -> 6.96], 
        "Median" -> 
        Association[
         "station 1" -> 7., "station 2" -> 7., "station 3" -> 7., "station 4" -> 
          7., "station 5" -> 7., "station 6" -> 7.], "StandardDeviation" -> 
        Association[
         "station 1" -> 2.530999722631276, "station 2" -> 2.4510356500009864`,
           "station 3" -> 2.4323368652928457`, "station 4" -> 
          2.3748684174075834`, "station 5" -> 2.781958470087742, "station 6" -> 
          2.5972790735418836`], "Variance" -> 
        Association[
         "station 1" -> 6.405959595959596, "station 2" -> 6.007575757575758, 
          "station 3" -> 5.916262626262626, "station 4" -> 5.64, "station 5" -> 
          7.73929292929293, "station 6" -> 6.745858585858586], "Max" -> 
        Association[
         "station 1" -> 12., "station 2" -> 11., "station 3" -> 12., 
          "station 4" -> 12., "station 5" -> 12., "station 6" -> 12.]]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[1, 0.5, 0.5]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 1", 
                  Style[
                  "station 1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 2", 
                  Style[
                  "station 2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 3", 
                  Style[
                  "station 3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 4", 
                  Style[
                  "station 4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 4"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 4"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 5", 
                  Style[
                  "station 5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 5"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 5"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 6", 
                  Style[
                  "station 6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 6"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 6"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.58"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.531"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.45104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.43234"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.37487"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.78196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.59728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.40596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.00758"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.91626"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.73929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.74586"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{601., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{601., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.821881243247888*^9, {3.8218813321270113`*^9, 3.8218813708108435`*^9}, 
   3.8218814441899633`*^9, 3.8218818441137915`*^9, 3.821882484927169*^9, 
   3.8218843627274446`*^9, 3.821884429686553*^9, 3.821884651060242*^9, 
   3.8223051087565174`*^9, {3.822920657245415*^9, 3.8229206834100113`*^9}, 
   3.822921618314418*^9, 3.8229218704733515`*^9, 3.822922342054572*^9, 
   3.823082674385247*^9, 3.8230827738538465`*^9, 3.8230831816502805`*^9, 
   3.8230866119615808`*^9, 3.8230866795515833`*^9, 3.8230868848860435`*^9, 
   3.823087215441106*^9, 3.8230873959382114`*^9, 3.823088642407454*^9, 
   3.8230887759849997`*^9, 3.823149685371222*^9, 3.823157960855875*^9, 
   3.8231580384978304`*^9, 3.823158750722472*^9, {3.823765367191002*^9, 
   3.8237653770112762`*^9}, 3.8237655248792844`*^9, 3.823771934581871*^9, 
   3.8237752352683926`*^9, 3.8237758039844675`*^9, 3.8237790113831987`*^9, 
   3.8251533352527337`*^9, 3.8251534839948626`*^9, 3.825153515798875*^9, 
   3.825155131280027*^9, 3.825155745274206*^9, 3.8251560473951235`*^9, 
   3.825156901625701*^9, 3.8251571672750626`*^9, 3.825157281684887*^9, 
   3.8251582820925417`*^9, 3.82515874877575*^9, 3.8251588360753794`*^9, {
   3.8251636146881456`*^9, 3.825163621736866*^9}, 3.82522392708949*^9, 
   3.8252257316883583`*^9, 3.825228198432948*^9, 3.82523921947095*^9, 
   3.825239374246153*^9, 3.8252400906357517`*^9, 3.8252403770218477`*^9, 
   3.8252405313843126`*^9, 3.825240745098772*^9, 3.8252410003748035`*^9, 
   3.825244599686642*^9, 3.825244926094015*^9, 3.825245184637792*^9, 
   3.825245445729662*^9, 3.825246084441107*^9, 3.825246190802826*^9, 
   3.825246321247463*^9, 3.8252464657119026`*^9, 3.8252465832265024`*^9, 
   3.825246656894642*^9, 3.8252467612523327`*^9, 3.8252470515411143`*^9, 
   3.82524713413998*^9, 3.825247193988266*^9, 3.8252472621503057`*^9, 
   3.825247408300068*^9, 3.825247504248876*^9, 3.82524782775107*^9, 
   3.825248241796039*^9, 3.82524834340847*^9, 3.8252484385599136`*^9, 
   3.8252505472012777`*^9, 3.825250816451666*^9, 3.82531751435038*^9, 
   3.825319617466748*^9, 3.825321252659937*^9, 3.8253214305859385`*^9, {
   3.825324263497858*^9, 3.825324280648341*^9}, 3.8253243379326677`*^9, 
   3.8253244755114746`*^9, {3.8253248516809044`*^9, 3.8253248810417833`*^9}, 
   3.8253256558683376`*^9, 3.8253259854507074`*^9, {3.825326091604043*^9, 
   3.825326117606137*^9}, 3.825326175137257*^9, 3.8253265100889235`*^9, 
   3.8253288732754507`*^9, 3.8253970749104347`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"4d98b134-7ca9-49c5-9a8e-2681ae55ec40"]
}, Open  ]],

Cell["\<\
The results are in line with the outcome of the two dices in section 1.2 \
Rolling the dices.\
\>", "Text",
 CellChangeTimes->{{3.8252276876464014`*^9, 3.8252277706877112`*^9}, 
   3.825227917946274*^9},ExpressionUUID->"0ac83f76-c63c-4493-9321-\
37fcc22998ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.3 Queue statistics", "Subsection",
 CellChangeTimes->{{3.8230873328227625`*^9, 3.8230873477440815`*^9}, 
   3.823087389433859*^9, 3.8237784784943027`*^9, {3.824454650725417*^9, 
   3.824454651898778*^9}, 
   3.825222976384103*^9},ExpressionUUID->"a5f7b1e5-97a0-43d4-905d-\
d836b12ebd72"],

Cell[TextData[{
 "The",
 StyleBox[" Queue statistics ",
  FontSlant->"Italic"],
 "are different compared to the ",
 StyleBox["Rolling dice statistics. ",
  FontSlant->"Italic"],
 "Here we see material among two stations as timelines overall ",
 StyleBox["timeUnits",
  FontSlant->"Italic"],
 ".\nIsn\[CloseCurlyQuote]t it obvious that our system belongs to the group \
of dynamic systems? It is recognizable that we have a strong interdependence \
caused by the variance of each roll of dices among the stations."
}], "Text",
 CellChangeTimes->{{3.8252278001504655`*^9, 3.825227852444456*^9}, 
   3.825227883975378*^9, {3.825227930482336*^9, 3.825227995575817*^9}, {
   3.8252280260076804`*^9, 3.8252280260406866`*^9}, {3.82522809988756*^9, 
   3.825228144346694*^9}, {3.8252282403591056`*^9, 3.825228253430207*^9}, {
   3.8252282921694937`*^9, 3.8252283216127825`*^9}, {3.8252283613195105`*^9, 
   3.82522842625354*^9}, {3.8252287699740915`*^9, 3.825228777546036*^9}, {
   3.825315811247425*^9, 3.8253158888751287`*^9}, {3.825315921025589*^9, 
   3.8253159235600166`*^9}},ExpressionUUID->"1d683d8b-f9c0-45f3-af7c-\
aec27d229adb"],

Cell[CellGroupData[{

Cell[BoxData["BL1QueueGraph"], "Input",
 CellChangeTimes->{{3.823087364578878*^9, 3.823087365477603*^9}, {
  3.825155903614724*^9, 3.8251559075717115`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"8d99a2a5-81b3-4522-a92d-7b1220dfd329"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJx1lMlKQzEUQB+uXLpw4cKFFhEREcfWuXGodahTnbeia38hn5ZP8hNUeo6Q
CwpyOE1y3829SWbfPocfY03TvP/8/3L099UdsZP4AW7DcbgJJ+AKnIRrcCqM
T8NFOBPGW2H9HGzD+TB/Aa6GuK5fCuPLcCvE6YZ5jhtn/R9uBFoX62Xee7AT
3O/shnXmswMPwjzdOAnu/7NON25cRx5ZN+/DOm7WjXcE2XfWrc8xpI5ZN/5J
WK9blx5k37lXz29OQ/66++7Xnvv1/Oas3k/W7dM55Fxk3X5fQM5d1j23l5Bz
l4M3gxB/EMavIOc8657L6zrfrLu/G2j9dPt/y+/0PeGeixy86Nb3rvak+z2d
fhfd/If1eNLtp06/i+75uofsP+n0J+uu130nHmpPOu9W1nnXit6Cj5B3Jun2
W+edKbr5P9X5Jd366dy/gv/ds2ece5Vw73nWubdF9514gbw7Sff7wYvu/XiF
7fQNIlN7Iw==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue12\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 39.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdk71OA0EMhC0qSgoKCgpACCGEEBAIvyHOAQnhN7kECC2CmlfYR9tHyiMA
upmVPCedPo3Ha3t379Y/f+rvBTP7+nv/2TzzbsNjRwBsg4vgCbgEtsBlyV8B
z8BV8BRcE39D/E3RW+ARuO1x3h3pvyt6D9wXcv4D0YeyriXkHKzDObiuLXGe
2yXIfV2APIcr8FzizGN91mGfjvRhHa7rNkwOTXYkjjzrid+TvCrqVMm666gT
dLpF/AaETqJLXFj8vuT1JT6Q9QPJu4MegtQP8IeRzDP694grJa/0peb8j+JT
Yw57ivtJ1DynZ/FF24vMT41+NgLRz0eyD2rMnZnPOcZxHz6OfhrHubP4Vkff
61gv0Wd/+jzfCQjfJ9FPorNomyKP809lfvo4j0yf9/Ma6zl0+Y7Ez9SoZ28g
7supcb8Jmv9dps//7z36LjpRV1gPXe5/Bh/9fCb9RWfm8/v6KPP/AtpfjM0=

          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue23\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 59.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJx1lMlKQ0EQRRtXLl24cOFCg4iIiPMQo+nEaJw10ThsRdf+Qn1af5KfoJJz
A33BQDic11U9vaq3+P41/JxKKX38/v84/n23x9zLPIA7cBruwxnzWdiCc/AE
zsNDuACPYMPil2ATLud6fyu2v1UbX7P8dXgMN2AHbppvWfy2udbVeXdtPe1D
59U9HfxDxTWNug/dU6tmZNuX5lOe9tW2eXI9PplH+Z06PuRav1vnRdfGTyHn
DvPUs/V7Nn5m43K9l3PIewu57r1v68v13i4gdRFy1cUlpK5Crrq8snHzdF3H
h1x1fwPpizBPt7DBuHm6s3y5+vDe8s3TQ52f5eSHnD4vcuUPIOfLcvo0BnV8
kev8Q0ifZjn3H+ZFru/AI+Q7kOWqBzn1UuTq46c6Psup/5DTl0Wu+hpB6inL
mT9GdXyRq/+eiaN/Mq6+Czl9UeTqgxfiqPssZzzkzF/wSV++QuXL6ZOQM1+x
+PRGXD//AB4ffGI=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue34\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 47.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlElKRDEQQIMrly5cuHChjYiIiK22s3ac56m1Hbaia6+Qo+VIHkHF94RU
Q/N4P/lV+VVFpt8+Bx8jKaX3n/8v/35f/T9uZh7ANTgKe3AMduE4nIMTcBFO
wiU4BRdgBy7DGbgCZ8N5zGO8+fDcuMZZDPt8rxvo9y0HXwn7VkPcXnDPab51
2IEb0LpYd+uyFda3oXXfgX7vbvC9kK8PrWNu8xXdPu+3+UvwdACpc9Gtz2F7
nhI8HYX4uv06DvF1z38Szq97/lPIHBa9A88g/Sm65z+H9KGch/ULSL+L7txc
tvvLZbs/XbX7i+7cXLdegqcbyBwW3fy30Prpzv1du55166HTrxo83UPmMesd
3tfpZ9W9VwaQ/med/hadetXg6aH1rFtvne+rYT09hvd1+6FTrxrW0xDSj6xz
T5Rhu7/qzu8TpJ5Zt1+6+YOnZ8i9knXuiaIzv1V3fl7aeFm3fjr3WtW9B1//
838DJI91cQ==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue45\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 27.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxllElOAzEQAEecOHLIgUMOECGEEIrYd4gDJBDWEPYrgjNf8NPmSTwBUKoi
uYkUlcrubtsznp5//xp9TlVV9fH7/+P4990ZczcxALfgNNyGM6mMb8BNOAtX
YRO24Rxcga3gC3ANLob5pVB/Ga6HOPPbIc68Rohzn9Zx3Y2Q5zmt53Mybztw
B+4GHsA9mOA+PA5xzh/CE3gEu2Ve1juwF+r0idOt1y3j/tUxjn3mmHdajme8
OodnjONZd3+9Mt7x3A/7DrTuJM99uK77uICeT/d8A8adH4TzXUKfs+57uGKc
+IxP3ts15N5k3ftyA7k3Wfd+3YZ83Xt1B7mnWfeeDcv4pLvesIyvde/JfelJ
53w5eK27/ghy3qR7nuB18OoB8v0lne836/SpWvd7fyznk07fyTr1at0++FTO
J52+lnX6R6234DOkTyad/WXd/ev25ZdyvRQ869SvdfvqK6SPJt18nf3Wuv3w
DTbTD+bJfI0=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue56\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 47.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlDlOQ0EQREdEhAQEBARgIYQQQuw7eFjMZozBbCZFEHOFPto/ko8AyPWQ
uixZpedeqqfn+89/fA++Jkopn7/fPx1/Ru2xLlX9IJ2WTkpb0inpguXNmJI/
azpncRQf+i6aksec+C7bXCvmt2p91ix/3fI3LL5p8S0pe9q2+I7xrvXbk3Le
fcs/sP6Hln8kZU/HUvZxYn5tKfdSpdpHwPif5n4Bt6RneZ6A8Tu3OIz/hVTP
QcDM38l+0cn55dLqYea/yvMEzP1f23yw/MqN+cPU31oc5vzdnB/dnF/ubD6Y
8/Wsvpfzy71U5w2Y+r717+f88iDVfVSY+zZuYPwf83kqrOcxYOotvwzM3ziM
G5j9P0n1Hqgw+4A1bwPzfD3neIWZH1a/Bub/92LzwzyPMPUw/q+Zq3HAzA/z
PnjLftU4YPYH4z/M81WY+mHOb+CW9P2//geVmm5s
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"finalgoods\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 1]]]], "Output",
 CellChangeTimes->{{3.8230873675270634`*^9, 3.8230873959992094`*^9}, 
   3.823088642465454*^9, 3.8230887760360003`*^9, 3.823149685425226*^9, 
   3.823157902350381*^9, {3.823157938811118*^9, 3.8231579674076996`*^9}, 
   3.823158041842313*^9, 3.8231581479024787`*^9, 3.8231587507854724`*^9, {
   3.8237653672640023`*^9, 3.823765382293849*^9}, 3.8237655249182844`*^9, 
   3.8237719346418705`*^9, 3.8237752353183937`*^9, 3.8237757705357857`*^9, 
   3.8237790114321823`*^9, 3.825153335525736*^9, 3.8251535161848745`*^9, 
   3.8251551316430283`*^9, 3.8251557456252112`*^9, 3.8251560474761133`*^9, 
   3.8251569016887116`*^9, 3.825157167680582*^9, 3.8251572821188917`*^9, 
   3.8251582824685483`*^9, 3.825158749157755*^9, 3.8251588365273247`*^9, 
   3.8251636221088676`*^9, 3.8252239273485413`*^9, 3.825225731966363*^9, 
   3.825228198742948*^9, 3.8252392197829504`*^9, 3.8252393745469856`*^9, 
   3.8252400907117515`*^9, 3.8252403775057945`*^9, 3.825240531679312*^9, 
   3.825240745470764*^9, 3.8252410007278023`*^9, 3.825244600000637*^9, 
   3.8252449264330187`*^9, 3.825245184927126*^9, 3.825245446141666*^9, 
   3.8252460845840564`*^9, 3.8252461908748255`*^9, 3.825246321331463*^9, 
   3.825246465799903*^9, 3.8252465833145065`*^9, 3.825246656977641*^9, 
   3.8252467613283854`*^9, 3.8252470516201096`*^9, 3.8252471342229805`*^9, 
   3.825247194067808*^9, 3.8252472622283106`*^9, 3.8252474083800683`*^9, 
   3.825247504329876*^9, 3.825247827827015*^9, 3.8252482418690867`*^9, 
   3.8252483434944696`*^9, 3.825248438631919*^9, 3.8252505472622776`*^9, 
   3.8252508167377186`*^9, 3.825317514679434*^9, 3.8253196177558002`*^9, 
   3.8253212529669847`*^9, 3.8253214308779387`*^9, 3.8253242809671197`*^9, 
   3.8253243382676992`*^9, 3.82532887356945*^9, 3.825397075215215*^9},
 CellLabel->
  "Out[39]//TableForm=",ExpressionUUID->"71858341-eabe-4a53-8f83-\
1be401b86993"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["BL1QueueStat"], "Input",
 CellChangeTimes->{{3.8251559273444066`*^9, 3.825155943674052*^9}, 
   3.8251569953946943`*^9, {3.8251636425544786`*^9, 3.825163694030854*^9}, {
   3.825324293394586*^9, 3.8253242996186*^9}, {3.825324355621475*^9, 
   3.825324360478444*^9}, {3.825326190508886*^9, 3.8253262164037504`*^9}, {
   3.825326517088142*^9, 3.825326524188075*^9}, {3.82532661315432*^9, 
   3.8253266366060104`*^9}, {3.8253267086421704`*^9, 3.8253267285348454`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"876591dc-bda1-4aa0-b894-cf01628fd032"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "queue 12" -> 5., "queue 23" -> 15., "queue 34" -> 4., "queue 45" -> 
          2., "queue 56" -> 2., "final goods" -> 2.], "Mean" -> 
        Association[
         "queue 12" -> 22.44, "queue 23" -> 38.67, "queue 34" -> 22.4, 
          "queue 45" -> 14.64, "queue 56" -> 21.9, "final goods" -> 6.64], 
        "Median" -> 
        Association[
         "queue 12" -> 22.5, "queue 23" -> 42., "queue 34" -> 22.5, 
          "queue 45" -> 15., "queue 56" -> 21.5, "final goods" -> 7.], 
        "StandardDeviation" -> 
        Association[
         "queue 12" -> 6.561780985141893, "queue 23" -> 13.091021674600057`, 
          "queue 34" -> 10.41851498753323, "queue 45" -> 5.476340295334379, 
          "queue 56" -> 12.096831541082704`, "final goods" -> 
          2.5604608171107786`], "Variance" -> 
        Association[
         "queue 12" -> 43.056969696969695`, "queue 23" -> 171.37484848484848`,
           "queue 34" -> 108.54545454545455`, "queue 45" -> 
          29.990303030303032`, "queue 56" -> 146.33333333333334`, 
          "final goods" -> 6.555959595959596], "Max" -> 
        Association[
         "queue 12" -> 39., "queue 23" -> 59., "queue 34" -> 47., "queue 45" -> 
          27., "queue 56" -> 47., "final goods" -> 12.]]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.87, 0.94, 1]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 12", 
                  Style[
                  "queue 12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 12"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 12"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 23", 
                  Style[
                  "queue 23", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 23"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 23"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 34", 
                  Style[
                  "queue 34", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 34"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 34"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 45", 
                  Style[
                  "queue 45", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 45"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 45"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 56", 
                  Style[
                  "queue 56", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 56"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 56"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["final goods", 
                  Style[
                  "final goods", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "final goods"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "final goods"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["38.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["21.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.56178"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.091"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10.4185"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.47634"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0968"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.56046"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43.057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["171.375"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["108.545"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29.9903"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["146.333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.55596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["27.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{610., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{610., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8230873828878813`*^9, 3.8230873960682096`*^9}, 
   3.8230886425374603`*^9, 3.823088776096999*^9, 3.8231496854802203`*^9, 
   3.8231579024363284`*^9, {3.8231579389030685`*^9, 3.8231579674786987`*^9}, 
   3.823158041914259*^9, 3.8231581479854784`*^9, 3.8231587508434772`*^9, {
   3.823765367345001*^9, 3.823765387950841*^9}, 3.8237655249632845`*^9, 
   3.8237719347119656`*^9, 3.8237752353754425`*^9, 3.8237757706237335`*^9, 
   3.8237790114821835`*^9, 3.825153335628745*^9, 3.825153516271944*^9, 
   3.825154335695225*^9, 3.825155131779026*^9, 3.8251557457392073`*^9, 
   3.825156047629281*^9, 3.8251569017597017`*^9, 3.8251569963763742`*^9, 
   3.8251571678045793`*^9, 3.8251572822538867`*^9, 3.825158282589548*^9, 
   3.8251587492807503`*^9, 3.825158836651322*^9, 3.8251636222308655`*^9, {
   3.825163675638977*^9, 3.825163695046008*^9}, 3.8252239274535418`*^9, 
   3.8252257320914106`*^9, 3.8252281988809476`*^9, 3.8252392198939505`*^9, 
   3.8252393747179337`*^9, 3.8252400908357*^9, 3.825240377671797*^9, 
   3.8252405317982597`*^9, 3.8252407455927644`*^9, 3.825241000874802*^9, 
   3.825244600130638*^9, 3.825244926578013*^9, 3.825245185037072*^9, 
   3.825245446275669*^9, 3.825246084708111*^9, 3.8252461909898243`*^9, 
   3.8252463214274645`*^9, 3.8252464659029026`*^9, 3.8252465834175014`*^9, 
   3.825246657078595*^9, 3.8252467614273324`*^9, 3.8252470517221093`*^9, 
   3.8252471343309803`*^9, 3.8252471941688027`*^9, 3.8252472623473587`*^9, 
   3.825247408484069*^9, 3.825247504441876*^9, 3.8252478279380684`*^9, 
   3.825248241964034*^9, 3.8252483435934696`*^9, 3.8252484387289133`*^9, 
   3.825250547374284*^9, 3.8252508168516655`*^9, 3.825317514803381*^9, 
   3.8253196178877525`*^9, 3.825321253095931*^9, 3.8253214309969387`*^9, 
   3.8253242811020703`*^9, {3.8253243266788397`*^9, 3.825324361610608*^9}, 
   3.825326217916286*^9, 3.825326525348911*^9, 3.825326620746603*^9, {
   3.825326715455657*^9, 3.8253267311932526`*^9}, 3.8253288736864505`*^9, 
   3.825397075341216*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"d3ffa90c-ba5f-4ac5-b840-1b487a11493b"]
}, Open  ]],

Cell[TextData[StyleBox["Reminder: The table here shows material units/pieces \
in each queue. Not dice points!",
 Background->RGBColor[1, 1, 0]]], "Text",
 CellChangeTimes->{{3.8252288159079723`*^9, 3.8252288914605103`*^9}, {
  3.8252289839243183`*^9, 3.8252289934019537`*^9}, {3.8252294781756763`*^9, 
  3.825229480423115*^9}},ExpressionUUID->"de16bb20-20c2-4b20-9baf-\
8af97a62db29"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
3.4 Comparison of a) available and utilized capacities and b) last run WIP \
plus Final goods\
\>", "Subsection",
 CellChangeTimes->{{3.821518274470482*^9, 3.821518276579239*^9}, 
   3.8237785136548433`*^9, {3.8244511919760227`*^9, 3.824451203222043*^9}, {
   3.824454658740872*^9, 3.824454670857942*^9}, 
   3.8252229804088125`*^9},ExpressionUUID->"1b38e92d-0865-42aa-963f-\
56e057e80773"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\"\<*        *\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821456255721122*^9, 3.8214562940870533`*^9}, {
   3.821517878729062*^9, 3.8215178870449743`*^9}, {3.8215180125822396`*^9, 
   3.821518024863907*^9}, {3.821518080851866*^9, 3.821518127765458*^9}, 
   3.821518166380554*^9, {3.821790334459757*^9, 3.8217903659746046`*^9}, {
   3.821872890535138*^9, 3.8218728917196484`*^9}, {3.8218730141525397`*^9, 
   3.8218730149408293`*^9}, {3.8218736210600863`*^9, 
   3.8218737104281983`*^9}, {3.8218737688077064`*^9, 
   3.8218738498097906`*^9}, {3.821881873663574*^9, 3.821881953997783*^9}, {
   3.821881995594054*^9, 3.821882047674977*^9}, 3.8218824677051945`*^9, {
   3.8231579893422155`*^9, 3.8231579948860693`*^9}, 3.823158208748166*^9, 
   3.8252262661563244`*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"eb428ea9-1958-4942-a06b-c5496cac94b3"],

Cell[BoxData[
 TemplateBox[{"*        *", "\"*        *\"", 
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5611439176649233, 0.}, {14.738231820482538`, 
         0.}}]}, {{}, {{{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.8391260334064451, 0.}, {1.703475620043867, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.839126033406445, 0.}, {2.703475620043867, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.246077273494179, 0.}, {4.110426860131601, 
                 695.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.246077273494179, 0.}, {5.110426860131601, 
                 692.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.653028513581913, 0.}, {6.517378100219335, 
                 673.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.653028513581913, 0.}, {7.517378100219335, 
                 673.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.059979753669648, 0.}, {8.92432934030707, 
                 658.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.059979753669648, 0.}, {9.92432934030707, 
                 652.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{10.466930993757382`, 0.}, {11.331280580394804`, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{11.466930993757382`, 0.}, {12.331280580394804`, 
                 649.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{12.873882233845116`, 0.}, {13.738231820482538`, 
                 696.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{13.873882233845116`, 0.}, {14.738231820482538`, 
                 664.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}}, {}, {}}, {}, {
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {1.271300826725156, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {2.271300826725156, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["695.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {3.67825206681289, 695.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["692.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {4.67825206681289, 692.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["673.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {6.085203306900624, 673.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["673.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {7.085203306900624, 673.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["658.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {8.49215454698836, 658.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["652.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {9.49215454698836, 652.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {10.899105787076092`, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["649.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {11.899105787076092`, 649.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["696.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {13.306057027163828`, 696.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["664.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {14.306057027163828`, 664.}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, {
        StyleBox[{Antialiasing -> False, {
           Directive[
            Thickness[Tiny]], {
            LineBox[{{0.5611439176649233, 0.}, {15.021773578538888`, 0.}}]}, 
           StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
          StyleBox[{{
             Directive[
              Thickness[Tiny]], 
             LineBox[{{0.839126033406445, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {0.839126033406445, 
                0.}]}], 
             LineBox[{{14.738231820482536`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.738231820482536`, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
               LineBox[{{2.703475620043867, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {2.703475620043867, 
                  0.}]}], 
               LineBox[{{3.2460772734941785`, 0.}, 
                 Offset[{-1.102182119232618*^-15, -6.}, {3.2460772734941785`, 
                  0.}]}], 
               LineBox[{{5.1104268601316, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.1104268601316, 
                  0.}]}], 
               LineBox[{{5.653028513581912, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.653028513581912, 
                  0.}]}], 
               LineBox[{{7.517378100219334, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {7.517378100219334, 
                  0.}]}], 
               LineBox[{{8.059979753669646, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {8.059979753669646, 
                  0.}]}], 
               LineBox[{{9.924329340307068, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {9.924329340307068, 
                  0.}]}], 
               LineBox[{{10.46693099375738, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {10.46693099375738, 
                  0.}]}], 
               LineBox[{{12.3312805803948, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.3312805803948, 
                  0.}]}], 
               LineBox[{{12.873882233845112`, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.873882233845112`, 
                  0.}]}]}}}, 
            StyleBox[{
              Directive[
               Thickness[Tiny]], 
              Directive[
               Thickness[Tiny]], 
              StyleBox[{
                InsetBox[
                 FormBox["\"station 1\"", TraditionalForm], 
                 Offset[{0, -2}, {1.771300826725156, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 2\"", TraditionalForm], 
                 Offset[{0, -2}, {4.17825206681289, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 3\"", TraditionalForm], 
                 Offset[{0, -2}, {6.585203306900623, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 4\"", TraditionalForm], 
                 Offset[{0, -2}, {8.992154546988356, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 5\"", TraditionalForm], 
                 Offset[{0, -2}, {11.399105787076092`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 6\"", TraditionalForm], 
                 Offset[{0, -2}, {13.806057027163824`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}]}, {{}}, 
               StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
             False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
         "GraphicsAxes"}, StripOnInput -> False]}}, {
      DisplayFunction -> Identity, AspectRatio -> 0.5, Axes -> {False, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.5611439176649233, 0.}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
       FormBox["\"available versus utilized capacity per workstation\"", 
         TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"available capacity\"", "\"utilized capacity\""}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5079726666666667, 0.313888, 
                    0.6270646666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.761959`", ",", "0.470832`", ",", "0.940597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2875306666666667, 0.473182, 
                    0.6180513333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.431296`", ",", "0.709773`", ",", "0.927077`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}],
              ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.651]]], 
         RGBColor[0.976, 0.6848, 0.26480000000000004`]], {{
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 22.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 44.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 47.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 23.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 7.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 143.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 664.}, 
           "RoundingRadius" -> 0]}}}, {}, {}}, {}, {
       InsetBox[
        FormBox[
         StyleBox["22", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {1., 22.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["44", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {2., 44.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["47", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {3., 47.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["23", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {4., 23.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["7", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {5., 7.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["143", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {6., 143.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["664", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {7., 664.}], 
        ImageScaled[{0.5, 0}]]}, {}, {}, {}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.4107501820830298, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["\"queue12\"", TraditionalForm], 0}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox["\"queue23\"", TraditionalForm], 0}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox["\"queue34\"", TraditionalForm], 0}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox["\"queue45\"", TraditionalForm], 0}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox["\"queue56\"", TraditionalForm], 0}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox["\"totalwip\"", TraditionalForm], 0}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox["\"finalgoods\"", TraditionalForm], 0}}, None}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"wip per queue, total wip of all queues and final goods\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{
  3.8218729239257975`*^9, 3.8218729774194336`*^9, {3.821873647056262*^9, 
   3.821873653076808*^9}, {3.821873685956045*^9, 3.821873711130408*^9}, {
   3.8218737994869285`*^9, 3.821873851972945*^9}, 3.8218753124160366`*^9, 
   3.821877207087426*^9, {3.8218818445787897`*^9, 3.821881955182271*^9}, {
   3.821882008103982*^9, 3.821882048419462*^9}, {3.821882469871814*^9, 
   3.821882485081115*^9}, 3.821884362866444*^9, 3.821884429812603*^9, 
   3.8218846512032433`*^9, 3.822305108928384*^9, {3.8229206573860364`*^9, 
   3.8229206920389023`*^9}, 3.8229216184393873`*^9, 3.8229218706027427`*^9, 
   3.822922342163949*^9, 3.8230826745672417`*^9, 3.8230827739738474`*^9, 
   3.8230831817902727`*^9, 3.8230866120965347`*^9, 3.8230866796875896`*^9, 
   3.8230868850190973`*^9, 3.8230872155710974`*^9, 3.8230873962012153`*^9, 
   3.823088642665455*^9, 3.8230887762310004`*^9, 3.82314968564222*^9, 
   3.823157995753319*^9, 3.8231580474833107`*^9, 3.8231581567710176`*^9, {
   3.823158197801654*^9, 3.823158210237465*^9}, 3.8231587509684715`*^9, {
   3.8237653675370026`*^9, 3.823765392216483*^9}, 3.8237655250703373`*^9, 
   3.823771934858818*^9, 3.8237752354993935`*^9, 3.823779011629184*^9, 
   3.825153335838744*^9, 3.825153516460875*^9, 3.825155132189905*^9, 
   3.8251557461332197`*^9, 3.825156047802416*^9, 3.8251569019067016`*^9, 
   3.8251571682265787`*^9, 3.8251572826718874`*^9, 3.825158282996557*^9, 
   3.825158749685754*^9, 3.8251588370798693`*^9, 3.825163622615872*^9, 
   3.825223927831495*^9, 3.8252257324883575`*^9, 3.825226239819999*^9, 
   3.8252262706870103`*^9, 3.8252281992850018`*^9, 3.8252392202919493`*^9, 
   3.825239375102929*^9, 3.8252400909926977`*^9, 3.8252403782437954`*^9, 
   3.82524053218626*^9, 3.8252407459777637`*^9, 3.8252410014198046`*^9, 
   3.825244600567643*^9, 3.825244927090426*^9, 3.825245185462762*^9, 
   3.82524544674067*^9, 3.8252460849970617`*^9, 3.825246191144825*^9, 
   3.8252463215844636`*^9, 3.825246466083907*^9, 3.825246583570507*^9, 
   3.8252466572315884`*^9, 3.8252467615813856`*^9, 3.8252470518731165`*^9, 
   3.8252471344859867`*^9, 3.825247194326803*^9, 3.825247262506306*^9, 
   3.825247408723075*^9, 3.8252475046139297`*^9, 3.825247828110068*^9, 
   3.8252482421060395`*^9, 3.825248343745475*^9, 3.8252484388799148`*^9, 
   3.8252505475202813`*^9, 3.825250817249667*^9, 3.825317515190381*^9, 
   3.8253196182557526`*^9, 3.8253212534969373`*^9, 3.825321431398939*^9, 
   3.825324281488119*^9, 3.8253243388396697`*^9, 3.8253288740625043`*^9, 
   3.825397075749215*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"c496268c-c18f-490b-842e-93529a32f20b"]
}, Open  ]],

Cell[TextData[{
 "A ",
 StyleBox["Balanced Line",
  FontSlant->"Italic"],
 " leads to an almost 100% utilization of the available capacity. At the end \
of our game, we have only 143 pieces in working-in-process (Ending WIP), but \
we have sold and shipped 664 final goods. An excellent result!\nLet us have a \
look at the financial figures."
}], "Text",
 CellChangeTimes->{{3.825229052680477*^9, 3.82522927449461*^9}, {
  3.8252293228037987`*^9, 3.825229324658782*^9}, {3.8253159739850817`*^9, 
  3.825316003789874*^9}},ExpressionUUID->"a62c0ff4-42a8-430a-88fc-\
1d9bb905e690"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.5 Throughput Accounting figures", "Subsection",
 CellChangeTimes->{{3.823764813969651*^9, 3.823764822036146*^9}, {
   3.823778130610317*^9, 3.823778139835655*^9}, {3.8244546827945566`*^9, 
   3.8244546837278233`*^9}, 
   3.8252229865267844`*^9},ExpressionUUID->"dd63d803-dd25-4ba4-9134-\
5ea15ae2fd58"],

Cell[CellGroupData[{

Cell[BoxData["financeBL1"], "Input",
 CellChangeTimes->{{3.823765335315918*^9, 3.823765346435973*^9}, {
  3.825163709704708*^9, 3.8251637408042808`*^9}, {3.8253243089951982`*^9, 
  3.825324313555956*^9}, {3.825324369544756*^9, 3.8253243745716205`*^9}, {
  3.8253262304917173`*^9, 3.8253263764626136`*^9}, {3.8253265319060254`*^9, 
  3.8253265351117687`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"b2e765e9-625e-45e1-b6cd-2a5676fedd81"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Throughput" -> Association["Balanced Line" -> 132800.], "Inventory" -> 
        Association["Balanced Line" -> 48600.], "Operating Expenses" -> 
        Association["Balanced Line" -> 30000.], "Net Profit" -> 
        Association["Balanced Line" -> 102800.], "ROI" -> 
        Association["Balanced Line" -> PercentForm[0.021152263374485596`]], 
        "Customer Service" -> Association["Balanced Line" -> PercentForm[1.]],
         "Productivity" -> Association["Balanced Line" -> 4.426666666666667], 
        "Inventory Turnover" -> 
        Association["Balanced Line" -> 4.643356643356643]]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 
        1, {All, All, "Balanced Line"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 1, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Balanced Line"}, {TypeSystem`AnyType}], 8], 1], 
     "Meta" -> Association[HeaderBackground -> RGBColor[0.88, 1, 0.88]], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[2]} -> 
        1, {All, All, "Balanced Line"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 1, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Balanced Line"}, {TypeSystem`AnyType}], 8], 1], 
     "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 1, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Balanced Line", 
                  Style[
                  "Balanced Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Balanced Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Balanced Line"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Throughput", 
                  Style[
                  "Throughput", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Throughput"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["132800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory", 
                  Style[
                  "Inventory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Operating Expenses", 
                  Style[
                  "Operating Expenses", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Operating Expenses"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Net Profit", 
                  Style[
                  "Net Profit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Net Profit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["102800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ROI", 
                  Style[
                  "ROI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ROI"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.115%\"", ShowStringCharacters -> False], 
                  0.021152263374485596`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Customer Service", 
                  Style[
                  "Customer Service", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Customer Service"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Productivity", 
                  Style[
                  "Productivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Productivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.42667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory Turnover", 
                  Style[
                  "Inventory Turnover", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory Turnover"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{297., {119., 125.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{297., {119., 125.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.823765367645003*^9, 3.8237654065748863`*^9, 3.823765525135338*^9, 
   3.823771935026826*^9, 3.8237723170726423`*^9, 3.823772661128547*^9, 
   3.823772724906082*^9, 3.823772803644741*^9, 3.823772853858321*^9, 
   3.8237742541320505`*^9, 3.823775235577443*^9, 3.8237758101367474`*^9, 
   3.823779011721183*^9, 3.825153335976844*^9, 3.825153516558881*^9, 
   3.8251551323112297`*^9, 3.8251557462462063`*^9, 3.8251560479234858`*^9, 
   3.8251569020347023`*^9, 3.8251571683635798`*^9, 3.8251572828158865`*^9, 
   3.8251582831215477`*^9, 3.825158749817749*^9, 3.825158837204869*^9, 
   3.825163622762867*^9, 3.8251637420264864`*^9, 3.8252239279344893`*^9, 
   3.8252257326014104`*^9, 3.8252281994439497`*^9, 3.825239220496951*^9, 
   3.8252393753499937`*^9, 3.8252400911436987`*^9, 3.8252403784637957`*^9, 
   3.8252405323982596`*^9, 3.8252407461927814`*^9, 3.825241001577802*^9, 
   3.8252446007536383`*^9, 3.825244927242424*^9, 3.825245185727766*^9, 
   3.8252454469167156`*^9, 3.8252460851350574`*^9, 3.825246191226825*^9, 
   3.825246321666464*^9, 3.825246466174901*^9, 3.8252465836555533`*^9, 
   3.825246657324589*^9, 3.8252467616613855`*^9, 3.8252470519621096`*^9, 
   3.825247134572982*^9, 3.8252471944130235`*^9, 3.825247262598404*^9, 
   3.825247408824069*^9, 3.825247504697877*^9, 3.825247828203069*^9, 
   3.8252482421840887`*^9, 3.825248343826476*^9, 3.8252484389649153`*^9, 
   3.825250547659278*^9, 3.8252508173936715`*^9, 3.8253175153893814`*^9, 
   3.8253196183857465`*^9, 3.825321253661984*^9, 3.825321431542939*^9, 
   3.8253242817241197`*^9, {3.8253243148180103`*^9, 3.8253243389936676`*^9}, 
   3.825324375590289*^9, {3.8253262552499013`*^9, 3.825326326264535*^9}, {
   3.8253263647215796`*^9, 3.82532637731264*^9}, 3.8253265363221083`*^9, 
   3.8253288741904497`*^9, 3.8253970759701614`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"c6244fc9-46a9-4c82-bc6f-0929ec49d8e5"]
}, Open  ]],

Cell[TextData[{
 "The financial figures of Throughput Accounting confirm the excellent result \
we have achieved so far. Please be aware that we can sell and ship all final \
goods independent from the scenario, hence the ",
 StyleBox["Customer Service",
  FontSlant->"Italic"],
 " will always be on a level of 100%.\nTherefore it is not a wonder that \
companies strive for balanced lines. But is such a solution realistic?\n\n\
According to Dr. Eliyahu Goldratt there is always at least one constraint \
that limits the flow inside a system. Typical reasons are capacities of \
machines and/or workers are insufficient, Murphy\[CloseCurlyQuote]s Law comes \
into play ",
 StyleBox["\[OpenCurlyDoubleQuote]Anything that can go wrong, will go wrong\
\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 ", or any other thinkable disturbance can limit the flow. In such a case we \
face a physical bottleneck or in other contexts called a constraint. Our line \
becomes unbalanced. In the next section, we will analyze a ",
 StyleBox["Constrained Line",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.8252295765705423`*^9, 3.825229800576494*^9}, {
  3.825231375586467*^9, 3.8252316158150263`*^9}, {3.825231706637312*^9, 
  3.825231851238843*^9}, {3.825231885741073*^9, 3.825232042557535*^9}, {
  3.825232083249087*^9, 3.8252321024489193`*^9}, {3.8252321546794653`*^9, 
  3.8252321702610507`*^9}, {3.825316034846874*^9, 
  3.825316072206685*^9}},ExpressionUUID->"eccc1be0-03a6-4a47-be3c-\
cf0d5fa6a501"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4. Constrained Line", "Section",
 CellChangeTimes->{{3.8214561974537773`*^9, 3.8214562194485636`*^9}, {
   3.8214579734515705`*^9, 3.821457978247307*^9}, 3.8215183370488915`*^9, {
   3.824454689492715*^9, 3.8244546902195187`*^9}, 
   3.8252229901004143`*^9},ExpressionUUID->"9ea18ad7-e093-42eb-8c10-\
b7a7ddfc7c61"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QeYVEXW8PH5vnfXCCZABQQVBQYYRZCgqGRQQaKJKBIckgyiZBERQVQQ
xEQOsoqgqEhwRARFspJcGAMgQVDGFxhfhFXY9f34qvt011TXDX27b3WfqlvV
z3l4hp47zcyoq/Pfe351bbf+bbP/b0ZGxhPnkV/adh3S4PHHuw679xLym/tz
nujdM+eRHnfnDHyk5yOP39Ltv8iTFci1K/+ekRF6O2Nxa3b+z+I27vN/C6et
0/wXnY9g7nWav9nMfdz83XHuhzkn3pz70QNx57zCeTAyS+zn/CXt4s4FhdPe
di60mQ7cFHGcjjBFvczSTmQu8jAXL+3sPpcUzkNOc2nhdLGdy2zmYW6K0VnG
TVduirtNN5gS8ebyZd3d54rC6eE0V1pn+SO2U7Jwsp2mFD89uSntNr1groo3
ZZb3jj8fh6bsx33iztWF09d2rrGZR7m51mb6sVPObXJgrqOT6zT9Ya6PN+Vz
H4s7FQpngO1UtJnHucm0zicwT3BTyWYGclPZcQbBVPEwWZ8Mdp8bCmcIPysi
cyM/Q52mqs0MY+cmtxkOU81xnoSp7mFuXjEiMp/GmRqfPuU+NQtnpNPUspmn
2antNqNgbrHOSm6egbnVbUbD1Ik3t618Nu7cHpkxTnOHzYyNzGehqes2z3FT
z3HGwdT3MA0+e959Gn72QtxpRGfVi+7TuHDG204Tm5nATVPHeQnmTg9z16qJ
/Ky2n7tXT4o7zVa/7D7NC2ey09zDzyvctHCZz18l09LTvAbTKt60/vz1uNOm
cN6wnbaFM8Vp7v2Cm6lOc5/NTGPnfreZDvNAvHnwixlxp13hzIzMGvtpXziz
nKZDZGY7TUebmcNOJ7eZC9PZZb4MzUNfvul9unw5z30eLpx/OE1Xft7ippvN
vM1N97VOM5+bHm7zDplHPEz22gXu07NwFjpNL27WvctNb7d5j5s+/Czipq/b
vE/mUQ/Tb90HjrM+NDmF82Hc6V84i23nMZv5iJsBjrME5nG3WQrzxIa4swxm
YLwZtGF53BlcOB/bzhCbyeVmKJ2N3HwCM8zTrIAZ7jifek8l/yeZVOJYS9KT
SrzUkmCnEi+1JG4quRg/lfC1JD2pxEstSXEq4WtJmlOJl1oSN5XY1RLZU4mX
WhI3ldjVEu+phK8l2qYS11oSN5UMR0klXmpJ3FTiWku8p5JRSKnEsZbETSWu
tcR7KnlO3VRiV0u8p5IEakkgU4m3WiJ/KnGsJXFTiWst8ZpKvNSS1KQSx1oS
N5W41hKvqSShWpKaVMLXkjSnEi+1JG4qyU4ilVhqSZpTiZdaEjeV9NM+lXip
JSlOJbliUwlMgqnEsZZ4TyV2tcR7KrkPJZV4qSVxU4ldLfGeShKpJSlJJY61
JG4qsasleqUSL7UkbipxrSVeU4mnWiJZKnGtJd5TSQ52KuFrifdUYldLvKeS
BGpJalKJYy1JTyrxUkuCnUpca4nXVOKllqQ4lfC1JG4q8VJL4qYSL7UkxamE
ryVpTiVeakncVNIsmVTC15I0pxIvtSRuKmmjfSpph59K5qCkEi+1JG4qsasl
3lMJX0vSnkoca0ncVOJaS+KmEr6WpD2VxK8lcVOJXS3xnkq81BJJU4ldLUk4
lXirJXFTSaSWPBke5VKJ6B0crFTC15I0pxIhOzhJpRK+lnhPJa61xGsqSdUO
jmappGwyqYSvJWlOJaJ3cJJPJTa1JIFUwteS9KQSt1qS7lQyDCWVpGwHx3sq
ca4l0qcSu1qiVyppJCKVCNnBwUsljrUkbipxqyUJpJJXkVKJYy3xnkrsaon3
VCJyByepVOJYS+KmErtaknAqcaslKqUSvpZ4TyWutSTIqcS1lnhNJW61JE2p
hK8l6UolIndwkkolfC1JcyqhtcQ9mKSZK0l7KhG7g5N8KhGzg5PeVCJ4B8dX
KumKnEqwuRK8VCKWK/GeSiy1JN2pRChX4iOVCNnB8ZVKPkk4ldjVkoRTiWCu
BC2ViOBKkkklIndwkkolY5JOJTJyJQmkEvm4Es1SiegdHKxUIg1Xku5UIpQr
STyVyMOVpDmVSMiVqJhKckSkEiE7OGlOJYJ3cHylkk+SSCUuwSSpVGK4kiBw
JdrKrpfjp5IgcCUqyq6GK5GHK1FRdq1hZFfDlWBzJdrKrkHhSpJPJUJ2cPBk
V8OV6Cq7BoIrMbJr8GRX21TiFEw0TyXycCV4sqvhSoRwJXqlEpm4EoVTiRCu
BC+VGK7EyK44qUTCHRwju+rGlRjZVdtU0gVfdkXnSpJPJYYr8ZdKPlJXdpWJ
K3FLJdZgEkiuRMVUEhTZNQhciZFdk0olQeBKtJVds7RPJUJ2cPylkqfVlV0N
VyKEK9FWdhW0g4MluwrYwfGXSqZhy66GKzGyq8Jcicay61LsVCIRV+ISTBLY
wUkmlUjDlRjZ1dcOTvKpRBBXoq3sis6VJJ9KhHAleLKrLFyJirKrPFyJxrLr
M9ipBJkrwUslhisJAleirez6IH4qCQJXoqLsargSI7sK2sEJTiohM2LjyjTL
rkJ2cPBkV1m4EiVlV2m4EhVlV7E7OHiyKzJXgpZKcpFlVyE7OP5SSRC4EjTZ
VSKuJPFUsjIQsquIHRy0VCLjDk7CXAme7CoLV4Imu4rZwUFKJWsUll0FcSUK
pxIhXImvVGK4Ei25Ei6VwOjMlaiYSkTv4GClkiBwJdrKrkK4EiO7KpRKxMqu
QnZw8GRXw5UY2dVwJUZ2NVyJplxJUqlELFeSsOwqD1eiouzaT/tUImQHx18q
yUVJJWwtCQcTKbgSbWXXoHAleqUSw5VIILvmYKeSIHAlRnZVMZXIw5X4SyVB
4EqSSiVB4Eq0lV3baJ9K2uGnkjnYsqvhSozsqjRXoq3suiK5VOIUTFSUXc/F
TyVB4Eq0lV1l4kpwUokQrkRF2bW8iFRiuBJ/qWSYurKrTFyJkV3Vk12F7ODg
ya6ycCUqyq7ycCVGdsVLJchciYqpxHAl8nAlgZRdbVOJbTARyJWgya5idnCS
TyVidnDQZFcROzi+UklX5FSCzZXgpRKxXEnCsms57WVXITs4vlKJGK4ER3Yt
rCVoqUQEV+JDdhWyg6Oi7Cp4B8fIruqkEtE7OFipRBquxMiuSFyJkV1VTCU5
IlKJkB0cPNlVxA6Or1TySRpSCRdMDFcSSK5EW9n1cvxUgsyVaCu7Gq5EHq5E
Rdm1hpFd8bkShWVXIVyJtrJrULiS5FOJkB0cPNnVcCVYsut85FQSCK7EyK7a
yq5xawkEk2CnEnm4EjzZ1XAlQrgSZVJJ4LgShVOJEK4EL5UYrsTIrjiyq4Q7
OEZ21Y0rMbKrtqmkC77sis6VJJ9KDFfiL5V8pK7sKhNXIjKVPBUe5bgSFVNJ
UGTXIHAlRnZNKpUEgSvRVnbN0j6VCNnB8ZdKnlZXdjVciRCuREXZtZmIVCJo
BwdLdhWwg+MvlUzDll2RuRIju2oruwrZwdFYdl2KnUoU5kq4VBKez5JKJdJw
JUZ29bWDo1cqkUl2RedKkk8lQrgSPNlVFq5ERdlVHq5EY9n1GexUgsyV4KUS
w5UEgSvRVnZ9ED+VBIErUVF2NVyJkV0F7eDolUq4WhINJsmnEiE7OHiyqyxc
iZKyqzRciYqyq+FKhOzgoKWSXGTZVcgOjr9UEgSuBE12lYgrSTyVrDSyK3Yq
kXEHJ2GuBE92lYUrQZNdxezgIKWSNQrLroK4EoVTiRCuxFcqMVyJylwJViqJ
BpPgcCUqphLROzhYqSQIXImKsqs8XImRXRVKJWJlVyE7OHiyq+FKkLkSbWXX
oHAl2squhisJAleSVCoRy5UkLLvKw5WoKLv20z6VCNnB8ZdKcqWVXW1TiUsw
8c+VaCu7BoUr0SuVGK5EAtk1BzuVBIErMbKriqlEHq7EXyoJAleSVCoJAlei
rezaRvtU0g4/laBzJcmnEsOVaCu7ysSVaCu7rkhPKnlqU2jklF3PxU8lQeBK
tJVdZeJKcFKJEK5ERdm1vIhUYrgSf6lkmLqyqxCuRMVUYmRXIbKrkB0cPNlV
Fq5ERdlVHq5ERdlVLFeCJ7sicyUqphLDlcjDlWgru46Il0rIjGSCibyyq5gd
nORTiZgdHDTZVcQOjq9U0hU5lWBzJXipRCxXkrDsWk572VXIDo6vVCKGK8GR
XQtrCVoqEcGV+JBdhezgqCi7Gq5E21QiegcHK5VIw5UY2RWJKzGyq4qpJEdE
KhGyg4Mnu4rYwfGVSqTgSrhUMjIaTAxXohBXoq3sejl+KkHmSrSVXQ1XIg9X
oqLsWsPIrvhcCVIqkYYr0VZ2DQpXomAqMVyJ2rLrfORUEgiuxMiuKsquMnAl
XCqBUS6VCNnB8ZdKOmDLroYrEcKVKJNKAseVKJxKhHAleKnEcCVGdsWRXSXc
wTGyq25ciZFdtU0lQrgSbWVXw5X4SyUfqSu7ysSVpDWVWGvJyE2r0LkSI7vi
pZIgcCVGdk0qlQSBK9FWds3SPpUI2cHxl0oMV6JwKhHClagouzYTkUoE7eBg
ya4CdnD8pZJp2LIrMleCl0rEciVGdsXhSjSWXZdip5IgcCVJpZJQLWGCiRxc
iZFdfe3g6JVKZJJd0bmS5FOJEK4ET3aVhStRUXaVhytRUXYVy5XgpRJkrgQv
lRiuJAhcibay64P4qSQIXImKsqvhSozsKmgHR69UkhBXwqWSaDARv4ODJ7vK
wpUoKbtKw5WoKLsGhSvxIbuK2MFBSyW5yLKrkB0cf6kkCFwJmuwqEVeSeCpZ
aWRX7FQi4w5OwlwJnuyqPVfiI5W0R08laxSWXQXt4CicSoRwJb5SieFKVOZK
VEkl1mAiG1eiYioRvYODlUqCwJWoKLvKw5UY2VWhVCKT7DocW3Y1XAkyV6Kt
7BoUrkRb2dVwJUHgSpJKJUHgSrSVXftpn0qE7OD4SyW56squtlyJ7XjcwVFR
djVciZyp5MdT+WfDjz/+OjNz/yrDlciWSsRyJXipJAhciZFdVUwl8nAlRnZN
KpUEgSvRVnZto30qaYefStC5kuRTieFKtJVdZeJKtJVdV2CnEsda8vSmVWnn
SrBSSRC4EqdUMn3/yj/+OgMJYs3RPMm5krPM45P87cK5kpqrh+479Su8/i9/
FvTcNj0AqUQIV6Ki7FpeRCoxXIm/VDJMXdlVCFeiYioxsqsQ2VXIDg6e7CoL
V6Ki7CoPV6Ki7CqWK8GTXZG5EhVTieFK5OFKtJVdR4hOJU+7BZOUcyWN1j29
9MiWPaeO/Ouv0/CzLXmD/Hb+obUVVz7qoZYkn0rE7OCgya42N5ZALaGPqp89
HufGEl+ppKtP2ZULJl5SycTdS+nXWHDmZM9t013uKll0eCP7R6w99p1YrgQv
lUjDlegquwrZwfGVSsRwJTiya2EtQUslIrgSH7KrkB0cFWVXw5Vom0pE7+Bg
pZIgcCXayq5CuBIju6qYSnJEpBIhOzh4squIHRxfqURJrsRaS+yCScq5kkbr
nt5z6shZ18eyI1s04UqEyK7cd2/orrdkll0twST+XSWf5O9gP2pE3jsuCzgr
Yi/ed+pXObkSvFRiuBLDlSgsu9Ywsiv+Dg5SKpGGK9FWdg0KV6JgKjFcidqy
63zkVBIIrsTIrirKrvJwJUmnEkswSYfs2mnLy/SWEvfHcz+8n65U0sFnKrlr
/bPHz5yET/uPv84M3jUvzVwJ962r+tkTknAlHoLJDi8LOO7BhLNKuGCy9th3
sqWSwHElCqcSIVwJXioxXImRXQ1XYmRXTbkSI7tqm0qEcCUqyq7ZIlKJ4Ur8
pZKP1JVdhXAlKqYS77KrbSp5etNqMsJ3cFxkV++15Gz0JhMlZNfBu+axn/nH
+VvTLLvOYAyT3Pxt8nAltofguAcTW9nVKZjYyq41Vw9jDZM2G8erxZUklUqC
wJVoK7tmaZ9KhOzg+EslhitROJUI4UpUlF2biUglgnZwsGRXATs4/lLJNGzZ
FZkrwUslYrkSI7vicCUay65LsVNJELgS4bKrbSqJBpNUciUM5VphZd/jZ37n
qsjmgt1P7JwLt5FUXPnolH2f0G2dZUe2qCK7JhRMEtnB8X4IjnSyq8t5wS7B
xEl2tQaTFB+Cg86VJJ9KhHAleLKrLFyJirKrPFyJirKrWK4EL5UgcyV4qcRw
JUHgSrSVXR/ETyXIXIm2sqvhSozsKmgHR69UIpYrcU8lNJikTnZlZ+mRLVwt
mbLvE1vW9bkf3v/XX6cf2jJZHq7EHSrxGEyEcCVxU4lUXIntecG2wcT9yGCH
YGKfSoTIrkHhSnzIriJ2cNBSSS6y7CpkB8dfKgkCV4Imu0rElSSeSlYa2RU7
lci4g5MwV4Inu2rPlfhIJe3RU8kahWVXQTs4CqcSIVwJnuxquBJkrkTFVGJX
S/hUMio8Kd3BYYe7vWT+obWJHhmcubLfO4fW7mUO1iEP8tvPj+56aMsrtqlk
b/R+lcN/HodUMmjnvJ0nDtIjV8gF0/Z96pRK7lz/LHnxn/88Tv848vZXBXtA
KSFD3j7r+lhweD3UkrvXj6HOyRdH8y5Z+lC3ra/vOvFT9NPIp6nkxd0fkQvI
M/T6s+Fdmx9P5S88vJ45AacwleTmb6NXfl2wl00l5KOin3kBRJJhu94mfy79
DpALZuz/zD2VzNy/Ku/EoQLGaSEf9d7hDdVXDXaKJORd7x3eSP908iFbfvux
5YYXrMHEPZU4BJMFLqmkzcbxBWdOwZXkjafyFtJOMmnPMvqFk7dLL+9Ze/Ww
Ffnf/PJnAb1+62/72m6c4NJJyHvXHfuebv2cDS3+/EY+amTeuzJzJUZ2VSiV
yCS7DseWXQ1XgsyVaCu7BoUr0VZ2NVxJELiSpFJJELgSbWXXftqnEiE7OP5S
ie5cCZdK4gYTUamEzBM757A/8B4/czLRQ3DeObTW3T/ZeeJgpZU53M0k7AWV
V/bf63A6D3neelfJ8vytLn/cXeufvWhpJ6cXpI+P87fCXSVDdv2D+ePyp0fV
EfoYuusfly7tsjdaGJwe5KO6b32Du6Xkx9iPYu8qYZ+/adXAHx1enzxvm0oe
2Tb152hMsP1kyAXWWkKeLGBqD/uYtX8V+1s+mNgdFuwxmND7SZ7KW8BevCL/
GxpMyNvs87MPfM79VaBf18t7ltvWkk+ZV7A+tv62T8JUIpYrwUslQeBKjOyq
YiqRhysxsmtSqSQIXIm2smsb7VNJO/xUgs6VJJ9KDFeirewqE1einuwqdgcH
L5X42sEZ5SGYJLKDEyeVkDl/Sbtlsfs4q4/uTOi84M3xbuSAR/Q2Evtg8i+7
H43pY/mRrSxX8sLuD93/rMG75l28tLPnYPIQG0yOnzlp/Tl96K63rAcE2z7I
x7Ln4BRzCyZduQ90ednc/O3cAs4j26a6f8hZu2ZSfdVgp1pifRQGE4dUArLr
Ctdgwi3g2AYTWLdhg4n7l0bee8vq4Vwt2frbvrhfUaiZpIsrUVF2LS8ilRiu
xF8qGaau7CqEK1ExlRjZVYjsKmQHB092lYUrUVF2lYcrUVF2DQpXknwqEbKD
o2IqMVyJPFyJtrLrCOxUYhtMhHAlbCqB2XniIPtDpd2RwY6y67gfPvD0s3f4
sfzIVqdg4v4gPyCzXMnxeD/yD9n1j4uXdo67krPw8HrASdhgYvtotn6sx2AS
ftkNLFdiF0wiSonHFzwb/g5wOInLvSXsg/zpLFfySf52739oJJg4p5KS8YKJ
lSt5Km8he/GK/G9K2wWTuI/3D29muZKX9yz3+IFP572rGFeiq+wqZAfHVyoR
w5XgyK6FtQQtlYjgSnzIrkJ2cFSUXQ1Xom0qEb2Dg5VKgsCVqCi7ysOVGNlV
xVSSg59KlmDLriJ2cHylEi24krjBJBWpBGZP7J0YcDJO3BtLQHPl2sXOEwep
WELe4FLMv/46w8qu1h9mPz+66851o4su6Tht36fcPQaDojIJGfb5BYfX0eeH
7PrHF0d3kQ/suvU1qrlyMYTeVcKONZiQF5m+f+WlS7s0Wz8W3iDz85/Hyde7
5mje0F1vNV8/FqySqp89ziolZ8ONgpVdLcGkq0swIS9+z4ZxxZd1nbH/M+47
MHzXfNYtYd/1858FT+6aTzduuJYCN5mA7Mq95pbffrx51ZArlvXI3jbtR8b9
gEcomLimEqgitsHE6RychIJJwZlTsH3TduOEb38/zL5r36lfWdmVuijw+DT/
m1tWP0meJ7++//Nm9l3kddKbSgxXYrgShWXXGkZ2xd/BQUol0nAl2squQeFK
FEwlhitRW3adj5xKAsGVGNlVRdlVHq4kbalk1KbPyQhPJdZaYg0mA3fO9ZJK
yAzc+Sb7gTtPHHSRXeExaOeb9BAc7qdjznddfiRGKZm2/1PbYPJVwR7yjMtJ
wXbBhD/+xhpMum19w9s5OJHVG7ZRRIKJRXaFB3sIDveHMr5ryCrJjb0bZOb+
VTSY5J04RJ8vOHOS813Jb9kw8kn+dqglT+56h33BH0/9yh2Cw2kktsHEel4w
F0yeylvgcg6O92Dyy58F7N4NeZv9ogrOnKK1pM+2mewHvn94Mye7fvprzCsr
zpUonEqEcCV4qcRwJUZ2VZgrUTGVBEV2DQJXYmRXbVOJEK5ERdk1W0QqMVyJ
v1TykbqyqxCuRMVUkjrZ1TaVkHlm0+epTiXOwcRxB4c9LJjDT+DeEg4qeT52
Zye8lRNJIuzzVtl1UOxxwMvzt9Jgwp6Mczasjiw4vP6u9WO8BZNt1mAyNPaa
L47mJXpkMFtFQsFkWZxgUtwSTKyy6/Bd89kLcvO302DCpoMvj35rlV3ZP3TL
bz9CGOF6yEu7l1oPwWEv4IJJSbtaEi+Y8EcGOweTXlwwGZm3kFNK9sXeA0OD
yfuHY+4hCd1bEiu7Pp33LnvBfRsn+kslQeBKtJVds7RPJUJ2cPylEsOV6M6V
qCi7NhORSgTt4GDJrgJ2cPylkmnYsisyV4KXSmThSrSVXYXs4Ggsuy7FTiVB
4ErQZVfbVPKMh2DC15LEU4lDMHkzbiqB4bjXIpZaQqbpumfYayJ8q0swicqu
g52DCfcu+th14ifQS+hc4iGYXGoJJuQal1QyfvdHXxfs/fFUvhNMGhtMunLB
hD0jmPso7hAcl2Bi++c6PeidJFwwsT0vmL2ABhOnVOIaTPhUAmHEIZj0Km05
48Z7MHE/HMf6oIyJ/1QihCvBk11l4UpUlF3l4UpUlF3FciV4qQSZK8FLJYYr
CQJXoq3s+iB+KkHmSvBSieFKgsCVaCu7DtI1lYjlSsSmEvdgkjRXYjubC3az
P04uO7IlbiqBvRtu3cY2mHBWSZxgwsiuLsHkotBBOYudesVXBXsglViPDD4b
G0wujc7QXW9x19imku5b34jrzZ4tDCaR1RvvwYRjXW2DCdxAEvdziH1lD8Ek
ehsJewG53j2VOASThbapxDmYhGqJ9VBgLpiUWd5bYDCRTnYVsYODlkpykWVX
ITs4/lJJELgSNNlVIq4k8VSy0siu2KlExh2chLkSPNlVe67ERyppj55K1igs
uwrawVE4lQjhSvBkV8OVIHMlKqYSIVyJtZbYBhOxqQSskncOrWV/nDx+5mTc
VOItmISskqbrRrPXuAUTppa4BBN690jWZwMWHF5vWzBY2dU2mFxaOKEwYg0m
1gWc7lvfiHuMLzzCwaSr8GDySf52unHj5dOgj5d2L3ULJrFECXvBikgwcUwl
sHfjEkxKW8YaTGgScQomNIwICSa//PlbGrgSI7sqlEpkkl2HY8uuhitB5kq0
lV2DwpVoK7sariQIXElSqSQIXIm2sms/7VOJkB0cf6nEcCW+Uok1mAjhSizn
BYdk1yaxWzPkMe6HD+xqSQduOJe1y5ZXuFpC5vkfPmSvYWVX9vm9p46wN5DY
BhMn1rXr1te4E4T/+OuME+gavnukMJXYBpNcPpiElJJdJ35iX3/G/s+ar3/O
Fiphg0lxt2ASs1mTdDCB568onB62YzVdR+S9YzVd2QvCwcQtlbgHE2stsQaT
T12DCU0ibsHEg+mqoOyag51KgsCVGNlVxVQiD1eiouwqdgcnqVQSBK5EW9m1
jfappB1+KkHnSpJPJYYr0VZ2lYkrUU92FbuDg5dK0rqD4xRMUpRK6HCMyb/+
Oh0WXG1qycCdbx4/c3LqvhVFlnQgv7IftfPEQTaVQBU5HAu0wqnBSQSTj52D
CQy5gL3eNZjwoKtrMImwruztJeQClnUlw5+Sw8iudsEkIruyzycUTNg/ruDM
yZtXDXZJJfQcnFmxhxHn/X6IqyVbfvuRvcA2mFjPC+aw1qfyFtqmErBKEgkm
78YJJlHZdfKej9nnP/h5s3Mt0Ut2LS8ilRiuxF8qGaau7CqEK1ExlRjZVYjs
KmQHB092lYUrUVF2lYcrUVF2DQpXknwqEbKDo2IqMVyJPFyJtrLrCNVSCQ0m
qdjBsYKu3AHB8Pj86E7yPHSSSitzxv3wAd3BCR9206HyyhzuQ3aeONhly6vQ
Q57/4UNuZ4eTXbl3eQwmWZ8NOBuGSqbt/xROxrlkaee714/5OvYmExpMum19
nX3+5z+PN1s/9tKlXbptfYOeHewQTB5mJ/ZFCobtehtSyfjdH3FJJHrejVMw
KZRduY/igsmTzsHky6Pfsu/65c+Cl3YvvXnVEMgj5I0nd73zSf4O8nzBmZMU
Kmm14YWzsQ9yTY3VQ69c/siIvHe4HHHWLpjYnhfsOZiErJKRQoMJxJBbPx/B
feaf/vpN3+2zaCohb8898MW23/b98dcZ8gYyV6Kr7CpkB8dXKhHDleDIroW1
BC2ViOBKjOxquBIju6Lt4GClkiBwJSrKrvJwJUZ2VTGV5OCnkiXYsquIHRxf
qUR3rsRLKhm96QsyKUglNrUE5vOjO896fkAwIcPtwrg/Bu2cx56Dw77LezDh
7hixfRw/c5KVXZ0ug7tNLrMPJjG1pNhS/nRgl0fcYGJ72A0bTKCKuASTlhue
9wiqnGVx1+WP5P1+yONHnY0NJtYbSyhUssIbIdJ728yrhAYT9gaSdce+9/hF
ffrrP/2lkiBwJf5kV8OVKCy71jCyK/4ODlIqkYYr0VZ2DQpXomAqMVyJ2rLr
fORUEgiuxMiuKsqu8nAlMsiutqkkGkxStYNjewjOZs/1A1Zy4CYTbunG6RHS
S6KpBJII+14umFjDSELB5MXdi1nZleVHYl8zsnrjEkyKRWfG/s+8fJln4wWT
Eq7BhCYRl2ACVgm3X+PyYGXXntumu5eWX5hlHwgmLqkkoWACbcQpmFjt1oSC
ya2fj/jlz988fRrRYCINV6Kw7CqEK8FLJYYrMbKrwlyJiqkkKLJrELgSI7tq
m0qEcCUqyq7ZIlKJ4Ur8pZKP1JVdhXAlKqYSeWRX21RSGExSmUqssus7h9b+
K96tC/T2ErBKKq/sz63ecA/yE/q0/Z9yh+A4BRNqkjgFE1jJcfmzpu9fyR2C
083hgJtc12BCUwmFSr7+ba/Tn5ubv52+HRtMunkPJmwtsQ0mnOw6a/+quPeZ
WKGSiXuW2X4UeXL2gdUj8hbQZ1bk73BPJSC7+g8mtofdxASTsFXiEkygmVi3
iqyPvttnBZIr0VZ2zdI+lQjZwfGXSgxXojtXoqLs2kxEKhG0g4MluwrYwfGX
SqZhy67IXAleKpGFK9FWdhWyg6Ox7LoUO5UEgStRTnZ1qiWhYJLGVEJl10or
c6buW7HzxEH21pHjZ06SZ945tLbyyhyr7Epm0M55XxXssX7ItP2fVv7sMS6V
wLCZZcHhdWwtgTBCjwwmP8u/sHsxcCWXhFvKF0fz9p7KZ3/wJ79deHj93SGf
hD8Eh0yz9WO/LthLX5C8QX5b9bPHIZg0X/8c+2eFfJLYVEKHvGvXiZ/onxt6
nd/2kieLL+tKX4E8w8qubEvJO3GIDSZsS3nv8EYumFRfNbiA+azCpwPzsuvN
q4bM2r+KvGwBc7wyufjHU79+eey7iXuWWc/BIdN644trj31XcOYUXE/eIL9t
vXF8yeXZ7C0osw+sdk8lMG03jveyHwQrOW03TqB/Lvkotoq8vGc5fR1yzS2r
n6SpBLiSD37eTF9t36lfbWXXvttnrTv2/b5T/83+0b/8+dt3vx/+4Oev7t84
MQ1cCZ7sKgtXoqLsKg9XoqLsGhSuJPlUImQHBy+VGK4kCFyJtrLrg/ipBJkr
wUslhisJAleirew6SNdUIpYrwU0lTsFECFfilErYKeI4fCpxG8tdJU7jfgIO
TSXhechpuBtLrHOZzTxs5UocaklXboq7TbfisYKr03CRxDpxzwumh+DEjF0n
IVOycOzPC3aSXW1TiZPsWjrKkrgMt25jP9FUEnfiHhmcbtlVxA4OWirJRZZd
hezg+EslQeBK0GRXibiSxGXXlUZ2xU4l2Ds4vlJJtJbgya7acyU+Ukl79FSy
RmHZVdAOjsKpRAhXgie7Gq4EmStRMZWgcCVxg4mKqcRLLYmbSi7GTyV8LYmb
SrzUkripxEstSXEq4WtJmlOJl1oSN5UI4UpUlF3FciUKpRKZZNfh2LKr4UqQ
uRJtZdegcCXayq6GKwkCV5JUKgkCV6Kt7NpP+1QiZAfHXyoxXElaUwmZZzev
SfEOjvdUkkgtSUkqcawlcVOJXS3RK5V4qSVxU4lrLQlyKhHLleClkiBwJUZ2
VTGVyMOVqCi7it3BSSqVBIEr0VZ2baN9KmmHn0rQuZLkU4nhSrSVXWXiStST
XcXu4OClEuQdHI+pBCbVXAlWKhGyg5NUKuFrifdU4lpLvKaSVO3gSJ9KPNWS
1KaSIMiu5UWkEsOV+Eslw9SVXYVwJSqmEiO7CpFdhezg4MmusnAlKsqu8nAl
KsquQeFKkk8lQnZwVEwlhiuRhyvRVnYdoWAq8VJLaCqB8VxLkk8lYnZw0ptK
BO/g+Eol2FyJj1QihCtJcyqRkSvRVXYVsoPjK5WI4UpwZNfCWoKWSkRwJUrK
rmNwZVfDlWibSkTv4GClkiBwJSrKrvJwJUZ2VTGV5OCnkiXYsquIHRxfqUR3
riQVqSRuMAkkV6Ki7Cp6BwdLdkXmSvBSSRC4En+yq+FKFJZdaxjZFX8HBymV
SMOVqCi7Gq5E7VQSCK5ExVQilitBSyWB4EqM7Kqi7CoPV6Ki7OpUS5yCSYpT
SQds2dVwJUK4EmVSSeC4EoVlVyFcCV4qMVyJkV0V5koSSiU//et43JPczcM8
zCOhx29n/lBRdhXClagou2aLSCWGK/GXSj5SV3YVwpWomErUlV1dxsiumnMl
KsquhisRsoOjreyapX0qEbKD4y+VGK5Edq6E/HBnZFfnG0uSl10F7eBgya4C
dnD8ya7TsGVXXzs45B8rZWVXWbgSbWVXITs4GsuuS7FTCTJXoq3smvQOjlMw
0VZ2vUTXVGJk17IiUokQrgRPdpWFK1FRdpWHK1FRdg0KV5J8KhGyg5M62dUp
mBiuBDuViNzB0VZ2fRBJdo0NJnrKroYrCQJXoq3sOkjBVCIhV6JWKmGDiWxc
iZKyqwiuBC2VCOZKEpZdg8KV+JBdRezgoKWSXGTZVcgOjr9UEgSuBE12lYgr
SVx2XRlM2dUaTORNJdhcia9UEq0leLKr9lyJj1TSPkHZNRpMxKUSw5WonEqE
cCV4sqvhSpC5EhVTiTxcifdUQmbM5i9lSyWid3CwUgk6V6Kp7CoPV6Ki7CqW
K1Eolcgkuw7Hll3RuRJtZdfnpJJd2WCSHtlV7A6OkV3TnkpStIPjNZWI3cFJ
kewaDiZScyVJpZIgcCXayq79tE8lQnZw/KUSw5XIxZVwqQTGcCVGdpV5B0fF
VCKWK8FLJUHgSozsqlQqkY4rUVF2TXoHxzaYaMuVJJVK+FqS5lQiegdH01TS
LpWH4LDBRGKuJPlUYrgSbWVXmbgS9WTXoHAlyacSITs4KUol0WCiEVeirexq
uBJtZdfyIlKJ4Ur8pZJh6squQrgSFVOJJrKrezDxn0qE7ODgya6ycCUqyq5C
uBJFZVeXQ3AgmGjDlSSfSoTs4KiYSgxXIg9XoqLsKnoHRzvZ1TaVOAWTQKYS
wTs4vlIJNlfiI5UI4UrwZFdpuBJdZVchOzjayq6FtQQtlYjgSpSUXcfgyq6p
5kpsZddoMJGMK9EslYjewcFKJUHgSpJKJTxXQv6xSmcqkYcrMbKriqkkBz+V
LMGWXUXs4PhKJbpzJWlOJU61hAsmKnIlKsquQeFKtJVdg8CV+JNdDVeisOxa
w8iuPmRXQTs4SKnEQy2hOzjhYJIqrkRF2dVwJWqnkrRzJbZHBjsEEyO7et3B
QUslgeBKjOyqouwqD1eiouzq/8YSLpj4SyUdsGVXw5UI4UqM7IrFlSgsuwrh
SvBSieFKkLkSbWVXITs4KUolUEVsg4mRXYPElRjZNZ2ppJN9MMGRXYVwJSrK
rtkiUonhSvylko/UlV2FcCUqphJ9ZFf3YGJk1yBxJSrKroYrEbKDo63smqV9
KhGyg+MvlRiuRGGuxFZ25YJJIGXXZiJSiaAdHCzZVcAOjr9Ugs6VJJ9K3LkS
W9k1NpjgphJZuBJtZVchOzgay65LsVMJMleCl0qCz5VwMzY8geZK9EolRnYt
KyKVCOFK8GRXWbgSFWVXIVyJiqlEiOwaFK4k+VQiZAcnzanE5RwcGkwMVyI5
VzJjz1ryF2v/yWOKyq6id3CwZFe+lthCJdFgEiTZNQhcib9UEgSuRFvZdZCC
qURCrkTFVOKllowtnLXp4UqUlF1FcCVoqSQYXInSsquIHRy0VJKLLLsK2cHx
l0qCwJWgya6B4Ep0kF1dzsEhP9mhpZJkd3BW5X9HPu2f//gNM5VEa4nHVPJ5
/vfwOSd9VwkEk1/++B/DlfhPJe1TlkqYYGK4EolSiVjZVQhXgie7Gq4EmStR
MZXIw5WkLpXAKCG7XoyfStC5EqxUYrgShWVXsVyJQqlEJtl1OLbsis6VYKUS
WbgSmWVXlyODLcHEPpW88cPqs5bH0dO/bzi6t9P6GWnmSjYd/dE9mEgou24+
us89mMRdwIkNJgmkkie3Lf7hRP7v//4T/qqRN/5ZcHjE9sXB5kpe+Xb1lmMH
V/ycl2quxFZ2Jd/nNO/gJJVKgsCVaCu79tM+lQjZwfGXSgxXojBXYk0l0WCi
J1eiUCoJFFeiYioRy5XgpZIgcCVGdlUqlUjHlagou6aBK7GVXWODieNdJRuO
7rUGE3ic/us/T2xdkE6uxCWYSCu7ugcTL1zJzMJg4l5LYu4k+erofqe/cB8f
3hmkVMJxJQdPHYcvM82pBO4qcQwmssquhivRVnaViStRT3YNCleSfCoRsoOT
ftnVqZawwURFrkRb2dVwJdrKruVFpBLDlfhLJbpzJSqmEiO7NvKcSmKDSZwd
HBpM6A5O5/UzVh35Fp787sQvSaeSE+E7H5Yc2sG1kUHb3oUXJ29wXIlTMJGN
K2GTiFMw8S67ugQTpx2cfxYchu8h+aj3DmyB+0km5n1Kn08RV+IxlTy9fSl8
GuQNQamkcAdny7GD5JVP/vt0clzJpz9/Cx/ucQeH40psgolKXEnyqUTIDo6K
qcRwJfJwJSrKrqJ3cIzsmkwqocFExVQieAfHVyrB5kp8pBIhXAme7CoNV6Kr
7CpkB0dF2VUwV4KWSkRwJUrKrmNwZVchOzhCZFeXQ3DCwSQ+V8IGE7aKbC84
CM8nLbvCh288+iMXTKbu/hzeNXX3F1wYsQYT2VKJVXa1BpO4qaR1rFViG0xc
uJJZe9bBN/CHE/lWrmRi3srT//sfXK5kzp4N8BmSN1LHlSQnu2499hN8bomm
EptgkngqkYcrUVF2FcuVqJhKcvBTyRJs2VXEDo6SqUQWrkRy2dVpntu8Vjau
REXZNShcCZLsuhw9lQSBK/EnuxquRGHZtYaRXX3IroJ2cJBkV6E7ONwCDhtM
XI4MpsGECyPUNnlu17LkuBKfwURCrsR26YYNJomkkkKuhAsmcWVXcuXZsFgi
rexqG0yS4Er8HBnstIPDBpOEUgkfTJRNJWK5ErRUEgiuxMiuKsqu8nAlKsqu
6eFKuFTynFswwZVdDVcihCsxsisWV6Kt7DoQO5UYrgSZK9FWdhWygyNJKmGD
iUsqgQWcuMGk8/oZXCf56ND2w3/8RsUM8jZ5xppKuMfpv/5DUwn32HfyKBdM
uFTSdcPsHQU/Ud306OmT5MpuG2aztWR1+LSa708cuWf1K0sPfUOugYv3nzz6
4q5c21Tyef73x6KXkRcnHzt02/vWVDJ02wffM7Yq+fS+yP/eGkzYKrI5CowM
3/aBSyrhgomXQ3BGbF8Mr7wm/wePsmvvTW9/fWz/sdOnIn8h/vc/B04dn71n
PVdLDoRtkNzDu/qErj8AXy+5ePeJX/tums8VkpHbl5DnyXuZa95hUwn3OHjq
OKSStfl7yG/J9Y9uXrDzt5/hveSNdmtmkmdW/JxHroSXJY/jp09tOXaw3+aF
bCpZ+2vo79gjf5ygbeSVb0N/X53892ny9pt7Nx08VUA//MOD262phHus+3Wv
l1RSGEyM7JqSHZzkU4nhSvylko/UlV2FcCUqphIju45JJJU4BJMgya5B4EpU
lF0NVyJkB0db2TVL+1QiZAdHW9nVcCVJpRKeKzkb2rKJf2TwRodgAis5J/79
J5tKHlo/k4YI7kGe77JhFgSTfSeP/hwtKuQVyNtkyJODtr1H3qCvQN6Ad206
+qMlmBTeRvL8rtzTf4V/MP/rP3A9/fBoMwndTLIpHC7gNa2f3vTda9hU0mPj
XJpK4DXpH/Fi3ifsXSULD3wN7+Ie3xQcYoPJL3/8Dw0jyw//E64hb7inEodg
4nZe8Jr8H+DFw6fhxL+rBDZ0bP+S7T7xKxtM4MaVA6eO0zREH+QV2Gbyct5n
8Jq///v0kT/+h/wKb4NeQp45Ho0z5A3yWzJbjh2Eu0pAICHP02vOhutHuzUz
ya/MR51gX4S9q2Rr+BXYYPLm3k1w5a7ffrF+mVuP/QTB5MODO8hHnQx/tvAK
MOR5tpa4H4JzNhxMgs2VaCu7CtnB0Vh2XYqdSpC5ErxUYriSOKkkPOuU4kr0
SiVGdi0rIpUI4UrwZFdZuBIVZVchXImKqUSI7BoUriT5VCJkBwdPdk2AK7GV
Xc/aB5PCVHKnczB544fVUAne3r+JXcDZd/IoVIVV+d8+tGEmeWbgtoX0FbYX
/MSu3sCTsJLD7t1M3f0FvItbyWluF0y6bpgNP79/d+IIvaVkyLb3oLrA/SRs
MIHH/pNHh25b1GL1K9N3r4EvhLwmu4Cz/+Qx8uSx0yfpLSU9Ns4lrxb+wf9P
Wkt6bHwTPpxcOT5vBRSShQe+Jq/2/Yl82MGBm0loMOFqiXsqgZlVGEzcUgnM
V8f2w+t7qSW9N70N3z3y63sHtsIOzqS8zw5ED5pZdGArF0zg8fWxA1BIvgzf
EALP0GAC59SQX+m6zfsHtkEw4VZy5u7ZwC3gQDCBB9xnQuaVb1e3XzPz5L9P
7znx6zM7ltGbSd7cuxGu/ODgdrqA4xJMoK7M27up45rZo3csh+Ry5n//03/z
e3QBh95n4nEHh+NKyAdKn0qCwJX4SyVB4Eq0lV0HKZhKjOwqG1fCpRKY5LgS
JWVXEVwJWioJBleitOwqYgcHLZXkIsuuQnZw/KWSIHAlaLJrILgSFWXXhhip
pKl9MOFTCRdMDv+rAObo6d/hmdCiDVNLntu1vPD5WK5kYzh0nI0efMMFEw4q
sQYTypVYg8nq/O/g532OK5m2ew28SLcNcyCYbI4Gk+9PHGEXcJYd+gaep4s2
L+Z9As9wCzg9Ns6FPLLgwNfs3SPkyR4b33Q6BIcNJonWErilxD2YxLKuU2jW
8MKVrMnfDRc/tf0jbgGHQiiUK6GvnHt4F7t9s/vEr/DpUa7kSPjK9w9sczoy
eG5hMNnIWSU0mJCX9cKVwG0nW48dpHnEGkzmRYPJ8dOn+m9+l+7gjN7xMTxP
LujkGEzipZJYrsRjMAkWV6Kw7CqEK8GTXQ1XgsyVaCu7CtnBkSeVRIMJLleC
lUrQuRKsVGK4EoVlV5m4Em1l1+HYsiv6Dg5WKpGFKwmS7OpyCE5sMLGvJWww
sT5O//Uf8l7aRuDK0JIOk0q4k4LZQ4ThmU2uwYSTXa3BBPZryPNW2RVeZBrs
2kSDydHTJzmuZOi29+HK6Xu+hDBC1RErVwJ/HLkAqgis7dDtG9tDcGgwmZC3
AnrL8sP/9JhKYAEHTr2xBhMulQBXYhtMnGRXuPiHE79acdfcw7vgdUZuXwKy
K1y8s+Awx5XQKynuCneYHD99CtwS6yE4McFkjU0wOfnv0/02L/Aiu7oHE9Bc
aTAJ15I57MACztZjP9kFE6+phN3BiRtMDFdiZFfnWqJpKhGyg+MvlRiuRGGu
JKlUwteSceFgEgiuRKFUEiiuRMVUIpYrwUslQeBKjOyqVCoRyZWomEok3MER
wpXYQiXRYOKYSrhgwlolz+1a/t2JCAdBmwlAr/tOHuVqCQy0AnomTrPVL8cN
JtMiwaSQK+GCyT2rJ8OVv0chFHYiGSQ2mIRWbyyH4HDBBD6WiijswFdBgwl8
4LLD/3Q5MhiCCfkM4WN/OJEfdweHs0qswcQ2lcCQ12eDifshOHDll/m7rSfg
TMr7DN47e88GCCMQTNjVGxi6X0OryMt5q1julfyWOwRn7p7IKs3cvfbB5Mgf
J2xTSb/NC1f8nLfzt58pMHIm/AfZBpOOlmDC1ZJOa+ZEe4t9MEkolcQNJons
4CSfSgxXoq3sKoQrUTGVCJFdg8KVJJ9KhOzg4MmuiXEl1lpCRiquRFvZ1XAl
2squ5UWkEsOV+EslunMlRnZVMZU0EpFKXM7BCQcTt1TiEkygkEAzOf3Xf9hg
Yj0mGObn6HtpGPEWTCbbBhN6P8nZeA96Ak5hMLGcF2wbTFwe9BAc+O2MPV+6
HBlM7zCBlEG+XRPyPvVyY4ltMHFJJTDUMOm16W3384JpMJm9Z73tkcHw3jmJ
BxNoJkcY84S8PTlvFeVK5u71Ekz4WvLKt6udfNpEgwnNIy7BJNFU4hJMVJRd
hezgqJhKDFciD1eiouxquBIVU0mcYIImu4rYwfGVSrC5Eh+pRAhXgie7SsOV
6Cq7CtnBUVF2FcyVoKUSEVyJkrLrGFzZVcgODors6nIIzlnLwTeegsnqwpkS
PQWYvEF++3P0DhPbYAL3V2yKF0yar355WuLBZNPRfXQT5x5244YZNpjE7trY
B5PwSk5oDaeV88AH0sNu3INJ9sZ5sMJDfs3e+A8vqYQLJu6pBOa9A1vhs8o9
vNOllkAVgSstd5iEFnDoHSYuwYQTXK1WydPbl245doDebTJq+zKoIrbBBBZw
nIJJv80L4WYS8q43926ieYRbyeloE0zmsMEklnLlgkloAcctmHg4L9gaTCTh
SlSUXcVyJSqmkhz8VLIEW3YVsYOjZCqRhSsJmOxqm0rcgom4HRwVZdegcCVI
suty9FQSBK7En+xquBKFZdcaRnb1IbsK2sFBkl2RuBJrLbnTQzCBQhITTFbb
B5Opuz+/e/Wk7QWhnzRP/PtPay2hhgl78A0XTChXkkgweQVOw9lR8JNLKuGC
Sct4wWRHwSHIGi6pBAaOmPmm4JBLMPkqGkzafP7GhLxPIRwdOHnMSypxDib2
J+DADg4ECnK9SyqBORY+JoY5Png6DCeTWIMJW0WcggndwXl00wKgQkJnB9sF
E1Z2dQoma38N/X145n//k7P5XVpL2GBC7ydhgknkfhIaTDq5BZMIV+IYTOKl
EmswkSSViOVK0FJJILgSI7uqKLvKw5WoKLvKyZXYjuFK1OFKjOyKxZVoK7sO
xE4lhitB5kq0lV2F7OComEroDo5LMGG3bwqDyWo+mNB3ddkw6+7Vk+bv38T2
EzrNVr8MLeX0X/9hbyahXisnuzaP3jfCBhMoJLHBJFRIdoRf+fd//+mSSmAB
x1swCd1SsuDA1/DMsG0fuNSS1p+/TrdsHtk4j40kyw//c38oiYSsEjaYkHn3
wBZ48S/yf4ibSmAHxxJM4pwX/HV0K+frYwestWRS3mfHTp8iv5K3/1lwGO79
6LNpPk0lMNBSDp46bg0mXBixBhOWK4GBLkGDCRn4kDf3buRkV2swgfOCIYMc
P32KrSVk4Ghg/8GEhpF/7N3MBxMPN5ZwwcTIrh5qSfKpxHAl/lKJ7lyJiqnE
yK5jRKQSl1oybvN6pVIJMleirexquBIhOzjayq5Z2qcSITs4KsquhiuRXHZ1
OQTHNpjEQCXOwWTgtoX0+e9O/ELbCNzvcfqv/yw5tKPLhlnNVr88aNt7UEvI
Y3X+d9Zg8vu//+y6YVbz0EHAX3DBZP/Jo+Ttbhtmv7Ar1xJMIts3Q7Ytgns2
yMXdN8yhkYS8vezQNzsKDlGuxGMwYY+/Ib+Oz1vBRpKFB77ef/IYDSPDt30A
H0uunJC3gjzzyMZ5sINzIBJM3uCCCZlvwnewkMesPWtdagm9n4QJJnFSCUzv
TW9D7gh9GqeOz96zHlLJyO0ffR1dkCFvwzPwW3L9ogNbIYy8nPcZPWqHvM0F
ky2uwaTdFzNGbV968t+nPzmcF6kla2ZOjtojn/ycxwWTg6eOw7rNK9+utgaT
DoUz+4OD2+FDyBuQSnI2v3vwVAE8yQSTCEJCg0knt2Ay1yWYrP/1x85fzh3z
TS4ZL6mEBhPluBJtZVchOzgqyq5iuRK8VILMleClEsOVCE4lMKhciTKpREKu
RMVUUlZEKhHCleDJrrJwJSrKrkK4EhVTiRDZNShcSfKpRMgODp7smkKuxFZ2
tQYTvpbE3kZi+/j5j9/g9hKYcbuWQ76wPr47cYTDXZce2sFdQ4MJuZj7U6LB
ZN/Z2GDSYvUryw59Q/9QOMsGus3Z2DziJZjQMDI+bwWs24Rjwkn22B3y4G4m
sX6xrOxqDSZtP38D4gO57Mlti11SiZdgYiu79t709i+Muco9cg/vojs4dPXG
9jKWKzkSL5jQBRyKlhz548TxaLohb7BcyZ4Tv7J/Fr2lZEvhocCRVMLdTAIv
BaEDrjwbCSaR+0loMKFhxC6YRI4MtgYTMrBARB/bjv3kJZVADDnrGkxSk0qC
wJX4SyVB4Eq0lV0HKZhKjOyqOlfC1ZLnw6Ow7CqCK0FLJcHgSpSWXUXs4KCl
klxk2VXIDo6/VILNlSgtuwaCK1FRdm2oQiqxBhPrjSVWqIQLAvtOHl1yaIeV
K+myYdamoz/SZAFXsnQJy5WQK6FLkMt2FPxEg0m3DbO/P3EEMgi5YOmhHZBH
Vud/fzYaTNilm6HbFpHraeKAE4E/z/++x8a5tIp8Hv3Y2FoS2sGBj+JuJumx
8c3NR/cdi34hZ8PJ4puCQ8O3fcApJTP2rN1/8hhcQz4Hcg1run6R/8PZaDCh
Ozg9N74Fn+0PJ/Lda8m9X0x1CibuRwaTyT2868Cp4/RkmWOnT/2z4DDcW8Jy
JSO3L9l94lf63SNvkN+SJ1nZlczBU8ddggn5U+gOzqgdy8gr0Oxw/PSptb/u
YWVXMv02L9xz4lf43MiVK37OY62ScDCZzU3O5ne3HjtIX/bgqYJ5ezdBDNl6
7CcaTNZFX4Hmkde+/YIJJnMpV9I5GkxCN5MwweS17774KXrvyvHT/3r9uzUe
a4lLMFGKK9FWdl2ELbsargSZK9FWdhWyg6NiKqG1BIKJ0B0crFSCzpVgpRLD
lSgsu8rElWgruw7Hll3Rd3CwUoksXIm2sqv7kcEQTFxSCTe2Z99ww91DYh0r
V2Kde/h5hZu4XIn1HBy7eS3uITjUKok7bQongfOC46WSCFdiDSZxU8l9NscE
T7PKrnHHevCNk+xKuRLumGDuEByWK7EOu4NjOx1tZg43VqiEu6vE8bzgBLkS
W9nVGky05Uq0lV37aZ9KhOzgaCu7Gq4kpbKrbSp5/qvQyMqVKJRKZJFdhezg
qJhKxHIleKkkCFyJkV2VSiUiuRIVU4mEOzgoXIlTMPGYSrzUktSkEr6WpDmV
eKklcVNJGx+pxBpMVEwl7fRIJbbBxH8qMVyJtrKrEK5ExVQiRHYNCleSfCoR
soODJ7umlivhUkncYKKn7Gq4EiO7CtrBwUolQeBK/KUS3bkSI7uqmEoaiUgl
fnZwuAWcmGCSylTipZbETSVutSSBVPIqUiqJL7u6HBlMg4mPVDINO5U41pK4
qcSulnhPJR5qiaBUwgUT2WRXITs4KqYSw5XIw5WoKLsarkSHVOISTKTjSnyl
EmyuxEcqEcKV4Mmu0nAlusquQnZwVJRdg8KVaCu7jsGVXYXs4Cghu7qcgxMJ
JpqlEtE7OKlNJa7BJLFU4qWWxE0lD+KnEr6WpDmVxD0ymPyVSg9XoqLsKhNX
gpNKcvBTyRJs2VXEDo6SqUQWrkRb2XWccyqxDSbSpRIRsmtQuBIk2XU5eioJ
AlfiT3Y1XAlSKhG8g2NkV6wdHCTZVRquJKFUUhhMDFciC1din0pgB2d2OJgc
OHVMjlQSKK5EYCqBu0qiwUR+2XU+cioJBFdiZFcVZVchXImvVLJRYdk1GFyJ
dV74aoPhSlTkSrSVXQXt4Ggruw7ETiWGK0HmSrSVXYXs4KiYSrzv4HBciW0w
wUslQeBK/MiuHs4LVoArUSiViNrB4RZwwsFEI9k1W0QqMVyJv1SiO1diZFcV
U8kYEanE5w4OTSUwqKkEmSvBSyWGKwkCV6Kt7JqlfSoRsoOjouxquJKAya4u
h+BYg4nQHRy9UonYHRx/qQSdK0k+lQjhStKcSjiuxDaYGNlVIa5ERdlVLFeC
l0qQuRK8VGK4EpxUwtYSMkJ3cJRJJRJyJSqmkrIiUokQrgRPdpWFK1FRdhXC
laiYSgxXIiSVCNnBwZNdJeJKbGVXNpgYrkSSVGJXSxJOJUHhSuSVXV2ODOaC
SVKpJAhcib9UEgSuRFvZdZCCqcTIrgHjShJNJXGDiYpcCVoqCQZXorTsKmIH
By2V5CLLrkJ2cPylEmyuBC2VGK5EYdm1YTBSiR3uCsEkPTs4vlJJtJbgya7p
40rcawkaV+IjlbRHl11TxpXYyq5sMJGGK9FWdl2ELbsargSZK9FWdhWyg6Ni
KkloB8djMMFOJehcCVYqCQJXoq3sKhNXoq3sOhxbdkXfwcFKJbJwJdrKrj53
cKzBxMiuhisxXImoVMIGk0ByJdrKrv20TyVCdnBUlF0NVxI82dVljOwqrewq
ZAdHY9k1BzuVBIErMbKrUqlEJFeiYiqRcAdHCa7EFnd1DyZGdvWwg6NpKhHC
laiYSrp4OC+Y/GNluBIju6aOK1ExlQiRXYPClSSfSoTs4ODJrnJxJXGDSSBl
V8OVGNlV0A4OVioJAlfiL5XozpUY2VXFVNJIRCoRsoOTaCqBcQomKnIlKsqu
QrgSvFRiuBJ72TU2mKQwlQjZwVExlRiuRB6uREXZ1XAlJpW4B5N0cyW6phIh
XAme7CoNV6Kr7CpkB0dF2TUoXIm2susYXNlVyA5OIGVXl0NwrMFExVQiegcH
K5WgcyVYqUQoV5J4KvG/g8NxJdFgooXsKhNXgpNKcvBTyRJs2VXEDo6SqUQW
rkRb2XWcuFRC5sWvNqoouwaFK0GSXZejp5IgcCX+ZFfDlSClEsE7OEZ2xdrB
QZJdRezg+EslE8TKri6H4BScOXXWPMzDPIQ+/ufMH7hcCVoqCQRXYmRXFWVX
IVyJr1SyUWHZVU+uxFpLmGBiuBJMrkRF2VUmrkRb2XUgdioxXAkyV6Kt7Cpk
B8fIruk5BCeoXIkMsuuu336Gn8RH7VhqZFdJZFePRwarKLtmi0glhivxl0p0
50qM7KpiKhkjIpUI2cFJIpVEg0lwuBK8VGK4kiBwJdrKrlnapxIhOzgqyq6G
K9FcdvWZSprpmkrE7uD4kV3ZYKKc7CqEK8GTXeNwJUZ2VYIrUVF2FcuV4KUS
ZK4EL5UYrkR2roRLJS7BRLlUIiFXomIqKSsilQjhSvBkV1m4EhVlVyFciYqp
RCauROFUImQHB092VZgrCYbsKoQrUU523fXbL16CiQpcSXBk1wRTSRC4En+p
JAhcibay6yAFU4mRXQPGlaQ6ldgGE9m4ErRUEgyuRGnZVcQODloqyUWWXYXs
4PhLJdhcCVoqMVyJwrJrQ+1TiZAdHF+pJFpL8GRXsTs4qZVd8+IFk0RSyQz/
qaQ9uuy6Bl92TTqVCNrB0VZ2XYQtuxquBJkr0VZ2FbKDo2IqEbuD45RKuGCS
4lSCzpVgpZIgcCXayq4ycSXayq7DsWVX9B0crFQiC1eiouxquBI/qUTsDg5e
KknJDg53CI5LMEkmlRiuxHAl2suu/bRPJUJ2cFSUXQ1XYmRX92BiZNf0yK5C
dnA0ll1zsFNJELgSI7sqlUpE7uComEok3MHRlivRVnZtI2sqcQ8msnElKqaS
LiJSieFKtJVdhXAlKqYSIbJrULiS5FOJkB0cPNlVba6Em/FfbSJjuBI9uRJt
Zdfy+KkkCFyJv1SiO1diZFcVU0kjEalEyA4OnuwqC1eiouzqnyuxPQTHGkxS
k0oMV4KcSoTs4KiYSgxXYmRXw5WgcyXaphJaS6LBxPcOjq6pRAhXgie7SsOV
GNlVnVQiRHYNCleCJbs+g51KxuDKrkJ2cIzsqmIqEb2Dg5VKkuFKbIkSNpio
ILsK5UoSTyXycCUqyq4ycSU4qSQHP5UswZZdRezgKJlKZOFKtJVdx+Glkmgw
wZddg8KVIMmuy9FTSRC4En+yq+FKkFKJ4B0cI7ti7eAgya4idnD8pZIJyacS
w5VIxJUgpBIumDyzYxkGV5J8KhGyg6NiKhHLlaClkkBwJUZ2VVF2FcKV+Eol
GxWWXQ1X4n0HJ24wMVyJnrKrTFyJtrLrQOxUgsyVaCy7jtJcdhWyg2NkV7xU
EgSuRFrZ1WcwMbKrkV091BKsVBIErsRfKtGdKzGyq4qpZIyIVCJkBycNqcQa
TGTjSvBSieFKgsCVaCu7ZimYSiTkSlSUXQ1XYmRXQTs4eqUSsTs4/lKJI1di
e2SwezBJs+wqhCvBk11l4Uq0lV2F7OCoKLsGhSvRVnY1XEkQuBKXVMIGE9lS
iYRciYqppKyIVCKEK8GTXQ1XgsyVqJhKZOJKFE4lQnZw8GRXw5UY2RVHdvVS
S2gScQkm2FyJtrJrELgSf6kkCFyJirKr6B0cI7vqlUqE7OD4SyXr0GVXp5nw
1aY0cyVoqSQYXInSsquIHRy0VJKbfCqRhyvxl0qwuRK0VGK4EoVl14bapxIh
Ozi+Ukm0luDJrgHhSmwPwbENJvyNJT5SiRCuRFvZVdAOjray6yJs2dVwJchc
ibayq5AdHLVlVxE7OKJSyQSbYGJkVy24Em1lV5m4Em1lV3SuJPlUImgHByuV
yMKVqCi7Gq7EyK7oXImtT8IFE8OVGK7EyK7OtUTTVCJkB0dF2dVwJUZ29ZNK
mFqymYyRXXF3cDSWXXOwU0kQuBIVZVexOzgqyq5CdnBUTCUS7uBoy5VoK7u2
UTCVONUSNpiM3rEsnVyJiqmki4hUYrgSbWVXIVyJiqlEJq5E4VQiZAcHT3bV
iythbyyBWhINJoYrUZ4r0VZ2LY+fSoLAlfhLJbpzJUZ2VTGVNBKRSoTs4ODJ
roYrQeZK/KQSmJ9OFUAwGfT1IsOVKCS7CtnBUTGVGK5EcdnVcCVB4Eq0TSUJ
7eDQVBINJna1RNdUIoQrwZNdpeFKjOyqTioRIrsGhSvBkl2fwU4lY3BlVyE7
OEZ2VTGViN7BwUol6eBKbOe///wdgkm/TQswUkkQuBJtZVeZuBKcVJKDn0qW
YMuuInZwlEwlsnAlKsqugrkS6VMJF0xk40r0lV2Xo6eSIHAl/mRXw5UgpRJp
uBJtZVdBOzhIsquIHRx/qWRC8qnEcCUScSUKpBJYwIkJJqiyq5AdHI1l1/nI
qSQQXImRXVWUXYXs4PhKJRsVll0NVyJkB8c9ldBgYriSQMquMnEl2squA7FT
CTJXgpdKZOFKtJVdhezgGNkVL5UEgStRUXb1UktY2fW//zwZCSabbYKJkV11
k12z8VNJELgSf6lEd67EyK4qppIxIlKJkB0cPNnVsZa8FJ507uDgpRLDlQSB
K9FWds1SMJVIyJWoKLsarsTIroJ2cPRKJWJ3cORMJTAuwcR/KhHCleDJrrJw
JdrKrkJ2cFSUXYPClWDJriuwU4nhSoLAlQhMJZFgoitXomIqKSsilQjhSvBk
V8OVIHMlKqYSmbgShVOJkB0cPNnVcCVGdsWRXcXu4HCyq20wMbKr4UqEppIg
cCUqyq6id3CM7KpXKhGyg+MvlaxTTnZ1qiWWYJIwV4KWSoLBlSgtu4rYwUFL
JbnJpxJ5uBJ/qQSbK0FLJUHgSnzJrisVll0bap9KhOzg+Eol0VqCJ7tqypUU
1hLmNhIumKSHK1FRdpWJK9FWdl2ELbsicyVqy64iuBJtZVchOzhqy64idnCw
Ukl4vsKVXS/HTyVB4Eq0lV1l4kq0lV3RuZLkU4mgHRws2VUWrkRF2dVwJUZ2
Rd/BSSaVWM7BocEkZ/MCw5VoxZVoK7v2UzCVSMiVqCi7Gq7EyK6CdnASSyUw
RnYVu4Ojseyag51KgsCVqCi7it3BUVF2FbKDo2IqkXAHR1uuRFvZtY2CqSQ5
rsT2BJzYYKJXKukiIpUYrkRb2VUIV6JiKpGJK1E4lQjZwcGTXQ1XkkAqeenr
0BiuRE6uRFvZtTx+KgkCV6JiKpGHKzGyq4qppJGIVCJkBwdPdjVcCTJXks5U
YgkmCw1XgphKhOzgqJhKDFeiuOxquJIgcCXaphIhOzhxUwmZiUwwCWQqEcKV
4Mmu0nAlRnZVJ5UIkV2DwpVgya7PYKeSMbiyq5AdHCO7qphKRO/gYKUSdK4k
fiqBBRyXYJJUKgkCV6Kt7CoTV4KTSnLwUwk6V5J8KhmidiqRhStRUXYVzJWo
k0rsaolNKpkYDSbp2cHRV3Zdjp5KgsCV+JNdDVeClEqk4UpUlF1vEyG7CtrB
QZJdRezg+EslE5JPJYHgSozsiia7OtcSVnZ1Cib+U4mQHRyNZdf5yKkkEFyJ
irKr2B0cFWVXITs4vlLJRoVlV8OVCNnBSVp2ZWvJxNjRkytRUXaViSvRVnYd
iJ1KkHdw8FKJLFyJtrKrkB0cI7vipZIgcCUqyq5id3Csh+BYg0kguRJtZdds
/FQSBK7EXyrRnSsxsquKqWSMiFQiZAcHT3b1u4PjIZjIn0oMVxIErkRb2TVL
wVRiZFfDlcjDlWgruzbTNZWI3cFRMZW0czgvmA0m6eFK8GRXWbgSI7sqlEqE
yK5B4UqwZNcV2KnEcCVB4EoQU4ldMFGYK1ExlZQVkUqEcCV4sqvhSpC5Em1l
V0FcicKpRMgODp7sargSI7viyK5YXIntkcE0mPSPBBMju2rBlfhLJUHgSlSU
XeXhSozsqmIqEbKD4y+VrFNXdk2IK7Gbr7lagpZKgsGVKC27itjBQUslucmn
Enm4En+pBJsrQUslQeBKfMmuKxWWXRtqn0qE7OD4SiX4XEnyqSQgXElSqcQS
TN7VSnaViSvRVnZdhC27InMleKlEFq5EW9lVyA6OkV3xUsnmhFIJTMp2cLBS
SRC4Em1lV5m4Em1lV3SuJPlUImgHB0t2lYUrUVF2NVyJn1QidgcHT3ZF3sFJ
nezqNB3WzPrr//0vBJMua980XInSXIm2sms/BVOJhFyJirKr4UqM7CpoB0eY
7GqbSqLBRHKuJPlUImQHR2PZNQc7lQSBK1FRdjVciZAdHBVTiYQ7ONpyJdrK
rm0UTCWpll1tUwnM2egjAKmki4hUYrgSw5UY2RWPK1E4lQjZwcGTXQ1XIpIr
4VIJmUlff224EiO7pmsHByuVBIErUTGVyMOVGNlVxVTSSNdUYrgSebgSPNnV
sZZwsqttMDFcif9UImQHR8VUYrgSxWXXIHAlRnbVNpUI2cHxl0r4WjIpOmql
EiFcCZ7sKg1XYmRXdVKJENk1KFwJluz6DHYqGYMruwrZwTGyq4qpRB6uRGfZ
1eW8YC6YBJIr0VZ2lYkrwUklOfipBJ0rST6VDFEwlUjIlagouxquRGwqcQ8m
RnaNW0vwUkkQuBJ/sqvhSpBSiTRciYqy620iZFdBOzhIsquIHRx/qWRC8qkk
EFwJXioRy5UoKLuK2cHhlRIaTNKzg6Ox7DofOZUEgitRUXYVu4OjouwqZAfH
VyrZqLDsargSITs4vmTXxLkSay2xDSYqciUqyq4ycSXayq4DsVMJ8g4OXiqR
hSvRVnYVsoNjZFe8VBIErkRF2RWRK7E9AcchmMjOlWgru2bjp5IgcCUqphJ5
uBIju6qYSsaISCVCdnDwZNf0cSW2I0cqMVxJELgSbWXXLAVTiZFdDVciD1ei
rezaTNdUInYHR8VU0s53KnEIJglzJXiyqyxciZFdFUolQmTXoHAlWLLrCuxU
YriSIHAlCqWS8GyRlitRMZWUxU8l/bBlV8OVIHMl2squgrgShVOJkB0cPNnV
cCVGdlWYK0mp7Go7UEiYYKKt7BoErsRfKgkCV6Ki7CoPV6Ki7DpC+1QiZAfH
XypZp67smlKuhEslMIYrCazsKmIHBy2V5CafSuThSozsmlQqCQJX4kt2Xamw
7NpQ+1QiZAfHVyrB50qSTyUB4Up8pBIXrsT2EBzbYKKi7CoTV6Kt7LoIW3ZF
3sHBSyWycCXayq5CdnCM7IqXSjYnnUpca0kklbwcHs+1BCuVBIEr0VZ2lYkr
0VZ2RedKkk8lgnZwsGRXWbgSFWVXw5X4SSVid3DwZFfkHRw82dWxllhlV2sw
MVyJJFyJtrJrPwVTiZFdDVciD1eirew6XgLZ1TaVxA0mssmuQnZwNJZdc7BT
SRC4EhVlV8OVCNnBUTGVSLiDoy1Xoq3s2kbBVCKb7OpyXjAbTGRLJV1EpBLD
lRiuxA9Xoq3sKmgHR+FUImQHB092NVwJJlfCpRKXYGK4EiO7eqglWKkkCFyJ
iqlEHq7EyK4qppJGuqYSw5XIw5Xgya4CuBLbQ3BoMNGDK0k+lQjZwVExlRiu
RHHZNQhciZFdtU0lQnZw/KWSZLgSay2xBpM0pxIhXAme7CoNV2JkV3VSiTxc
iYqpRJDs+gx2KhmDK7sK2cExsquKqUQerkRF2fVB/FTCn4PjGkwk5Uq0lV1l
4kpwUkkOfipB50qSTyVDFEwlEnIlKsquhivBTSVcMNFXdl2OnkqCwJX4k10N
V4Iku0rDlagou94mQnYVtIODJLuK2MHxl0omJJ9KAsGV4KUSsVyJgrKrmB2c
5FMJ7OA4BBOvOzgay67zkVNJILgSFWVXw5UI2cHxlUo2Kiy7Gq5EyA6OL9k1
9VyJSzARyJVoK7vKxJVoK7sOxE4lyDs4eKlEFq5EW9lVyA6OkV3xUkkQuBIV
ZVeFuBLbc3AswcTIrlhcCVYqCQJXomIqkYcrMbKriqlkjK6pRAmuxDqTv96a
GtnVcCVB4Eq0lV2zFEwlRnY1XIk8XIm2smszXVOJ2B0cFVNJOxGpxJ0rsT0E
JzaY4MqusnAlRnZVKJUIkV2DwpVgya4rsFOJ4UqCwJWomEq81JLJX2+FMbKr
t1qClUr6YcuuhitB5kq0lV0FcSUKpxIhOzh4sqvhSozsqjBXIpXs6nRe8GOb
34NacvTPkwGSXYPAlfhLJUHgSlSUXeXhSlSUXUdon0qE7OD4SyXr1JVdpeJK
uFQSDSY6cSVKy64idnDQUklu8qlEHq5ERdm1sJagpZIgcCW+ZNeVCsuuDbVP
JUJ2cHylEnyuJPlUEhCuxEcqEcKVOJ2AwwYT2WRXmbgSbWXXRdiyK/IODl4q
kYUr0VZ2FbKDY2RXvFSyOelUIoQrsdYS22BiuBIju6rAlWgru6JzJcmnEkE7
OFiyqyxciYqyq+FK/KQSsTs4eLIr8g4OnuwqhiuxHoLz2OZFcYKJ4UrE7eBo
K7v2UzCVGNnVcCXycCXayq7jFZRdbVOJNZgkxZUkn0qE7OBoLLvmYKcSZK5E
W9nVcCVCdnBUTCUS7uBoy5VoK7u2UTCVqC67Op0XPMAlmKR2Byf5VGK4EsOV
+OFKtJVdBe3gKJxKhOzg4MmuhitRQ3Z1GcOVaC67lsdPJUHgSlRMJfJwJUZ2
VTGVNNI1lRiuRB6uBE92TTdXYntksH0wUYkrST6VCNnBUTGVGK5Ecdk1CFyJ
kV21TSVCdnD8pZJ0cCVOwURgKhHCleDJrtJwJUZ2VSeVyMOVqJhKBMmuz2Cn
kjG4squQHRwju6qYSuThSlSUXR/ETyVeuRLbI4P5YILElXCdpP7Tfa9teMs5
RS/MCD+Klr6C/JY8GSTZ9b45L54b/QKbvTiUTSUd3n01w+FBPiRgsmsOfipB
50qSTyVDFEwlEnIlKsquhitRK5W8Ep4Ayq7L0VNJELgSf7Kr4UqQZFemllSc
2KVEi5vPLXUp/KfafxU576Ia15Xt3+ymRQPTwJWkQXat+f6QK1rUJF/a34qc
b1tLqs8bcF3/FpfUuB6+A+Sy4vVvuGFSDw+1JHnZVdAOTjpSSfWXe5duccv5
pYpFvj9Fzy9Wo0LmgLZ1PxyFl0omJJ9KorWk7ttPVhlwf/GamfB1/b3o+SUb
VLtlcj9rIan39oiK2S3oleRBrrx1cg4iV4KXShxrSb1XnijXqu6FpUpEv58X
XFGzcrXHO9zz0QSlZdc2SybVGZldsmaVc4peAF/aZRWvIc+4p5K2SyeTy+D6
Kp2aC5RdvezgcHs3McFEAtm11eyxRUtf4ZQLSte6seOyqanmStIju5apVZV+
Xbf07sjeWNL6jdFO34GLSl8hOVeSNtm118dvNRrU5+ra1eg354rM66u2ufuB
KeOU5kpajB7i9Fe/UuO6tjeW9Fo0p1rb5peULgmXkTcqNa7Xbd4baeZKfKWS
jQrLroYrEbKDExjZ1TaVhGebkV1V4Eq0lV3RuZLkU4mQHZzkUknVRU9cVOM6
p39rn1vq0spTs1XhSpxuKckc2+lvRc6nX5S1llSd1oe9gH1UHP6AJlyJUyq5
44OnL6tRwenvkPNLFas9fYCisuttMwb+vaj9X/ebRjzE1pLbZwz6e/QnZeuV
qnMlQlLJPR+Nv6JmZae/Ty4sVaLRzCfV5UqKRBMQ97i+VX2Xu0pu6nUfvbJk
ray0cSW2pisXTHBl11azx8JdJeTXGr3a3bdgItxJ0nr2c5mtG8N3rHhmuY7L
psksu2Z7kF2bvTiUfC0lMsvBFxUKJsz2DQSTMrWr6syVuN9VcvczA88tWsTp
f1hqPXS/ulxJvT7dnL6uam2bW3dw6veNXH9e0SLX1r6ZzHnh70yDvt115kpU
TCVjdE0lgeRKuFQCY7gSfbgSFWVX0Ts4wZddqy564oIKkf+rokSLmytPfQQW
cG5489GrejT6ryLnZYTvNrE2E9lSicuNJcXqZ0X+G6PUZfCGNZhkTepO3ntd
/xY3TesLSaTi8AdoQrl53uPaciV3fPB00QpXwffhqha31J72GPSQOm8NvT67
2d/CtYH8yjYThWTX2pP7XVCqWJUB9982YyCEkZtGPETDSL23R9BgckvoyuJZ
Ax64fcYgCCPslY0Xj42tJcqkElFcyT0fjb+04tXw3SjXqm6jmU/CzSR3zn82
q2cb+EadU/SCxrOeVC6VwA4O+eQrd2re6LUh0EbIG/TWkbov9G9nt4DT4p3n
yUeRKVLqcggmaeBKHM8LXjN3wFeFwQSdKymeeS3Uklazn7NyJfWffhS+tzV7
tVdadn142cyLwnfRtH79mQSDiRapJK7sevczA+H7dknpK5s9M7D3x2/BLSWt
J4ykN5xUbXO3olxJ/XAwIb96kV3vGtIPvl7yBruD033eG70XzfG/g4OXSgxX
EgSuRMVUInYHh6aSSDDRKZWUxU8l/bBlV8OVIHMlqZZdr2x/G/wr+Nrhbaxc
SeWp2dBMLqpxnZpcyeirezQN/bdWjeurTusDb9sGE1uupOLwB+D66/q3TH8q
EbKD4192vaZDQ/gmZD3ZwXobSe3pA6CZFKtZITBcyU0jHop8yQPud+dK6JU1
x2XLxpWkWXat2PGuyP/h+1R3K1fSeNaTsMlyRc3KSnAlXmTXe94ZB19yeNfG
hisp27AWee9Nve4rWSsrGkxSLru6nBecUDBJqexa/+m+8K1r9tpTTkcGw30m
5xa9sNOyaQpxJZzsekvvjqF/gzSq02vdu1wwgTDiEEyU50qEyK7d3psGd1Bc
kXk9TSXsDk7VNnfDd/XBKc/7TyXp50qYYBJHdu21aA58K1qNHiY9V6JpKhGy
g+MvlaxTV3ZVmiux1hLbYKISV2JkV6xUkpt8KpGHK1FRdi2sJXaUa9abkf9q
Ld2jkZPsWm54W7gmc+LDSaUSBK6ElV3LD7+/0thOkEScgokTUVL7/WFw/TU9
mvrnSlSUXW/9R2TD+vrsZk5KSdaIDnBNjcl9VE8lMI0Xj4GvqGJ2C3fctfHi
sZF/OrJbpCqV4HMl8WXXO+c/G0lMPds44a61RnaHa+q9OlByroSvJc6yK9xk
UrJWFavp2vi10CJGkVKX37t0snswESu7upwX/PhX73sMJqnYwWGPv7m24S0Z
Yd/VRXZt+uIg+BuGvEELCdCpbeaM4zpJuUa3kufJr1wnaTtnXKXWTSi4elWt
GxuO6sflEfjY2wf24FLJHQN7QLHhUkmXZTOqdW59UVRfKZFZrnbvjl2WzbTW
kg4LXyEfTqbDu6+ywYRtI5ZgIjCVLMKWXZPcwaG4K/SQ84oWia0lMVzJJaWv
DP07unZ1mWRXx1rCsa62wcT2HBxYxrmyUgVvqeQTzWVXITs4RnbFSyWKcSW2
Y7gSnWVXmbgSbWVXX1wJN2X7N4P/hLvhzUedlJKbFkVuiC3Z/naaSq7p35w8
c1m9KlwqyZraM/Jz09SeXCq5pv89F1YoBe89r9SlV7SocdObOWwquWFqr4ww
tWpNJbAac23/e7hUkjm2E123IdeQt7MmdXc5MtgaTNxPwLEEEym4kvSkEjgH
J/OxSC6r89ZQp2BS98NRcM21HRrSNnJF/RByWGnAvVwtIc9khGFVrpPU/3D0
tR0aXRAVZS+qWKZCdvMGH45ma0nlASEO4sr6N3F5pM70JyKf5PQnuFRSZcD9
F1csA+8lL162ZZ26bz8Z9xAcGkwys1u4H4Jzx4zIz3Q1x/VMnewqIVfCHYJT
7fFINLtz/rNOsmuLJS9Fvqud7qaR5KqGNcgz1R/vyKUS8kxGeIXHWktufrwj
3f0pUqrEda3qNZs/lk0lTWeNhI+1phK4y6XG4524QlL3+ZyyDWvCa5JryNuN
Xh3iXkvglhJ4QVZzpQMtpf4L/TusmeUUTFLHldgeGewlmKQmlfBHBkPBqNq5
pfuRwZF/uHq3p8EEnrnn9ae5u0quqnUj9BC2ljQYFVlhuKj0FeRdVBGp3LoJ
G0zgY2v37sDdRkKegevZu0rum/MCfPLk1zK1qlLNlbx4l2UzufOCq7RumsHc
UhIvmEgqu/bDSCUwcE9F1TZ3u8iutR+6H76xfT5+G1JJ5zdfyQhnFmsegRds
Mrgvl0ravjQqs/Edkf8+KVqEvN1+yotcKoGP7TLvNS6SZDauG/qftcZ1uVTy
8LzXqrVtfl5UX7m29s0tRw/hDsHhgonzkcGfXFkpxIjdNSQnnbKr4UqM7Cpo
ByfxVPKVwqmEzKtbtllqSfKpRMgOjsayaw52KkHmSvBSiapciXUurRcSGi+s
UNL9EJyLwyQs+ZW2kat6NGafoTeTVJr4MPy3QaWJXWkqqb5oME0l5EPI/C28
5kN+vWFqL3pXSZWJEc3MelcJPF+2RxO2lsCRN6EfmiqUuqTG9dQnKT/8fqcj
g9lgEve8YDI3TuoB11cc/oAMqSQ9OzjskcHQPS6qeJX7ITjFaob+W65YzYo0
j5C3Q38tsptzN5aQZ+BbytaSW6c/DvIq+ZV8IHxs+M8tE24mkRtLKmTfQ54s
XrMiF0xqTY5wB7Un96OppNGHz9JUUrxmJhn6R1CuxGlumRz5OYvTXK2ya2Z2
i8iXs/g5fbgS63nBVzUIdY9LK17tfmQwkLDhrZyp7DM39GzL3VVCnoFvLJtK
Wi2ZSFPJlTWrXBk9sIb82nTWSBpGGr46GK6x3lgCz1fteS9bS65vVR+ev6zi
NSVrVqG4q+0JOKzsCveQkEe9F/pzteS2kaF0TAuJNZikOZV4CSaJ7OAkn0og
j8D3rWavdu6H4MBdHJVaN3YKJrSNWINJ2znPw8Vw6whMi9dHQe5g7zO5Khw9
3INJz+i9JfApVW7dlN5S0n7hK5BiqrRuytYSKCHk+oeXz4obTEL5pfZNMNc3
qlNvUHa35bN140q4I4M7vfkyfMdaTxhJa4lVKXlwSuQv9INTXoAbS9pNeQGe
sQYTeL5un67sXSU3tY38P0dXZpa/pnZ1egDNPaMHszeWwJPtp7zIBZNra1fP
CPWQ6rbH35BXu7b2zeSV4bdhyrWQK6HBxDmVRI4Mhg/vPPUlbVOJkB0cPNnV
cCXBlF1tUwlMULkSbWXX8vipJAhciXKpBAYOx2F9ElvZ9fIWN2eEj8uxDSa1
4gWTYvWqZISyTCl6S8nNiwZf0SL0E9Z5pS6jCzgxwSR2AQeeh2AC6zbl+od+
UP1bkfOjt5SE7iqBJ8mj+rwB7sEkbiqBBZySLWpFPqX3hwdbdrWmEugh0RJS
wfXI4PFXtQzd035+qWLWYNLENZg0XTWhwYej4caSMi3r0FtK7nhr2EXh3EGe
pGHEKZjUjvaNwmCyemLJBjeF/hatWIbeUtJo8bNlW9bJCN1qUtylljRb/XLZ
lhHYh1KutrXkhgER4oa8oRVXwtUSMkwJcTsEp1yrehnh43LoDk5sMCncvqHB
hN27KdMwkmXglhIyrZdMui78mkVKlXAKJmwbgefZYFLj8U4Z4eRSeEvJFzNr
PNE58hPTO+NcagnkmrINa7GppMOaWfcunQzvunvWM7bBJA1cie0hOE7BJKVc
ibWWtJ79HHx7m7820v28YJpBKFcS+esSDiY9HINJyCqBRRvuZhIytcIZpERm
ObqAEzeYUK7kjoGPZIQbCMeVUND1YbjJJJxHSmSG/vXabPwwypVE/m0SE0ze
e2Du+Ay7x7lFL2wy6rHgciVuqQTmgSkRI+iBKc+7nIPT/b3pkb+dnhkEVcRL
MKF3jzQZHFpMPq9oEfaWEniSPB5ZNMslmMAtJdFgcjN7bwlc3HTwo/R+ko5T
xsPdJi1HD+WCCUQVmGptm7caPZRNJWQ6T43cntd93ht1urQrWSlyaB15wept
7+keOlM4rVyJkV21TSVCdnD8pRJ0riR+Knl1y3YyaeBK8GRXw5UY2VVhriSh
VAI9BEDXq3o0cj8vGPIIeViDCWeVVJrYFa6EYFL706dh0YY8YhdwQs0EFm0y
x3Tkg4mFK4Hnr+7RhPok8LHlh9/HciV1Vo6+pMb1oa+ofd2kgwmVXatNi9y3
UKZ9Pa83liDJrkJ2cLhUAgOgqxUw4WRXmkFcg0mokLDBBNpI5fCSzgWlinFc
Cb1vpOGHo12CyV2rJsYEk+hhwZH/MI7WEtjBabx4DBzXUmNctm0qIXN7dMvm
uo5NrKmkVINqJWpmlgjdrxJ6nYsrluWWcdKcStLPlXCpBAa+Gzf0bON+XjBz
30jkfhImmMRwJTdagkmTWU/BM7SWQA9pvWQS1Ik7nu/HBRMrTgLPs8EEPjZ0
M0nsAk7JWqHMW7lTczaVhPnWKiVrZcGpN+RX8gybSmCqdAr9jUp+pfeT0GCS
Nq7EdmyDSTpTiUswsTVdmWAynwsmPRyDSUR2hStbvD6KCybkGXgXDSMegkmk
jZSJXNnRypXAla3fGA21pPGo/hkWyjXyL7jCYBJZvXlg7viu0ftJui2f3Xz8
sMvDsSX0LRo/XOZUkiNCdrWmEphGg/rANyHukcGR/7Xv83C8YLIsemVhMIGI
ATeTsDs4kEFu6fKgUzChCzjX1g79P0psMIElnejNJLxYcmVmeRpM7hoc+ZcX
97ikdMlu896gXAkNJvC4tHTJcrVvLhf+czPC2YRcoCJX4i+VrFZXdjVciZqp
xLGWcKkkGkykl12Xo6eSIHAl/mRXw5Ugya4eaglbRZyCCSe7WoNJGZtg8jQb
TCpP7AphpGz0SqvsCnEjdN+IYzCJLODA8zSYZE2K6JFWroSeiWN7CM418YIJ
lV1veX94kQqlM8L3wLC3l6RrByetqcSpltgGE9tDcNhgAnkkNpgUbt/QK2ke
gSsrZDdnawnEELiy1uRHbYMJ3b6xBpOKkSszrVwJeTIjqrlaa0njxWNhkeeC
UsW520vgrhJ6jjB9lKiZeevk/qK4ErxU4pUrsZ1z+GBifwKOl2ACecQaTOCZ
K2tWscqu5Enyrht73ptQMGn3xYxGr0Zum7dyJVV7hcCckrWqsHeVwKk37KNI
qcvrjOzJ1JLZLd8J/bB2TtEL7136SrxgIn4Hx51yHbJlMQST/D9+T4Psak0l
lCuJ/Asl3pHBsP8SNky8BhOuipTILEeeZIdKJi7BBG4psQYT+C35rEAvYQfe
BcHk4eWzYPHngbnjHYJJHK6k2/I5F4ct08szr0vnDg6K7OowS2gwiXtkMFzm
GkwiXEn0ykgwaT/lRXjGKrvW6xP6j5lra1e3BhNOdrUGE7iy45TxLFdCpuOU
CfAulivpNHUCexROq9HDoOGEqNvoYcE0mETvJ4mElN6L5sLdJpeWLomZSjYq
LLsarkTIDo62sitTS7Zzo4/sKhNXoq3sis6VJJ9KhOzgpC6VwFhXcmzPwbk8
vD7DLuDEBpNC2dUaTMA/+VuR88J6yfUwl4QH7hKJBJOVo6pM4oJJ4SE48DwN
JuQNeOaS6EvRAcmECya0h7gEE+7IYFjGIZ9htWmPqsuV+Ekl1pUcl/OCYSWn
WM2KTWyCSQzuWsESTOC3F5QqBnoJmeLRgXdZgwknu1qDCVSRvxc9H/QSdqB4
sMGErSKwjEOuuX3GIC6VcIfgNFn8XLURXS4oVTzySY7rKRVXkrZUAoUkdiXH
8bxgWJ8hl1Gu5Ipw66DB5H7HYBKpIucUvQD0EnYg19BgQjOISzCBQ3Cq9rwP
ngnfNxIzIJmEj7+xOS+YTL0X+kMGyQijr1BLaBup9cRDLFdiCSYp50ps57lv
VkAw+e5/8tMguzqdF8wGE/fzgiP/cz2wO13AgWcsweQdp2Di9GDPvuGCCV3A
qR0+ETjDEkxcHvfPHd9r3btwlHD1h9rEnhRMg0knL+fg3Nq7E1yvIlfiM5XA
MDiJ25HBPRZF/rluN+UFu2AScwgOPE+DSd0+kf9iuaZ2dTLXMgOSiTWYdIgE
k0KuhAsmHadEdqyuzCxPF21gqGTizpV0n/cGXFanSzsumFi5kgdfipxQ1mPe
lMBwJSqmkjG6phLDldjWEmswMVyJQlyJirKr6B0cHWVXp/OCuWDicmQwRI/L
6lWpZRNMYo4MruwQTFwe0bNv2GDCHxkMzzPBpKn7axavn2V7Do5tMOFSCa0l
GVHr1V8qUYYrcQ8m7ucFQx65sn5Vl2ACecQpmLg86kx/IjaYZHJHBjsFE5dH
1oD7recFU7qEtV6tqYTLJtBM/l70AklSSaq5EttDcKyaq+15wXBZmYY16P0k
NJhwxwQzwSRyXjAEE5fHzdGzb7wFk9AtJTSYOD3KNqxpTSXsDs7V0XtOgCtp
8lroXK3LKl7D4a5MMEmYKxGSShIKJsJ3cKyya+lw3yieWc6lljR9MXKnUNs5
43o4BpN3YJyCCV3J4dZt2KHBpCdTS1yCSejUG7qME17AYaf3unfL1K7q/vdV
RujWl+vcjwyOF0wkTSXJcSW2RwY7BJOl3JHBNI88NO8VSzDhzwuG563BxOmR
2bguXcCBZzpMGc+dFEyDCbVK3F/zvKJFnFIJ3cGBdRvyKxdMwuhrDFcy4JP3
6Lu4WoKXSgxXEgSuRMVUgsWVuAcTFVNJWfxU0g9bdjVcCTJXkn7Z1eX4m6t6
NIJ/1VZbNNA2lZCptihCOlzTv7lLMIE84hRMLq5xfW3usGCL7MoGk1tjB54P
B5PQ9o31dGDbsd5GwgUTayohc33/VnCNQy1JPpUI2cFJWyqBuT47cnxAvQ9H
OdWS+h9G/gJVGnAv5Uq4YNLUMZhE/juwQvY9HOVqnYpcMIniJE7BhPzqIrty
kxUVXGktsb2xxMqVVMpuGfm7cXL/YMuuTucFk6G7Ni2WvORUS1pGjxUOHyIc
E0xujBdM6N4N+fUBy0oOJ7vaBhO4pQSer9rzPljAgb0b8nCSXV1SCQwUktDf
Nr3u77BmNvnV+eekwsd9S19NNVdiewjOuHjBJDWphK8l3de+fdvAyP/at5kz
zppKYKCBXFT6CvZmEvioBqP60VTCHg1Mg0nnZZG/1ne9OMS9ltBgUrl1E5pK
rMEE8gis81Tv3MYplcBc36hO3L8HLueDCS+73vxQ6B+Bc4teKAlXklQq8cqV
OB0ZDN+r2g/db5tKYGp3Cf1PN3uIMBtMBnoLJtzBN9wMTiqYdJwygVolcQ/B
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
SpxDJe6gK/FYs+vPLEQlXrOrm+lK2Gh2pVZXwkaz63lPRSVM0pWwD5VQqyuh
D5W4ia6EgErMwMSrKxlbDw4bza7vuQcqobsHxylUYqYl9JldPV5X4gQqWUo7
KvHqSthsdqVEV0Kf2dWrK6FZV+KxZldKenDYiEqo7cGhD5Xw6TW7UtKD4zW7
0oZKxI6bXZmjK2Gj2TWcflRCha7ECVRiSUtIgcl49eDQhUqYoivxWLOru+hK
PNbs6tWVeHUlLNaVeKzZdZPHoxJKenCcQyVeXQmLdSUea3b9iwqzK0U9OHSZ
XSnowXEOldCuK3EclVCiK6EPlTBFV8JGsytzdCVOohJLYMJGXQkbUQkDe3A8
VlfisWbXzz0elVCiK2EjKvmeClTi1ZV4rNmVEl0JG1EJJWZXd9GVOI5KKOnB
oc/s6tWVuIOuhI1mV6p7cOgyu9KsK6EPlbiDrsQ5VMImXYltYOK8rsRrdmUj
KnmfClRCSQ8OfWZXpuhK2Gh2pURXQh8qoVZXMmazq7voShxHJZT04LARlXh1
JczRlbDR7OrVlXhRCe09OM6hEnfQlXis2fUqC1GJ2+lKWGx2pURXMp6oBAMm
LtGVsNLs6kOv2ZWSHhyv2ZWNqITqHhy6UAntuhIPNbsyR1fCRrMrtboSNqKS
zfSjkgS6za5U9OCwEpUwRVfisWbXIyxEJV6zq1dXwgCzaxndqMQddCVes6s9
qCQODa/Z1ZU9ODSZXRmjK2Gj2dWrK2EnKnErXQkbUQm1uhLaUIlb6Eq8Zlc2
ml2Zoytho9nVqyuhpAfHKbOrgMVmVxwtYSEqYYyuxGPNrl5dCW1mV9foSgio
BI2G8dGVeKzZlZIeHDaiEjcwu64t8LsgTDkuiF+ed8XVqGRh7oVtnJAL4tTf
iiMX5V2itgfHa3Z1KSrZUXTzmjjrvDB9bWGoq3Ul3xcE7i2Ovl6S7cNL+LEw
2Gt2tYOWOI5KqO3B+YObFFxSeF2ct6soztW6ki1FMUd5qSHSotOCzO3F8TSh
Ek/XlbARlXjNrj5UoBJKenDoM7syRVfCRrMrJboSClFJmESRqypPU6gDSsZD
VxItVeWqKuJl6usipQNmV3fRlTiOSijpwfFYsyu1hSV4VAKDFWZXr67Ea3al
qAfHLlSyPO/y5ZL0aqPh/v37vb29Yo3qIC/6y5yLLqoqWVXgFyrNq6kz9vX1
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
KtFow4Xqa0LVmFAJpCUw/MXl5wvLTmeo4rllFRpdnXGoQgmkJTruoHnS1zA4
2NrR0SQoqw7hl/uLmKYr8Vizay3dZlcW6EoIqMQ2MHEIlfjQa3alpAfHa3Zl
Iyqxh5aQopIR2CTj4uKU/9/encdXVWWJHr//12xZDiRil2VVWw44MgRFnAdQ
CSEMToWiMhoGFSmVIWAAFQQZlNFAlQoyKGDUQoUwGKZAwJlBpLW0usuu6tfV
n/7Uq9fv9fDOOTt359wz5d6z171rr73X/awPn+QmRqIRws+9vvvl53ZsO/TJ
ZydOfOF8k/L7L4//99/+4O77//WPB49+Om3nmwO3Lk2fSnKnz+blwze/vm7P
/qOeRX/4yBEPaXT/aPN//v2fmj798PFtmwY2LrNDdkXmSvKpJfdk5+6tLw3Z
/PrCnU2RXyeHjn026/337t++Kr9UEqwlbirJnbvffXXcu2+/vrcl8utk96cf
1e1454Edq5krQUwlvlqyUc6D2zfUvLt5yft7I79OPjx2eP6unQ/tbEifSnJn
1Ja3Hn+vcePeQ5FfJ3s/++TZ93c8/H7xZFeIHRySqSQNV5JHLWmU80RT4yPv
bRv9u+0Ldja//+HHztfS558f8weT559/vmPHjpdccsmZZ55ZX1/vPPPXvySv
5PzT//znn/787ZfvfvLhnD1N5nAldFJJVC1pbp39zuyf+X7z+IZ9U95sefvA
4RSrFt/++Q+/+/Cz+XsOPNscnUr8M3ff/ie37B+3af/89z7c9/GxFKsWX//j
7zcd+nThHpJcCV4qyYsrSThYkjMHW2dp8+Hntn322t7Dh49/+c3Xvz929Jgb
6p1/Wf/z5//8f//r6Jdfrdt/ZMmeHK6koFQSmBd2HV207bPGg8dOfOmeNXG+
RP/s/L7jnir583/8x798ePzEq83Hlud9sIQiV8Kyqw2pJCGYqMuuQDs4SLIr
xA6OWiqZnT6VMFdSeCpxpm92bntv8f3vrnlpd9OnR45++09f/fffvv3iq8/n
7dpy55YV+XAl+aQSZ6rlvFP/2NaGLQcPHf/ixF/+/Pv/+tsfPzp+eOb7m+/Y
soIyV5I+lYDs4BQpldyz8yU5dze+PHrLG6t27/V9nRxfvHvH8Ma16VJJZC3J
zqp7t6ybuu29rQc/lF8nHx8/Mqepcdi2tZE7OGipxAiuJFUqyaklckbt2PRY
47vr9uyXXycnvjpev2fP+B15cSX5pJKHdjWIeXh3w5jGt5/esWPboY/k18kn
x48+v7vpkZ1va51KtOFKlFLJHuBUIqbWm4leNhn/zo7f7G5p+eTTE+6VTMfE
YYCtW7d26tTp7LPP7tix45o1a7744ovYYOJtgf31L183H/t00b49U3czVwK8
g5MqlQRqSfOc7Dyza9+jbzXPeedg4wdH81+12Hn488V7WvJJJXLm7W9xZsaW
A0+81VK/7aMP8l61+OOf/3Hrp8ee333Ix5WQSSUaciVpUklbLTkipv7gkSV7
Dy9v+uzdQ8ePHD/xr//i/pv6/R//8e1Dx5btORwnuxaaSvyzaNeR1XuONB/+
h6+++v1f//KH//nvfz329debWo69uJe5Eu1lVyO4kmKnkshgYiRXwrIrXirR
iCtpN5X03fZC22xZPH7762ua9764d+f9W16pKpQria8l1RGz5I4tK2c3vfve
Bx8s3rNj8JaXdONKjJddC0ol/hm87eXJO99+bf/+3+7bPaZxw7072pddC00l
/hnWuG7Bru1bP/iwfu/uBxtLw5VgpRLduZJ2U4kzY7MzZuemp5oaN+4/uHpf
8+Pb3xnbVCBXkkcq8c/4HW8v3b1724cfv7Sv+dfbNxPlSgyWXeN2cCJTiX8m
NTU+9N62ie+9v/HAoU8PHxawyXHvUpVOnTo98MADH3/88bFjx/53OJh43u9/
/e3bI18e++3+5ro9JeBK0qcSkB0cPNm1gB2cQCrx1xI5T+/aO/Wd5qXbP2pp
b9Wi5fPj9fsOPbu3udBUIue55gMzth+Ysfng67s/PXb8H5JXLXYfPr50zwfz
ir6DQ0h2LTpXEnewxF9L5Lx44PArzUe2ffzF5kOfv7jns2UH4FPJb7KzsuXY
yv3HNh44uu+zL948eHz57qMrDiCkEpAdHGtlV+ZK4lJJIJgwV8Kyax61xIJU
kjtVbVOUVBIY3VIJiOwKwpWUOJXkU0vujZhUXEl+tSSUR5gr0TeV+GtJdjYF
Rm0HJzqVxAyxVAK7g4OXSgrgSuIOlkTNtklNjY9s3fHMtt1bDn7k2cLHxUU5
n3zyydGjrngRDCatNzGdeP3Qwad3v89cCZVUkp39zsza0zx9y4E1ez7+LGrV
4siXX76078NZu5rjuJJ2U0lgntrZMmfrwS0Hj5z48qvwqsWhz4+v2PvRnN3G
cyVYqaQdrqTdVBIzabiSdlOJOEMSOXbKrjpxJTipZAN+Kvnn1LJrcjApcSoB
2cHBk12ZK6EquyKmkqhakn8qMYwr0V12LVoqaZ8riUslibWkpFyJWioxgStJ
lUqCtaTEqQR6B4dlV7RUImaqN1N2NT7WuHNJU/PuDz85ccK9JUlco5MTTLwd
nH/55y+3fvzh3N27ELkStVTSRFd2bY8rSU4lrbVEzqxd++ftbHn70FG5avHV
H/+woeWTObsOQKUSMfO9eeb9Ayt2fbTnsxNy1eLo179fu/+T5wpJJQtIphJd
ZNcErsTsVALLleClEuZKSHIlkaPOlVCUXa+xPpWA7OAopZJsLSmx7JpPLWk3
laTkSmJqSclTyTL1VALClegsu8alkqhaAsyV6JlKdJJd12PLru3v4KQ6WJIv
V4KXSnThSsyTXdtLJcFaMtWXTaZs27mm+cAHn34mNnSOHT3yt3/72l3T+L/f
/u3f/tBy7MjivXsn7zZFdoXYwcFLJftSpxJn5srZt3/53kNbPjracPDw/KYD
s/cVzJW0m0q8OejMvOaWBfsOrtn/8Z5Pj29oOfxc08H5zZS5EtKyaxRXAlhL
ipNKTJBdV+OnEgiuRCGVgOzgqKWSknIl8cFEC66EouzKXAlR2RU0lSDv4ODJ
rnZxJfkcLClVKoHcwbFWdq0hmEryqyUl5Uooyq4kuJJ2U4l/JjVte7pp11st
H3zmwibH/+Pfv/mvv/3x8y8//23z/rpdO1h2LdoODoDsWlgqCU4RU0nkAO7g
qKUSdK4kfSoB4UpKnEryqSUsuxLiSijKrqXkSmKCCX4q0XAHx1quxC7ZNbqW
kEklLLtC7+CkTyXMlVgru4JwJRRTiU5cCeFUkv8OTsKIGFK7a/uiPXvf/+jj
f/jq84YPPnhm107mSihyJfmlkv10UwmI7GoKV6Iqu5JNJSZwJWqpxASuhKLs
mq6WRAYTy2XXayFSCcgODp7sylwJMleCJ7syV4KcSkB2cCimEuZKiMuuzJXg
pBJZSxKGU0lpdnDUUkmwlrSbSmC5koRaYrrsqgtXYq3sCrSDY63s+g227Gog
V9JuMIk9WIIku4Ls4LDsSjGVQO/gYKUSdK4EK5WYwJVYK7vqxJXgpJLR+KkE
nStJn0om0E4lunAlJU4lOnIldFIJrOxKMZXow5XgpRJQriRNKjmCnUpM4EpY
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
iaaSuFoyoG6K/xP8ebcusKmkW7++zocdVFcra4l6KulVMzITetxRNw18B8cf
TEQh+ftu3Zy/1+MbXjeAK7mtxu3kJ5eX9xntvhAIJuH5ZUV3591qN71ZDNn1
yuoBGTeh/AYkldw/4xnxVSGOkQSCyfQ3Nru/DFYP9O/gZLxiAy67ZrLBRJ4n
EYcx9E8l+ciu1/Z3v1u4oHsP8YIXTJJ2cE71PvfUXEny9k2n7lc6H3xew04Q
rkScHjn1jDPFCyKMyHFedZ503iTPkyx4s8l55sLuPZkrsYcriQkmenMltqYS
kB0cpVSSlisJB5Mr5o9znvlpnx4lk12LypWI36y7Tb4/G0ySdnCuWeD+eedn
fXqm4Urak11vXT3T+eCndzkfiiv5rnd65OLh/Z0XvpsNI3J+0edq562Vq5+R
p0ouHu5+I9Rj8giVBRx/MJFJxC0zZacQ50paF3C+X3aq8+l0GXGH80LkCZPA
Do7oKkWSXcVPBkp2FadHOna9SLzgCyZuLbmx1v0P3/lRhpF+Xl1x3hlEdg0H
kzG7NjjP/KDsNNwdHCjZ9e+6XuJ8OhdV9f6p90K7OzjO+/yw7PQicSXOR3Y+
fp61pF3Z9RLv9MhZXS8Tx0gCwaTvtMedJ50fZRIZvHiu84zzzlCyqwgm8khJ
vycnur9Qd+usA1cCIrv+vFsX5zN6YOnCIsmusmYMqpsKKLt261fllroN64vN
lYhg4t++6d6vnxdMNshUctf0thrsPJ7YuEF2kpplS91f8aZPd0a+w6+mTw9E
ksurq8P9R4aR0cuW+5+ftHETCFey4MDBHtX9xZZNu8FEnCpx3tl5t3HLVxSD
K+k72v2N4L4Zz+RVS9qTXatGjzuv4nK5dxMIJuLJR9t2cNwq0rN6kPPk9Dfe
geVK3N/LKq7wL+A4r2aDSWsq6T/mEf+/Yn8keaz+FeeZYTOfHTazLR0Pnzkn
kEfEx/Q/TinvKNvIiJlz/W8ClF0v6N5j0JhHnReywWR7Mlcimsachu3F4Equ
73+X88Fr69e1X0vykF1vGHC3M7KcBIKJeDKwgyMOmRSdK1FIJSA7OGqpxCiu
JDmYtLuDQ1F2Za5EJZWk40rCweS6VbUZL5j4q8h3Opwsf5GXbxKpxHnV/W55
2wundj5Xvk8gldy46snw9yHnD+srU8lZfa6UzzsfB4or6bXK/e7I+bH/dvf7
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
    "], {{0, 412.5}, {1100.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association["Comments" -> Association["Software" -> "Greenshot"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{991.25, Automatic},
  ImageSizeRaw->{1100.25, 412.5},
  PlotRange->{{0, 1100.25}, {
    0, 412.5}}]], \
"Input",ExpressionUUID->"dc2dac9c-8a1c-4182-b79c-04eb8896c95b"]], "Text",
 CellChangeTimes->{
  3.8231520496153994`*^9, {3.8231541998570695`*^9, 3.8231542229676447`*^9}, {
   3.8231551554163666`*^9, 
   3.823155167025805*^9}},ExpressionUUID->"66be632c-3dc2-43c3-86fe-\
04072ed62152"],

Cell[TextData[{
 "For this simulation scenario we reduce the available capacity of ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 ". We only use one dice. \[OpenCurlyDoubleQuote]",
 StyleBox["Station 4",
  FontWeight->"Bold"],
 "\[CloseCurlyDoubleQuote] is now our ",
 StyleBox["constraint",
  FontSlant->"Italic"],
 " also for the following scenarios. This also means that we have achieved \
the first step of the ",
 StyleBox["Five Focusing Steps",
  FontSlant->"Italic"],
 ". \nTo have a good comparison with the ",
 StyleBox["Balanced Line",
  FontSlant->"Italic"],
 ", we re-use the rolled dice points of the remaining stations. The material \
exchange from station to station has to be re-calculated."
}], "Text",
 CellChangeTimes->{{3.8252322091091614`*^9, 3.825232484845522*^9}, 
   3.8252325368788958`*^9, {3.8252326121189795`*^9, 3.825232613105876*^9}, {
   3.825234164470066*^9, 3.8252342271805735`*^9}, {3.8252342599173813`*^9, 
   3.8252342953870945`*^9}, {3.8253161159058723`*^9, 
   3.825316117395112*^9}},ExpressionUUID->"90f00860-08b3-42a7-bf0f-\
d2927fbbf211"],

Cell[CellGroupData[{

Cell["4.1 Calculation part", "Subsection",
 CellChangeTimes->{{3.8215183292006006`*^9, 3.8215183319026036`*^9}, {
   3.8237785510954103`*^9, 3.8237785522716656`*^9}, {3.8244546971869144`*^9, 
   3.8244546978120375`*^9}, 
   3.8252229940898347`*^9},ExpressionUUID->"4e8a7eeb-3119-4240-b07c-\
9abe560933f9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dg", "=", "BL1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], " ", "=", " ", "i"}], ";", 
    "\n", "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "=", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "4"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "6"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "3"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "    ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "               ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "7"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "9"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", "    ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "10"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "12"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}]}]}]}], "]"}], ";", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"constrained", " ", "by", " ", "only", " ", "one", " ", "dice"}],
      " ", "*)"}], " ", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], ",", "1"}], "]"}], "]"}]}], ";", 
    "\n", "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "15"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}]}], ";", "\n", 
    "               ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "               ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "16"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "18"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}]}], " ", ";", "\n", 
    "               ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "18"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "               ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "19"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "18"}], "]"}], "]"}]}]}], ",", "\[IndentingNewLine]",
    " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "timeUnits", ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.821459380355103*^9, 3.821459393648889*^9}, {
   3.821518357089246*^9, 3.821518368878237*^9}, {3.8217932741690273`*^9, 
   3.8217933348309865`*^9}, 3.823082633921542*^9, 3.8230869492860813`*^9, 
   3.8230870623313255`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"ff2947f2-7acc-4adc-8ac7-0b07b3033d17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalwipCL1", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finishedgoodsCL1", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"dg", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CL1", "=", "dg"}], ";"}]}], "Input",
 CellChangeTimes->{{3.821457222675911*^9, 3.821457234438753*^9}, {
   3.821457293315337*^9, 3.821457321011918*^9}, {3.8214573518641214`*^9, 
   3.821457397212779*^9}, {3.8214584845806704`*^9, 3.821458499155429*^9}, 
   3.821792510036541*^9, {3.821792579298519*^9, 3.8217925897679873`*^9}, {
   3.8230826339245443`*^9, 3.8230826339295435`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"31bba2ef-9c35-4cba-9a26-90bd06085d23"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"availCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{
           RowBox[{"3", "*", "i"}], "-", "1"}]}], "]"}], "]"}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"utilCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"3", "*", "i"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[48]:=",ExpressionUUID->"f716a524-ca66-4e63-b980-ec6831cb1f01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<station 1\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  2\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  3\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  4\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  5\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  6\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}]}], "|>"}]}]}], " ", "|>"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<available versus utilized capacity per workstation\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<available capacity\>\"", ",", "\"\<utilized capacity\>\""}], 
          "}"}], ",", "Below"}], "]"}]}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<station 1\>\"", ",", "\"\<station 2\>\"", ",", 
           "\"\<station 3\>\"", ",", "\"\<station 4\>\"", ",", 
           "\"\<station 5\>\"", ",", "\"\<station 6\>\""}], "}"}], ",", 
         "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}], ",", 
        RowBox[{"Total", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}], ",", "Blue"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<queue12\>\"", ",", "\"\<queue23\>\"", ",", "\"\<queue34\>\"", 
         ",", "\"\<queue45\>\"", ",", "\"\<queue56\>\"", ",", 
         "\"\<totalwip\>\"", ",", "\"\<finalgoods\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<wip per queue, total wip of all queues and final goods\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CL1RollingStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "Pink"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CL1QueueStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "LightBlue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CL1QueueGraph", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue12\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue23\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "10"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue34\>\""}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "13"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue45\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "16"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue56\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "18"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<finalgoods\>\""}]}], "]"}]}],
          "}"}]}], "}"}], ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TCL1", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sp", "-", "tvc"}], ")"}], "*", "finishedgoodsCL1"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ICL1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"totalwipCL1", "*", "tvc"}], ")"}], "+", "invest"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npCL1", "=", 
   RowBox[{"TCL1", "-", "oe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roiCL1", "=", 
   RowBox[{"PercentForm", "[", 
    RowBox[{
     RowBox[{"npBL1", "/", "ICL1"}], " ", "/", " ", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"csCL1", "=", 
   RowBox[{"PercentForm", "[", "1.", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ltCL1", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"totalwipCL1", " ", "/", " ", "finishedgoodsCL1"}], " ", "/", 
     " ", "timeUnits"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pCL1", "=", 
   RowBox[{"TCL1", "/", "oe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"itCL1", "=", 
    RowBox[{"finishedgoodsCL1", " ", "/", " ", "totalwipCL1"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"financeCL1", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<Throughput\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "TBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "TCL1", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Inventory\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "IBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "ICL1", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Operating Expenses\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "oe", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "oe", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Net Profit\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "npBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "npCL1", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ROI\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "roiBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "roiCL1", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Customer Service\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "csBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "csCL1", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Productivity\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "pBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "pCL1", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Inventory Turnover\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "itBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "itCL1", "]"}]}]}], "|>"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "}"}], ",", 
     RowBox[{"HeaderBackground", "\[Rule]", "LightGreen"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.821457715262518*^9, 3.821457729134305*^9}, {
   3.821790448943384*^9, 3.82179045153388*^9}, {3.823082633939543*^9, 
   3.8230826339585423`*^9}, 3.823082990857053*^9, {3.8230837704397125`*^9, 
   3.8230837760907097`*^9}, {3.8230840091352243`*^9, 
   3.8230843045377665`*^9}, {3.8230843365764685`*^9, 
   3.8230843630250044`*^9}, {3.8230844495697947`*^9, 3.8230844608376484`*^9}, 
   3.8230844961957846`*^9, 3.823084573100065*^9, {3.823084624514985*^9, 
   3.8230846481598787`*^9}, 3.8230847030956163`*^9, 3.8230847626201706`*^9, {
   3.8230848035362635`*^9, 3.823084821454138*^9}, {3.823084894718297*^9, 
   3.8230848993220887`*^9}, {3.8230851432784185`*^9, 
   3.8230851439031844`*^9}, {3.823158268664742*^9, 3.8231583422008486`*^9}, {
   3.8237713768453298`*^9, 3.8237713788292503`*^9}, {3.8237714212812767`*^9, 
   3.823771519066265*^9}, {3.823771555988096*^9, 3.8237717453714643`*^9}, 
   3.8237720404670315`*^9, {3.8237720952757406`*^9, 3.8237720953247747`*^9}, {
   3.823772203925375*^9, 3.8237722039643736`*^9}, {3.8237728984111*^9, 
   3.823772902484298*^9}, {3.8237729349377866`*^9, 3.823773064963771*^9}, {
   3.823773123567195*^9, 3.8237731613131886`*^9}, {3.823773317379367*^9, 
   3.82377349179091*^9}, {3.8237735654232545`*^9, 3.8237735702121105`*^9}, {
   3.823773661908608*^9, 3.82377368327633*^9}, {3.8237737249388328`*^9, 
   3.8237738148213587`*^9}, {3.823773944798175*^9, 3.823774146747094*^9}, {
   3.823775666254975*^9, 3.8237756955995255`*^9}, 3.82377606356106*^9, {
   3.825155212521283*^9, 3.82515526644835*^9}, {3.8251552994975195`*^9, 
   3.8251555980280943`*^9}, 3.8251556612665453`*^9, {3.8251558274667845`*^9, 
   3.825155831969902*^9}, {3.8251560324265566`*^9, 3.8251560357078514`*^9}, {
   3.8251561882462196`*^9, 3.8251561986731205`*^9}, 3.8251562777952323`*^9, {
   3.8251565617106037`*^9, 3.825156620962968*^9}, {3.8251566633540134`*^9, 
   3.8251568902284384`*^9}, {3.8253268155347795`*^9, 
   3.8253268277077436`*^9}, {3.825328521689929*^9, 3.8253285233117204`*^9}, {
   3.8253287370880203`*^9, 3.825328748886795*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"227f7131-8b69-4197-b10e-7a2b8f72b3bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["4.2 Rolling dice statistics", "Subsection",
 CellChangeTimes->{{3.8218815709298935`*^9, 3.821881573924301*^9}, {
   3.8230839319467096`*^9, 3.82308393652146*^9}, {3.8237782700218935`*^9, 
   3.823778275586629*^9}, {3.8244547020736165`*^9, 3.824454703020875*^9}, 
   3.8252229956862364`*^9},ExpressionUUID->"aab443e3-749e-4369-8a5f-\
49d44aacba2a"],

Cell[CellGroupData[{

Cell[BoxData["CL1RollingStat"], "Input",
 CellChangeTimes->{
  3.825223139688279*^9, {3.8253287553838916`*^9, 3.8253287590987153`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"18c6fecf-13c2-4fef-8bd9-baca531451dd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "station 1" -> 2., "station 2" -> 2., "station 3" -> 2., "station 4" -> 
          1., "station 5" -> 2., "station 6" -> 2.], "Mean" -> 
        Association[
         "station 1" -> 6.91, "station 2" -> 6.95, "station 3" -> 6.73, 
          "station 4" -> 3.41, "station 5" -> 6.91, "station 6" -> 6.96], 
        "Median" -> 
        Association[
         "station 1" -> 7., "station 2" -> 7., "station 3" -> 7., "station 4" -> 
          3., "station 5" -> 7., "station 6" -> 7.], "StandardDeviation" -> 
        Association[
         "station 1" -> 2.530999722631276, "station 2" -> 2.4510356500009864`,
           "station 3" -> 2.4323368652928457`, "station 4" -> 
          1.7296873075264738`, "station 5" -> 2.781958470087742, "station 6" -> 
          2.5972790735418836`], "Variance" -> 
        Association[
         "station 1" -> 6.405959595959596, "station 2" -> 6.007575757575758, 
          "station 3" -> 5.916262626262626, "station 4" -> 
          2.9918181818181817`, "station 5" -> 7.73929292929293, "station 6" -> 
          6.745858585858586], "Max" -> 
        Association[
         "station 1" -> 12., "station 2" -> 11., "station 3" -> 12., 
          "station 4" -> 6., "station 5" -> 12., "station 6" -> 12.]]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[1, 0.5, 0.5]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 1", 
                  Style[
                  "station 1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 2", 
                  Style[
                  "station 2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 3", 
                  Style[
                  "station 3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 4", 
                  Style[
                  "station 4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 4"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 4"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 5", 
                  Style[
                  "station 5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 5"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 5"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 6", 
                  Style[
                  "station 6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 6"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 6"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.41"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.531"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.45104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.43234"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.72969"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.78196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.59728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.40596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.00758"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.91626"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.99182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.73929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.74586"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{601., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{601., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+IZcwXlORveOKbaLWXgAtJn7jOYcgNpg5zF0wSA9OHC
XWtAtFVnCbMgkL5gW6gOooX2z7cC0U+y2sNB9LHTOubCQNr+jGcDiP4t9XEB
iO67uesDiM778e0vWF7MmU8ESJ9cEKoAom/UsuiD6Fg3CwsQvWa/iyuIZoru
yQTRfJ0Pi0F0c3pMNYi+t/pRM4i+lGA4DUTf8VFbBKKlcqefAtHciiH/QPQ/
Ew5uUZC6iW/FQLTKr2Y5MSBt99zeAUS7bG64aAakrz+Ou2EOpKc0sey2ANLz
InzlrUDuDihRA9EBctGxNiB38E1bFQukASq0i7o=
  "],
 CellLabel->"Out[64]=",ExpressionUUID->"1d3ab90b-ccf4-42eb-8bce-54d91e21751a"]
}, Open  ]],

Cell[TextData[{
 "We can recognize the change of ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 " here compared to all other stations. Please compare the results with \
section 1.2 Rolling the dices."
}], "Text",
 CellChangeTimes->{{3.8252326306289196`*^9, 3.825232743408049*^9}, {
  3.8252327791064405`*^9, 
  3.825232780749915*^9}},ExpressionUUID->"d2632221-1677-49c8-8d8c-\
20c238abcb97"]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.3 Queue statistics", "Subsection",
 CellChangeTimes->{{3.823084865745937*^9, 3.8230848710793533`*^9}, {
   3.823778306680667*^9, 3.8237783083300242`*^9}, {3.8244547081096897`*^9, 
   3.8244547099359803`*^9}, 
   3.825222998917714*^9},ExpressionUUID->"38785bb1-fc18-4fc4-a049-\
37a1a9900918"],

Cell[CellGroupData[{

Cell[BoxData["CL1QueueGraph"], "Input",
 CellChangeTimes->{3.825155847168005*^9},
 CellLabel->"In[65]:=",ExpressionUUID->"729fe62c-61d6-43c0-a897-fd0ce6c46f5b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJx1lMlKQzEUQB+uXLpw4cKFFhEREcfWuXGodahTnbeia38hn5ZP8hNUeo6Q
CwpyOE1y3829SWbfPocfY03TvP/8/3L099UdsZP4AW7DcbgJJ+AKnIRrcCqM
T8NFOBPGW2H9HGzD+TB/Aa6GuK5fCuPLcCvE6YZ5jhtn/R9uBFoX62Xee7AT
3O/shnXmswMPwjzdOAnu/7NON25cRx5ZN+/DOm7WjXcE2XfWrc8xpI5ZN/5J
WK9blx5k37lXz29OQ/66++7Xnvv1/Oas3k/W7dM55Fxk3X5fQM5d1j23l5Bz
l4M3gxB/EMavIOc8657L6zrfrLu/G2j9dPt/y+/0PeGeixy86Nb3rvak+z2d
fhfd/If1eNLtp06/i+75uofsP+n0J+uu130nHmpPOu9W1nnXit6Cj5B3Jun2
W+edKbr5P9X5Jd366dy/gv/ds2ece5Vw73nWubdF9514gbw7Sff7wYvu/XiF
7fQNIlN7Iw==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue12\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 39.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdk71OA0EMhC0qSgoKCgpACCGEEBAIvyHOAQnhN7kECC2CmlfYR9tHyiMA
upmVPCedPo3Ha3t379Y/f+rvBTP7+nv/2TzzbsNjRwBsg4vgCbgEtsBlyV8B
z8BV8BRcE39D/E3RW+ARuO1x3h3pvyt6D9wXcv4D0YeyriXkHKzDObiuLXGe
2yXIfV2APIcr8FzizGN91mGfjvRhHa7rNkwOTXYkjjzrid+TvCrqVMm666gT
dLpF/AaETqJLXFj8vuT1JT6Q9QPJu4MegtQP8IeRzDP694grJa/0peb8j+JT
Yw57ivtJ1DynZ/FF24vMT41+NgLRz0eyD2rMnZnPOcZxHz6OfhrHubP4Vkff
61gv0Wd/+jzfCQjfJ9FPorNomyKP809lfvo4j0yf9/Ma6zl0+Y7Ez9SoZ28g
7supcb8Jmv9dps//7z36LjpRV1gPXe5/Bh/9fCb9RWfm8/v6KPP/AtpfjM0=

          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue23\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 59.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxd1EluFDEUBmCLFctesGDBooIQQgihJsxjzJSEKTQJsxAUISEJU8KQvY+Q
I/RR6ih1hBwBUH0PCbfUevr8+1mtLtebWd1eXj+QUlr78/1bh8/+3FAvZAvq
NfWgelMdDbXc4UM8z4d5kY/wPW74Ph/lh3xMfaQelz/mE0PNT/hk5VND7Vb4
tP6nPJY/5zPyFzzrvPBZ+Us+pz98nl9x/I/hi5UvOe81X+Y3fMV5b/lqZc8l
v+PrVX7DeeG5oTYtZ5UL95F7zvm9PJ77qnrLOhduPshv6+fCJXL3po087tGa
elfOhUvk7lmOPLwuX/B7uCxU+WKV8zTyuKcf5Zw5ubdN5DyN/IH9G/LKyT1v
I+cSedz7TevccFqyHvlSlXtP+sg5b8kn1jlz+mSdG+5iPyfvWftZPxcuPOWu
ytOy/i/6w1/tC3/Tzw2nlf/zHN7Wzz3HHGh29JsDE87cc8yJ0Xf9MTc4PRvq
mDPvcOEu+nn0Q7+5s8eZp1x4/FN/7OdkLvX8b0790l+545aTubXHmfvo5/3o
58mufnOs382/AT2/sXg=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue34\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 350.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdk8lKQ0EQRQtXLl24cOFCg4iIiCbO0+uomRyTaIxuRdf+Qn9af1J+QIjG
OkLdB6E4ubeG7npv9f1r+DlnZh8/v984mj3flc2ejfQXzeO6x3mJC8KL8v+S
1FkW/4rk1YTXPE6qOMdE5qTfpuhbUm9b/Dui7wrXpV5D9D3R950594H0OxT/
kfCxM/dzIv1Ohc+Ez4UvpH8l9VPUcxK96dH3l5vRb5dx/ixsV1If5n6uRYeZ
vxU5w+S3Zb529FtH9I7o3Vgvw5yv59Hf09yLfruR+WHe91uZHyb/TurDvPf3
Hmuuw8z3IPVh9vcYOcPM1/fo+0p98cM+bxG/DeI8aRD9GfbvvsDkD6U/zL5g
+sPs7ynOm2DyYa9fRLdn6Q9znzD9Ye5/JP1h+sPki24vUU8w/WGvX2Dyx9Gf
xlHPMP3Fb68eOT/M/oWL+O3tX58CdbF7uA==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue45\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdkssuQ2EUhXeMDA0MDAxoRERE3O/0L1WXFlWXMiQx9grnefQlziN5BCrr
k+x1kmbl676s9f/nzL9/Dj4mIuLt9zfW0df4mSrx9yxJp6Wz0hnppP0Pz9lc
w3jB+hel383sS45lq6/Y/KrxmvG6+W/Yvk2rb1l9W8y5dyzfrvXvGe9bngPz
O5Ryb0dS7unY+k/Mv2n7S65Xxeotaajeyv1xmvNXxnFm+2G+g3bOW7Vzf5xb
HeZ+O5avk/vjwuow57u0/TD+V1LddwXjf537K1h+0bX93dwfPcvXy/1xI22o
DjN/a/thzneXuYLJ15fqfZW+9cM6bw0zf5/zFJg8sN53DZNvYP4w9wHjD3M/
D3lfgZmHtb+2ejyaP0x+GH+Y/E/mD+MPM2/1eM5cYL4nWPtr649hzluGuV7B
+Ft/vEg5P8z7N66tP17/6z+X83fh
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue56\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxtkklOAkAQRSuuXLpw4cKFEmKMMcZ5VhoHHEAFHNCt0bVXqKP1kTiCGuqZ
1I8k5Ofxa/jdzeL71/Bzysw+fr6/OvmMWxNdLvFD6GzodGgjdCa0KXVzovTN
Cy9IX0P8pvBS+T8nOVbEX5X+NeF14Q3JsynztsTfFn8nmHPvSr49qd8XPpA8
h6G8w5H4x6Hc04nkO5X9Lekv2fcifjvv93aut7Oc34XtPM9zmPu5yHkdZv6l
+DD9HcnXyfV2JT7M+a4lH8z+m9D4nzrM/ttc7zDv1ZX83VxvPcnXy/V2F9oI
H6b/XubDnO8hs8Pk64fGe5W+1MMxv8L0D3KeMsj1Llxh8g1lP8x9wHHfFeZ+
HvO8AtMPx/wqvj3Jfpj8MPth8j/Lfpj9MP3i20vmAvN/gmN+lXob5bxllH2H
2S/19hrK+WHeX7hKvb39+d+3FHZY
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"finalgoods\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 1]]]], "Output",
 CellChangeTimes->{
  3.823085021986786*^9, {3.8230850534111958`*^9, 3.8230850763048997`*^9}, 
   3.8230866127425337`*^9, 3.823086680373588*^9, 3.8230868857020454`*^9, 
   3.8230872159811506`*^9, 3.823087396677679*^9, 3.8230886433674545`*^9, 
   3.82308877666735*^9, 3.823149686070222*^9, 3.8231583150497723`*^9, 
   3.823158349857612*^9, 3.82315875136504*^9, 3.8237655255403376`*^9, 
   3.823771935464737*^9, 3.8237720466887493`*^9, 3.823775236045388*^9, 
   3.8237790121982512`*^9, 3.825153336583846*^9, 3.8251535171308765`*^9, 
   3.825155133034283*^9, 3.825155608139964*^9, 3.8251557472802086`*^9, 
   3.825156048952569*^9, 3.8251569030678444`*^9, 3.825157169489586*^9, 
   3.825157283932887*^9, 3.8251582841926312`*^9, 3.825158750901749*^9, 
   3.8251588382788706`*^9, 3.825163623702897*^9, 3.825223928836541*^9, 
   3.825225733470252*^9, 3.8252282003543177`*^9, 3.8252392213818526`*^9, 
   3.8252393981203413`*^9, 3.8252400917197523`*^9, 3.825240379867796*^9, 
   3.825240533278122*^9, 3.8252407645337915`*^9, 3.8252446016918736`*^9, 
   3.8252451865962825`*^9, 3.8252454478615904`*^9, 3.8252460861920614`*^9, 
   3.8252461921128297`*^9, 3.8252463224344635`*^9, 3.825246467075035*^9, 
   3.825246584544428*^9, 3.8252466581215887`*^9, 3.825246762541398*^9, 
   3.825247052816948*^9, 3.8252471354379807`*^9, 3.82524719528475*^9, 
   3.8252472634804845`*^9, 3.82524740985807*^9, 3.8252475055958767`*^9, 
   3.825247829161069*^9, 3.8252482427080336`*^9, 3.8252483443775225`*^9, 
   3.8252484394970975`*^9, 3.8252505481942773`*^9, 3.8252508183169765`*^9, 
   3.825317516322878*^9, 3.8253196192753134`*^9, 3.825321432464939*^9, 
   3.825324282800068*^9, 3.8253243399346037`*^9, 3.825328875184455*^9, 
   3.8253970770831633`*^9},
 CellLabel->
  "Out[65]//TableForm=",ExpressionUUID->"c5b45f1f-f9d8-4e6f-a9cf-\
6b7ac2cdd610"]
}, Open  ]],

Cell["\<\
It is interesting to observe the tremendous almost linear growth of buffered \
material in queue 34. This queue is in front of the constraint. 
We have to remind ourselves that the constrained station is now reacting with \
a Uniform probability distribution compared to all other stations with a \
Gaussian distribution.\
\>", "Text",
 CellChangeTimes->{{3.825232837824194*^9, 3.82523313533982*^9}, 
   3.8252331822304726`*^9, {3.8252332374741263`*^9, 3.8252332435267477`*^9}, 
   3.8253161749247684`*^9},ExpressionUUID->"e3c13700-faf7-4027-8e3d-\
5c58efb90c02"],

Cell[CellGroupData[{

Cell[BoxData["CL1QueueStat"], "Input",
 CellChangeTimes->{
  3.825223800651428*^9, {3.8253287643606052`*^9, 3.8253287703732123`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"44b82602-c4c7-4f9c-b4a6-8d5e861c3b68"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "queue 12" -> 5., "queue 23" -> 15., "queue 34" -> 22., "queue 45" -> 
          1., "queue 56" -> 1., "final goods" -> 1.], "Mean" -> 
        Association[
         "queue 12" -> 22.44, "queue 23" -> 38.67, "queue 34" -> 180.45, 
          "queue 45" -> 3.97, "queue 56" -> 4.3, "final goods" -> 3.71], 
        "Median" -> 
        Association[
         "queue 12" -> 22.5, "queue 23" -> 42., "queue 34" -> 176.5, 
          "queue 45" -> 4., "queue 56" -> 3.5, "final goods" -> 3.], 
        "StandardDeviation" -> 
        Association[
         "queue 12" -> 6.561780985141893, "queue 23" -> 13.091021674600057`, 
          "queue 34" -> 85.62053645374024, "queue 45" -> 2.4881740495813593`, 
          "queue 56" -> 3.710482012849108, "final goods" -> 
          2.1616258377957696`], "Variance" -> 
        Association[
         "queue 12" -> 43.056969696969695`, "queue 23" -> 171.37484848484848`,
           "queue 34" -> 7330.876262626262, "queue 45" -> 6.191010101010101, 
          "queue 56" -> 13.767676767676768`, "final goods" -> 
          4.672626262626262], "Max" -> 
        Association[
         "queue 12" -> 39., "queue 23" -> 59., "queue 34" -> 350., "queue 45" -> 
          17., "queue 56" -> 24., "final goods" -> 12.]]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.87, 0.94, 1]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[4]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 12", 
                  Style[
                  "queue 12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 12"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 12"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 23", 
                  Style[
                  "queue 23", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 23"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 23"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 34", 
                  Style[
                  "queue 34", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 34"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 34"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 45", 
                  Style[
                  "queue 45", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 45"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 45"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 56", 
                  Style[
                  "queue 56", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 56"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 56"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["final goods", 
                  Style[
                  "final goods", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "final goods"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "final goods"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["38.67"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["180.45"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["42.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["176.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.56178"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.091"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["85.6205"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.48817"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.71048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.16163"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["43.057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["171.375"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7330.88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.19101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.7677"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.67263"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["350.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{610., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{610., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA2IZDjl5zoY3jl6fNzFwAWmON3ym3ED6+82N0wSA9Duu
E2tA9K2tVcyCQNrlYqM6iNZw2mAFou3+TAkH0XlTrM2FgfTzSZENIHpK5/8F
IHpN3KkPIPpVEvs/EK25L5BPBEjvsE1TANGnFUX1QbTPG3cLEG3HGOoKop88
mpsJonV4PhWD6EkqudUg+lP452YQvXSd/TQQfeOH2SIQ7fFl5SkQ/e9z5D8Q
zZDAzy0KpN9zfRYD0QlsXXJiIHds9HUA0cbsEy6ageyxzrlhDqSvXRDabQGk
5+vGyVsB6RU/GtVAdKZCVqwNkL4uvHxVLJAGANZWjps=
  "],
 CellLabel->"Out[66]=",ExpressionUUID->"5467a849-c995-4b74-b93d-4b896da540ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
4.4 Comparison of a) available and utilized capacities and b) last run WIP \
plus Final goods\
\>", "Subsection",
 CellChangeTimes->{{3.821518399704151*^9, 3.8215184017102585`*^9}, {
   3.823778339949853*^9, 3.8237784175681896`*^9}, {3.8244547175900917`*^9, 
   3.8244547407569246`*^9}, 
   3.825223002460864*^9},ExpressionUUID->"4fcb4906-87ca-4ad7-b4d8-\
d755e61b051d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\"\<*        *\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821456255721122*^9, 3.8214562940870533`*^9}, 
   3.821518387399879*^9, 3.821881634077114*^9, 3.8218824507881174`*^9, {
   3.823158223396072*^9, 3.8231582288905387`*^9}, {3.823158772548735*^9, 
   3.823158773748289*^9}, {3.8252256178844213`*^9, 3.8252256553030195`*^9}, {
   3.825225706234838*^9, 3.825225710887071*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"3b9fd45b-19de-4f96-98f0-77aa8b6f6e6d"],

Cell[BoxData[
 TemplateBox[{"*        *", "\"*        *\"", 
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5611439176649233, 0.}, {14.738231820482538`, 
         0.}}]}, {{}, {{{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.8391260334064451, 0.}, {1.703475620043867, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.839126033406445, 0.}, {2.703475620043867, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.246077273494179, 0.}, {4.110426860131601, 
                 695.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.246077273494179, 0.}, {5.110426860131601, 
                 692.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.653028513581913, 0.}, {6.517378100219335, 
                 673.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.653028513581913, 0.}, {7.517378100219335, 
                 673.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.059979753669648, 0.}, {8.92432934030707, 
                 341.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.059979753669648, 0.}, {9.92432934030707, 
                 341.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{10.466930993757382`, 0.}, {11.331280580394804`, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{11.466930993757382`, 0.}, {12.331280580394804`, 
                 356.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{12.873882233845116`, 0.}, {13.738231820482538`, 
                 696.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{13.873882233845116`, 0.}, {14.738231820482538`, 
                 371.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}}, {}, {}}, {}, {
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {1.271300826725156, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {2.271300826725156, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["695.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {3.67825206681289, 695.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["692.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {4.67825206681289, 692.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["673.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {6.085203306900624, 673.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["673.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {7.085203306900624, 673.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["341.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {8.49215454698836, 341.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["341.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {9.49215454698836, 341.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {10.899105787076092`, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["356.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {11.899105787076092`, 356.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["696.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {13.306057027163828`, 696.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["371.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {14.306057027163828`, 371.}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, {
        StyleBox[{Antialiasing -> False, {
           Directive[
            Thickness[Tiny]], {
            LineBox[{{0.5611439176649233, 0.}, {15.021773578538888`, 0.}}]}, 
           StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
          StyleBox[{{
             Directive[
              Thickness[Tiny]], 
             LineBox[{{0.839126033406445, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {0.839126033406445, 
                0.}]}], 
             LineBox[{{14.738231820482536`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.738231820482536`, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
               LineBox[{{2.703475620043867, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {2.703475620043867, 
                  0.}]}], 
               LineBox[{{3.2460772734941785`, 0.}, 
                 Offset[{-1.102182119232618*^-15, -6.}, {3.2460772734941785`, 
                  0.}]}], 
               LineBox[{{5.1104268601316, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.1104268601316, 
                  0.}]}], 
               LineBox[{{5.653028513581912, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.653028513581912, 
                  0.}]}], 
               LineBox[{{7.517378100219334, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {7.517378100219334, 
                  0.}]}], 
               LineBox[{{8.059979753669646, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {8.059979753669646, 
                  0.}]}], 
               LineBox[{{9.924329340307068, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {9.924329340307068, 
                  0.}]}], 
               LineBox[{{10.46693099375738, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {10.46693099375738, 
                  0.}]}], 
               LineBox[{{12.3312805803948, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.3312805803948, 
                  0.}]}], 
               LineBox[{{12.873882233845112`, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.873882233845112`, 
                  0.}]}]}}}, 
            StyleBox[{
              Directive[
               Thickness[Tiny]], 
              Directive[
               Thickness[Tiny]], 
              StyleBox[{
                InsetBox[
                 FormBox["\"station 1\"", TraditionalForm], 
                 Offset[{0, -2}, {1.771300826725156, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 2\"", TraditionalForm], 
                 Offset[{0, -2}, {4.17825206681289, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 3\"", TraditionalForm], 
                 Offset[{0, -2}, {6.585203306900623, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 4\"", TraditionalForm], 
                 Offset[{0, -2}, {8.992154546988356, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 5\"", TraditionalForm], 
                 Offset[{0, -2}, {11.399105787076092`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 6\"", TraditionalForm], 
                 Offset[{0, -2}, {13.806057027163824`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}]}, {{}}, 
               StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
             False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
         "GraphicsAxes"}, StripOnInput -> False]}}, {
      DisplayFunction -> Identity, AspectRatio -> 0.5, Axes -> {False, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.5611439176649233, 0.}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
       FormBox["\"available versus utilized capacity per workstation\"", 
         TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"available capacity\"", "\"utilized capacity\""}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5079726666666667, 0.313888, 
                    0.6270646666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.761959`", ",", "0.470832`", ",", "0.940597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2875306666666667, 0.473182, 
                    0.6180513333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.431296`", ",", "0.709773`", ",", "0.927077`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}],
              ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.651]]], 
         RGBColor[0.976, 0.6848, 0.26480000000000004`]], {{
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 22.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 44.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 350.},
            "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 3.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 3.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 422.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 371.}, 
           "RoundingRadius" -> 0]}}}, {}, {}}, {}, {
       InsetBox[
        FormBox[
         StyleBox["22", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {1., 22.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["44", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {2., 44.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["350", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {3., 350.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["3", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {4., 3.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["3", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {5., 3.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["422", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {6., 422.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["371", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {7., 371.}], 
        ImageScaled[{0.5, 0}]]}, {}, {}, {}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.4107501820830298, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["\"queue12\"", TraditionalForm], 0}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox["\"queue23\"", TraditionalForm], 0}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox["\"queue34\"", TraditionalForm], 0}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox["\"queue45\"", TraditionalForm], 0}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox["\"queue56\"", TraditionalForm], 0}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox["\"totalwip\"", TraditionalForm], 0}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox["\"finalgoods\"", TraditionalForm], 0}}, None}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"wip per queue, total wip of all queues and final goods\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{
  3.821456225821967*^9, 3.8214562956960487`*^9, 3.821456459016817*^9, 
   3.821457748098464*^9, 3.821458580479832*^9, 3.821458997100103*^9, 
   3.821459399756692*^9, 3.8215184207214317`*^9, {3.821790569667719*^9, 
   3.8217905793468695`*^9}, 3.821790796676169*^9, {3.8217908852256765`*^9, 
   3.821790891577798*^9}, 3.8217926012038755`*^9, 3.8217927808887672`*^9, 
   3.821793060291562*^9, {3.8217931007461967`*^9, 3.821793108783345*^9}, 
   3.8217933470914316`*^9, 3.821793388862252*^9, 3.821871491568206*^9, 
   3.8218736534598083`*^9, 3.8218753127580366`*^9, 3.8218772074394255`*^9, 
   3.821882092468424*^9, 3.8218824532630997`*^9, 3.8218824854581156`*^9, 
   3.821884363219445*^9, 3.8218844304356017`*^9, 3.821884651657248*^9, 
   3.822305109397005*^9, 3.8229216190063534`*^9, 3.822921871196349*^9, 
   3.8229223426482105`*^9, 3.8230826751681232`*^9, 3.823083182493385*^9, 
   3.823086612922529*^9, 3.8230866805645847`*^9, 3.8230868858990498`*^9, 
   3.8230872161520996`*^9, 3.8230873968986807`*^9, 3.823088643579507*^9, 
   3.823088776842199*^9, 3.82314968623822*^9, 3.8231583737266493`*^9, {
   3.8231587516010404`*^9, 3.823158774869018*^9}, 3.8237655257042847`*^9, 
   3.8237719356377373`*^9, 3.8237720468637466`*^9, 3.8237752362363896`*^9, 
   3.823775704372213*^9, 3.823779012384184*^9, 3.8251533368458447`*^9, 
   3.8251535174199295`*^9, 3.825155133260231*^9, 3.8251556087038093`*^9, 
   3.825155747808061*^9, 3.8251560494746494`*^9, 3.825156903314842*^9, 
   3.825157169784582*^9, 3.8251572842548857`*^9, 3.825158284787733*^9, 
   3.8251587514968038`*^9, 3.825158838868869*^9, 3.8251636241975718`*^9, 
   3.825223929310495*^9, {3.825225637498601*^9, 3.8252256568684826`*^9}, {
   3.8252257119702272`*^9, 3.825225733978198*^9}, 3.8252282008423133`*^9, 
   3.825239221921851*^9, 3.825239398662336*^9, 3.825240091981699*^9, 
   3.825240380468795*^9, 3.8252405339040685`*^9, 3.825240765075793*^9, 
   3.825244602206874*^9, 3.8252451871251817`*^9, 3.8252454483505383`*^9, 
   3.8252460867830553`*^9, 3.8252461925968256`*^9, 3.82524632291753*^9, 
   3.825246467573036*^9, 3.8252465850174294`*^9, 3.825246658625589*^9, 
   3.825246763033396*^9, 3.8252470532989984`*^9, 3.8252471359329815`*^9, 
   3.8252471957817707`*^9, 3.825247263971749*^9, 3.825247410392068*^9, 
   3.825247506084876*^9, 3.825247829701068*^9, 3.8252482429630346`*^9, 
   3.825248344622469*^9, 3.825248439741081*^9, 3.825250548451284*^9, 
   3.8252508187939663`*^9, 3.8253175168770247`*^9, 3.8253196197453165`*^9, 
   3.825321432980939*^9, 3.825324283350875*^9, 3.825324340440093*^9, 
   3.8253288756784563`*^9, 3.825397077594221*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"d1fea344-367f-41c1-b4dd-e841e92b1b25"]
}, Open  ]],

Cell[TextData[{
 "Let us try a simple explanation. ",
 StyleBox["Stations 1,2,3",
  FontSlant->"Italic"],
 " know nothing about the constrained ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 ", hence they produce as much as possible. The same is valid for ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 " but on a lower level. \n",
 StyleBox["Stations 5 and 6 ",
  FontSlant->"Italic"],
 "only get the lower output from ",
 StyleBox["station 4.",
  FontSlant->"Italic"],
 " Both stations are on a utilized capacity level of approx. 50%.\nIn this \
scenario we have much more work-in-process than as we have sold and shipped \
final goods. If we take no action, queue 34 will \
\[OpenCurlyDoubleQuote]linearly\[CloseCurlyDoubleQuote] grow forever."
}], "Text",
 CellChangeTimes->{{3.8252332936251698`*^9, 3.825233357404236*^9}, {
  3.825233407694632*^9, 3.8252335675862203`*^9}, {3.8252336021738677`*^9, 
  3.825233760439975*^9}, {3.8253162322825513`*^9, 3.825316233260702*^9}, {
  3.825316299584346*^9, 
  3.8253163022114215`*^9}},ExpressionUUID->"4b6cc3d0-ccc6-4729-b4cb-\
1b491a2a1077"]
}, Open  ]],

Cell[CellGroupData[{

Cell["4.5 Comparison of Throughput Accounting figures", "Subsection",
 CellChangeTimes->{
  3.8237781609302006`*^9, {3.8244547508536615`*^9, 3.8244547522637396`*^9}, {
   3.8251574044492507`*^9, 3.825157410787466*^9}, 
   3.82522300613092*^9},ExpressionUUID->"5519a6ed-7280-41d5-9564-\
93ba4b99b994"],

Cell[CellGroupData[{

Cell[BoxData["financeCL1"], "Input",
 CellChangeTimes->{
  3.8252238335123854`*^9, {3.825328776316189*^9, 3.8253287796959815`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"b8b1f3fe-c9f1-465d-bc45-1057bd2319a3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Throughput" -> 
        Association["Balanced Line" -> 132800., "Constrained Line" -> 74200.],
         "Inventory" -> 
        Association["Balanced Line" -> 48600., "Constrained Line" -> 104400.],
         "Operating Expenses" -> 
        Association["Balanced Line" -> 30000., "Constrained Line" -> 30000.], 
        "Net Profit" -> 
        Association["Balanced Line" -> 102800., "Constrained Line" -> 44200.],
         "ROI" -> Association[
         "Balanced Line" -> PercentForm[0.021152263374485596`], 
          "Constrained Line" -> PercentForm[0.009846743295019156]], 
        "Customer Service" -> 
        Association[
         "Balanced Line" -> PercentForm[1.], "Constrained Line" -> 
          PercentForm[1.]], "Productivity" -> 
        Association[
         "Balanced Line" -> 4.426666666666667, "Constrained Line" -> 
          2.473333333333333], "Inventory Turnover" -> 
        Association[
         "Balanced Line" -> 4.643356643356643, "Constrained Line" -> 
          0.8791469194312796]]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 2, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Balanced Line", "Constrained Line"}, {
         TypeSystem`AnyType, TypeSystem`AnyType}], 8], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.88, 1, 0.88]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[5]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 2, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Balanced Line", "Constrained Line"}, {
         TypeSystem`AnyType, TypeSystem`AnyType}], 8], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     2, "DataRowCount" -> 1, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Balanced Line", 
                  Style[
                  "Balanced Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Balanced Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Balanced Line"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Constrained Line", 
                  Style[
                  "Constrained Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Constrained Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Constrained Line"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Throughput", 
                  Style[
                  "Throughput", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Throughput"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["132800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory", 
                  Style[
                  "Inventory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104400."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Operating Expenses", 
                  Style[
                  "Operating Expenses", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Operating Expenses"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Net Profit", 
                  Style[
                  "Net Profit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Net Profit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["102800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ROI", 
                  Style[
                  "ROI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ROI"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.115%\"", ShowStringCharacters -> False], 
                  0.021152263374485596`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"0.9847%\"", ShowStringCharacters -> False], 
                  0.009846743295019156, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Customer Service", 
                  Style[
                  "Customer Service", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Customer Service"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Productivity", 
                  Style[
                  "Productivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Productivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.42667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory Turnover", 
                  Style[
                  "Inventory Turnover", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory Turnover"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.879147"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{412., {119., 125.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{412., {119., 125.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA2I5Y115zoY3jlHeRxi4gPSadnlTbiBd9+ngNAEgfYPt
1howHd/CLAikY+qnqoPoLbcPWoFolbPLw0G0Cae3uTCQnt2S0QCizf7wLwTR
5QwPPoDorBbJfyBa4EcinwiQXpdSrgCite+o6YPo71yRFiD68850VxAtPX1d
Joheu5ilBERPuVpfDaLlN7C2gGgGneBpYHPcPBeB6M76fadAtMSixH8g+gmr
OLcokJ624pcYiL4yc5KcGJAu+hzrAKKZ7i64aAakL/TW3DAH0t2rVXZbgNw3
u0DeCkjHa09WA9Fu9ytjbYB03ontq2KBNAB/IovS
  "],
 CellLabel->"Out[68]=",ExpressionUUID->"1c9b6e89-df32-41c1-ac13-18cd86f2bc37"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5. TOC-DBR", "Section",
 CellChangeTimes->{{3.8214561974537773`*^9, 3.8214562194485636`*^9}, {
   3.821458872285861*^9, 3.82145887737852*^9}, 3.8215184681349063`*^9, {
   3.8244547787850094`*^9, 3.824454779247095*^9}, 3.8252230101359596`*^9, 
   3.8252341255308475`*^9},ExpressionUUID->"bbded5f9-d54a-48ab-bc75-\
6beecc52e64b"],

Cell[TextData[{
 StyleBox["TOC-DBR",
  FontWeight->"Bold"],
 " is an abbreviation that stands for TOC-Theory of Constraints with the \
application solution DBR Drum-Buffer-Rope.\n",
 StyleBox["Drum ",
  FontWeight->"Bold"],
 "is the output of our constraint or to be more precisely: in operations, the \
schedule of the constraint.\n",
 StyleBox["Buffer",
  FontWeight->"Bold"],
 " is the protection against uncertainty for the constraint. In our case the \
material available in queue 34. In practice, it should be realized with \
active buffer management which is not integrated into this simulation.\n",
 StyleBox["Rope ",
  FontWeight->"Bold"],
 "is a feedback loop or you can call it an information line. \n\nIn this \
section, we will make use of the ",
 StyleBox["Rope",
  FontWeight->"Bold"],
 " to study its impact on the flow. It is very simple because we inform ",
 StyleBox["station 1",
  FontSlant->"Italic"],
 " about the utilized capacity of ",
 StyleBox["station 4 ",
  FontSlant->"Italic"],
 "of the former round. \nIn the next round, ",
 StyleBox["station 1",
  FontSlant->"Italic"],
 " will only release the amount of material that was moved from ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 " to ",
 StyleBox["station 5",
  FontSlant->"Italic"],
 " in the previous round."
}], "Text",
 CellChangeTimes->{{3.8252341117184973`*^9, 3.8252341201349754`*^9}, {
  3.8252343255643435`*^9, 3.825234480226675*^9}, {3.8252346149703364`*^9, 
  3.8252346895793533`*^9}, {3.825234731686104*^9, 3.8252348889602146`*^9}, {
  3.8252349283610353`*^9, 3.825235248689068*^9}, {3.8252353311055307`*^9, 
  3.82523538056071*^9}, {3.8253163591218786`*^9, 3.825316425455261*^9}, {
  3.825316464645798*^9, 3.8253164664354877`*^9}, {3.825316504653224*^9, 
  3.8253165303743525`*^9}},ExpressionUUID->"e740a21f-b5aa-4b9f-a964-\
ba23b6079cf2"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3Qd0VWXa6PHc75uxgg1UimChQ5QiTVQChCIlQEIvoYZQE3qLiAGDgDTp
hABRRlEcsFBEBRVH1LGg84049+rozJ0ZHV3Xq7PmjqOfa7mWd5/znvNmn3eX
8569n3Oet531rKzkZCdSIoa/+/m9N0+ZW1D8H1lZWQsvsV4UTF7ac8GCycuH
XWW9MaJ04czppdOK+pcumjZ92oKuU/7TerK5de3Lv8zKirye9exQ+/yPZ/P9
5z9qpsBr/pPOc2SGec0vXGY4M7/0nBFkLko2Fz83MulcUjOjYnPMfS49Njrp
XFYzY1zncpcZy0wtzxlHpjbPHB9vzRUcc+XxQv+5qmYmeM3VNTPRda5xmUnM
1KFzgpnJzNT1mylkrk02152Y6j/X10yR19RzzslprlO/Zoq9pgE705lp6Dcz
yNyQbBqdnJl8no9M4+dnJZ0ba2a269zkMnOYudllSuxzi9+UkmlC55TXzCXT
NNk0OzUv6TSvmfmu08JlFjDT0jkvkFnITCuXWcRMa89ZTKYNx2S/sMR/bq2Z
pey8GJvb2FnmNW1dZrl92vlNGZn2nnMvmQ4cc/uLK2LzUpLp+NJ9/tOpZlZ6
TWeXud8+XfymnExX55xmZhWZO/xmNZluyebO0w8knbtiU+E1d7vMmticiUx3
v3mQmRzPWUumB8f0PLPOf3qdWZ90cum8/JD/9K6ZDa7Tx2U2MtPXczaR6ccx
97y8mZ1X3Kf/K1uSzoBXHvafgTWz1WsGsbONmTyfeXW7NYO5ZgeZIclm6Ks7
k05+zexynYKa2e01w84ys8drhrtMpX1G+M1eMiOTzaizVUlndM3si81r7jOm
ZvZ7zdjYHPCacS5TbZ/xfvMImUKf+U1kJvzmUf6Z+JuD/jOpZn7lNZPZeYyZ
KS7zODNTX/eaQ8wU+c0T1kzjmOLXn/Sf6TVz2GtmMHPuKWZm+s2vmZnFzhFm
ZvvNUWvmcEzJuac9543IlNbMM0lnbs086zrzXOY5ZuZ7zjEyC/zmOJmFbyad
E2QWJZvFb55MOktq5nnXWeoyp5hZRuctZl4gs5xrXiRT5jkvvfnmm3//+9/5
g8n/CBJMPJtJZoIJTzNRO5jwNJOkweRK/GDCNpPMBBOeZpLmYMI2kwwHE55m
kjSYuDUT0YMJTzNJGkzcmgl/MGGbibbBxLeZJA0mZSjBhKeZJA0mvs2EP5iU
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
Vg6e+2oYEzncV59hsonmjIm27msz/GAiE2Piir56ZBPRg4k4jIlxX2UMJrm6
BhPDmIjDmOC5r4YxQQ4mIFs5MgYTw5hI7r6qwJgY91XbYAKylRMumGSCMfHP
JoDBBIQxwXNfhWFMjPsqSTAh0/83M+2DxZjIGEyA3NdV2MGkAtd9BdnKMe6r
jMFEHMZERvd1FH4wUYEx0dZ9FYkxwQkmpfjBBJ0xCR5MlkoYTARkTGR0Xw1j
Ilcw2RYdkk0UdF9PogcTFRiTcO6rsoxJqocLZ9p9tTWTFpsnXpt3+8UNrs6K
Pv6z1iVXdGzSeO6AdkcWZYAxyYD72uno0uvzOlk/tV/UutS1mXQ4OL/J3Lyr
OjYlvwLWZXV73HrrliKOZhLcfQXayslEMOnw8MyGeV0vbVAn9utT+9I6HZu3
nF/Q/ZlyvGCyMXgwiTeT7o/f22b+iLqdWpKf1y9rX1q/Z/uuW0ucnSTn8RUt
ivPoldbDuvKOraWIjAleMPFsJjnbFt4ypPvlDa6N/3pedn2n1u0XjB303Eap
3df8Y1u6rSyu36nNRbUvIz+1a1rcZD3jH0wKjm+1LiPXtxk/ENB9BdnKUcx9
HX9i752Lpt7Q+Tb6b2jdlre0Gtp70M77vZoJWjAJwZj0KZ9HfnYX1758/FM7
7MGkT/n8LI9Hs9w7wbdyMua+znj+sdzFs27s0p7+dK5v2bRtfv+Ru9dKzZjk
rV7q9fvVqnd315tMZhypbl8w8KqG9cll1iuteudMObgrw4xJqGDylsTuq2FM
QLZylHFfXYNJdN5ns4lxX8VlTLR1X9EZk+DBBGQrJ1gwaXtk4RUdm3j9t/vi
Ble33lMsC2PidXtJyzXjf1HrUvqTcjaTtpWz7BfYHy3KRmrCmHgFk7ufvv+a
js29vkIubVCny975krqvd1Yt+mVt99/3dism2JvJXVWLfxn/+7LzStkZE5Bg
Mui5Ddd3au31dXJ5g2tz990rL2NSKx6CmEfTIT187jBpN2M4vbJ+52xVGRMR
3Nee5SUX177c68uvXeGQNG/lZMh9nXLygP2nmb/rAfvtJXfMHO/1K5Cd309Y
xsT/DpP+qxZdXLuW18+r84QR8jImObOmeP282hcMdG7l9Jgdu/6S2rVu7nK7
NZdEf2V6zp6qM2MiYzCp0DWYKMmYMMGETE02MYyJHoyJjO4r9FZOcPc1w8Ek
8FZO2yMLL2se+98W1+bd3nrPNLKSc+ujc24oyv3PWpdkRe88cZYT0YKJz00m
dXpkx77TaHANecWZTbK3TLXe22RuXrvK2SSMtCgbSUPK7QcXaMuY3P30/bWb
30B+HW7I69qlch6pIt0eW9a0eMAvos3BemkvJxK5r122llzWoE6b+SPurFpE
8ki7FRNoHsl5fAXNJl0jV9bNnj/yrqrFJI/Yr+z97JrEZiJNMIFiTAY9t+Hq
FjeSX41bhnTP3XcvubGk36EHsqfnk1+oi2pf1nv/vdIFE7KVY/3gW48fmLtj
KSkk1iv0NpLu6+eOdlvJyXtinfVR1tRqcF1WNJtkgDHBc18xGZOe5SXk9+KK
htdbrxee2EsKSb+HltCbT1oN7a0AY3L7hALr53JdyybxbFJhX8kh2cR6qYz7
2n/VIvIzvaphvQGrFs18/jFye8nQjSvpzSdt8/tLypj0iGYT6yWP+3rP0tgX
ufWKfStn6sFdM49Uh9/KwQsmhjFRgTGRMZjAbuXQYJKQTXQKJo3xg0kJtvtq
GJNQjEmIYLI8M+5rvTF3kv8Q31yW72RMWu8pJuXkio5N5GRMVt9Y1DfyHVfH
pm0rZ5HXXbOJK2PSomwkub7J3MGZDyYgWznh3debxvYivwjZ94513lLSZe98
Uk7qdGquDGPSbsWE2E95/gh/xoRe2WltsWiMSYbd1xbj7on9z9/7pjoZk977
7yW7Ldd3ai0FY8Ljvg56Yi35KUe3b1wYk8a9OlvvbTdjeP3O2fFsYtxXeMZk
5OGHyQ0YdVveQoOJfVoN7U1+pwbtLM/MVk64YOLJmIx8ZENWdDdn4IYyJpvM
9swmEruvU35dSe6muL5lUxpM7Fs5bfP7k1+HUbvXhQ8mmWdMbNkkifs640g1
+aUYsnq58IyJpsEEZCsnXDA5J6/7KjVj4mwmPtlEJsbEuK9YweRU8GAiDmOS
4WACzJi4Qa/Zj84m33I0LMr1cl9vKSsg17TcPClQMEFgTOzua7OyEa3WjCdh
xCubeNElXY4uJ9ffVNQ3PGMio/t6x69im9dNiwd46SXZK8aSazpunSV7MCHT
+9kK8jNqUZznT7/2fnZN7N+O4rx0BRN8xiS5+9rv0AOx0DQ934t+7bxyKrkm
Z/siwRkTtpl4u6/khpP6nds4xdfeO5ZZ76rV4Lphx7f6ZxMl3dd0MyZ28ZVU
kYtrX+7aTMjtJVc0vN665obOt0ntvjbu0i7yb9Di6fm7Kmg2sd9V4sgmuO5r
wK0cSr+SKnJJ7VqJzSSBMbmqYb3If6O7dBDJffVsJgz66ppNXM/KIes59Vo1
5wsmL2juvoJs5Rj3FS+YSMaYuI4zm2jLmGjrvorEmGjrvoZiTJhpPHcA+dbr
1kfneOkl7Y7EbpGtP+YuGkxumjvQeuaanDZMMMneMz32t6c905lgctPcQZc3
b0Dee0mDq6/P69ju0VJ7MLl1z4ysKMTqDCZkWebmuYOYYNJyzXi6gGNdY72e
vWWqz+HCzmzif0qOI5sIwZhkJpiQs3JazotFs26PLfPKJt2fKSfX3Dy2Fy0k
1/doaz3Tav4wpplYz2RF2VWmlvR4ZvXNY3Mvi3uzV7Ro1Lx4YM9nVtubSev5
ESaiXo92TCTptndh7Ae5dyETTNrMH3Fli0bkvdYnbzy4W/fH7016UA7NJi2L
8/wPyrm7ajG5stPa6elzXwVkTJiDctoviKWzfoce8HJf845tiv2qju9PU8kN
vTpaz3RYMI4JJtYzWdGlHmczuX3BOLoNVKvBtU2G5Aw4tMYeTPruX0k+1hlM
yB0vHReMZzpJ93WljXt1Ip/TusZ6PXf7Uv9mQm4vIZ/Qbr3SIUWlx/q5Y1/b
75VNDGOSUjB58rPC5/5S8NxfhpEpeWsfySbkVpPoDo7nWTntCoeS39/CE1Wk
kBRUryOxxRlMyCe8e1ERE0z6P7S0Se4d5PNY1zTJ7TZk5yommJCPHVH9ENNM
rIut55vmdmM6ychHNrTJ70u5kkZd2vUpn+faTMgdJte1bDLr3BGaTQo8s0k6
tnIyF0zIkPsr2ub393Ffu0wYQX4pZj3/OAkmhY9uI7HFGUnIJ+yzZDYTTAo2
lbfsfXfs+5PatazXx+x+iAkm5GMnHtzBpJKWvbtH/ljr3Z0JJpMO7mhfMPCS
uMpyc5fbB69eyhyUw2QT78OFX6jXKsKL3bO0NJPuq2FMjPsKtJWTejB5R+Jg
Ys3299hsEj6YgGzlaOy+lmIHE2TGBC+YyMqYOOfqnIjfeHnz+v4H5VwZBWOt
l7SQ3FDU2/4MvbGk1eZJ5DuEVpsn02DS4cgSGkysD7HmF9HFH+vlrXtm0DtM
2myOWWfOO0zI842L+tibCTkWJ/JXp+YNrurYlLolzcpGeB0ubM8mSU8Wtua2
LUXk+hZlI0UIJpnZyrEfLkzqxxUtbvA/KKdOp8h3dHU6taCRxHo98ntRPJC5
ycR6hvyS2pvJHXsXEJfVeml9IPnY6D+3UbScxG4yaV48yHqybqcWTDbpvHUO
ub7L1hIaTHKfeYAGk7qdWlpD/xGUMfGarltjK+SM9ep0X1sW58V+Os8+qA9j
4jxZ+IaekfpxdYsb/Q8XJmBsdE9nj/2ZW6cXMHeYWM+QX1h7MBlybDMNJvU6
takXP9TGetl3/0qaR3ptX0Kucd5kQp5vO32YvZk0HdKDPH9Ni5vqd2pD6VfX
U3Ls7iu5n8R65KyfyzSTO1dGAjLtJM5sImMwmYjtvn79w7U//5xFZ+m7W4te
P1RQHVuV6vfQEp/DhfN2xv47khff06HPOG8pif15MnOsvZm0HtqHPH9ty1sa
dW5Lbl+xHrnlc+13mJAnh+5cxdxh0qhL5M9S66W9mfQpnxv7s67h9Y26tLs2
LpZk5/d1Hi58ZfS2CrKVU5AkmxTKyJgwhwuPf/Th2C/mxpW0mTj1klG715HL
Ru1eT24yGb17PXnGmU3I891nTbbfYdKuIPb/j+q1bHZTlw70kJpBq5fYbzIh
T47Z/RCTTW7u0iErUkU6uB6RY322m7vcbn1m8mYUeq1hTGg28Q4mscOFyYcX
7tmkbTAB2crBc18NY6Km++oaTMjQbKIkY6Kt+9oMP5iowJhIF0zIkAN07G6J
q/t6Xd7tWdEjdVyzSedk2aROTpusSJxpQG8vuf3IkuvzIn/PuqTBNXQlJyGb
JK7kkOdJNiELOLfMjfx19Re1Lo3fXhK5w4Q8aT06HJzvn02SBhOyklM/r3Ps
h3S0TG331RlMSBWJ95DmvocLb7hhcOT/wF7aoI4zm/TxzSZ9X97Y85nV5CaT
RoO70dtL7n5s+RXR6GE9SfOIVzbpEq8cNdnklc31e0buZr+yRSN6e0nusw80
Hhz5H76XNajr00wGvPJw48Ex8IdCr67N5Nb5MfrGekUrxoRpJtbYeojfQTm3
DMnJih6pQ7dyErNJzT4OzSb2TZxGvWJxhtxeYs3QY1uaRD9nrQbXemUTeyEh
z9uzSccFkb9mXlT7sprbS87u67iwMPb3pifW+jQTEm0a9+psDyZjX9s/7PhW
8q7++1e5ZhPDmARzX12zyaCd98d+s2pOGXZxX0cf3kou61VeklI2ISs5dy+K
JPSLa19uv73k7kXTyJVjD29js8mu1cxWjjObEKgkK7J0U0y3cvJ3PUDuPOlT
Po8GE3pETtPcOwlj4pFNjt4xM/Kle2XDeo27tCOTnd+vX/l88RgTv2BCZuTu
WBAbuXudz1k5U3+9l1w2cNVi0kZ4sgm9k6TPksiq8iW1a9lvLyFPWo9pR/b7
ZBNye0k8m9xuv8+EXNx3yRx6b8m43RvInSeDVy9jsglJK2TaFwwcsnqZPZhY
U7gndqve1IO7uk0cXb9V7GA76xN2KBg0NXL6cEYZE+O+ahtMQLZywgUTdMYk
eTDZ/t4H1pBskgHGBM99NYyJcV8lZkxSCiakihDu9YaiXP+ThUkksR7ObMIY
Jq02TyZXkmzS5aX7yeqN9UhcyYmUE7J607JiHJtNHIwJef7Goj7ULSEf26xs
uJ0x6XZ69VUdm0Z+RmO6B84m1H1tXxm7h6HRmBzem0yQ3FeQrRwmmJAh3KsT
NmHcVxpDfLNJpJPYswkpJK2jazuXNajDMCb0HpJez6z2ySb3vLw5IZvEjxWO
fXscbyZkK6f3sxXkSJeOa4tdg4k1d8X3bpqM6+MMJg16tr+2U8trI/euRD7P
lS0aM+s5GQ4mmWdMmGBChvxq3Do93/9kYds9JLF7S2zZJIExuc2RTfrsv488
Q5sJqSJDj20hjeLudSVMNnGiJeR5ezYhHxu5sSRxJad+50jsbT1+oD2YRHHX
NvU7Z5OTcayX1jP2YEKmzfjIF6r1kt5bQrOJkoxJZtxXr2xy16KYmZP0ZGFy
WeeZY8mbgzmyCWVMSMogN5bYp1HnSAzpUJhPV3LIx9JsQiOJM5s0ja7ttMnv
y6zkkEJClnHIjH9qp/UDiOAtT+2c7Z5NYis5PRbH9mSZx5UN641+ZFM6GZPg
7qszmJDJXTyL/OCTHi4c+9N+1qRk2eRE/MqabEJSBrmxxL6VQ2JI14mjvLIJ
Xcm5uUvk/yvZswlZ24nfWMJKJvVaNqPZ5J4lJa6/X1c1rD/l4C7KmNBsQh5X
N6x/S5fbb4n+c7Oi8cS6QEbGJFwweUVe99UwJnIGE89mwgSTxGwivPt6Ej2Y
qMCYhHNfDWOC5L5yNBN7G/HKJoz76swmjVyyyf32bNJ682SSRxrHr3S6ryRx
RO4h8cwmsZUc8jzNJtlbYt8nOxkTem6O60E5NyXLJtR97Xq0rFbzhlnR+2Hs
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
y5ZNrOk6cRS5ctimcnswmXRwR/uCgdZLmk3Ildaj75I50btKniQHCpOHPZsM
37SaPGldYK8lM45U95g9Zcjq5aSZFO7ZdHXD+tab9MQc65Wes6eSDlO/VXM7
Y0LvKmndO2fWkUesZ6yXHQryyJP9l86VLpiAbOXgua+GMTHuq2cw2fHe76xJ
zCaiMybauq/N8IOJCoxJWt1XJptkhjHxOSin1eZJv4ieROzzuCanDS0n9pOF
mUfj+Bk3bWzZ5LY9M8gBN1nReEKOvKEfYr+xhJ4sbH/U7ZFNzgK2Z5POR5fR
T2J9cvvRPNbj1i1FNJU0mTvY5+dVP68zySZ1e9zq/yvQZs0EVd1XRzNhl3E6
bp1lLx6uj3o92vWI5hHmZGH7w/ok5C6ULFs2scZeVKJn6LSkMSQmmcRvLCF7
OsyjRXHsW0d7NrmrajE95sb6bNd2anmtzYml2aR+z/b+P69Oa6eTO0waeF/Z
oGcHIMZEaPfV/3Bha3psX3SR44Bm5tGoV8chieXEab1an4Ss5GQlZpO++1eS
A26yoqWCHKNDP8rOmNA9Hfujca9OJKfYs0nB8Yfrd459kloNrqvfOdsa+rPo
vWMZub3EZ/vG+pxDnljvf7JwA79sohJjEjyY+DaTJ8j4ZJPCE1Wth/bx/9q7
uPbl9zy01M6Y0JOF7Y8mud1ITqnJJueemnRyPzkKJyu6DWS9bg1dn7FJJpFO
4lyrua5lk6bRIBPNJjX7OLdPKKA/NnKMzpUN65Fnoi3FJZh4ZZOSc08P27XG
6+du/QCKn39UqGDi20xqGJNZpw61LRjg/zt7Se1aBZvK7TeW0JOF7Y+WvbuT
nGLPJnNOPXlzl1j9vqphfXKMDgkXWYmSScmpJ+nz9GF9wla9I/8Th2YTcnvJ
HRNH0x8bOUaHHM1jPXrMnspAr85H/VbN573wa4Yx6VDg8p8/63HnxDHGfTXB
BHErJ1wwQWdM4INJYjZJmTHBc18NY2LcVxEZE85skoFgYndfb5o70H7qzcUN
rr4ur2OrzZPpPSe/qHVJ46Letx9ZQldympYNo3eY1MnJJos5pF3ctmeGfSWn
49EljYv62G9Huapj04ZjujsZk+wtU+kdJrWaNyRrOHWjzzSZm8es5FjvtRcY
6/p6eZ3tzcSaphzZ5G7b6Tlej2zPbCIoYxIomHieldPjmVWt5g+zl5BLG9S5
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
7Y/OkPe+PmYr7+vTfVWrD7mIH5w1ZUfFMeI/g4bkexy9DUamcpaByVKiKzi6
pel8NfpYhxGNSexAk+OQh/zGDN9E53vX9HcYBSbBbLzkiqv0am1I3HGvce9r
2pDXeYj8xgzjOPN96QPdWjUmAmCCklwV0NqTxBMB4ytMMkf6Yg75iW/MME5M
vv+FoWGD3lc5YAKzvYu7H+WJ+JfUlKcueit4cKZ3UJPG5JWx8bgihkpMTGxB
YO/IGSPAhM9MYDZWc94bTUeVdRX9RryvByZmEooYKjE3cQWdeWPzZk7lEAYm
bW+9C5N2lNOfsotrdHGdUtLru/NTkzQmYmYiiU3UAxMpZnIQ5pGeUvDPiT4Y
iHAmxtGwXO6AuXKpCdOYhFxkUv5sQ+Pi8fDQUOrJC+mtdzLa7hLfoWEQsBnB
xgSbFGxYuIUdta3OmWrjwCQ2GKe3JUrj+aqzvUWn9/V8vbOxnfXEmp7E17nX
zRkCJjBr/B6tDUl2eYxM5aQveBObvawn1vQkpT7w/IK2RSYvSWVjoFtrTza4
u414X3ddHExr6WY9saYnGxp691+axA5MYHaf4ywW61+uVVOeHTu4NztePTWh
cirn4JWz6a0DrCfW9GRL49Bh0bITHcAE5uWeSa1HlZ2+CX1TOeXXr2xvG2M9
sawqO5rG4bITu2tM5JhJ+1vvHp68zC6uM3kX10tLTawAJmJsggWYoDxT3gT+
RWuOTxPfvASztoIbpXyutI1yjYkxYFKK2fs6Xb66mFux4Mj2syE+U5N28oIj
J/h+2SG3c7pGz1QOD5jAxIzXaz1fjRlu1KMxOV/vOOxmPbGyJ9GHvMGBHZ3A
BCZt0qW1Iamj+jUm6QvemMNe1hMrexJzyPf8Qq9uYAKz7Uyf1p5sHe/Tvcjk
5YuDcSUB1hMrexJXFNh38ZQRjYkYmKDEFnJLhn75J3+p3JyPPvsFDt3n+g9e
O6tGY3LwytnEki7WEyt7El/UWXx5XsdUjjh5M+e1HlUOnpnRoTEpv34lubSH
9cTiqiQWdVdfu6WOmZACJqE1JpLABCW9cphdXMOL6/Xlg6ZqTJSxiQFgImQm
3w7me/0l8IiR0f4O8S1MJJs73o0+yP0iP9F9nFpgQpP3dVH9+lxwnUlsYX96
61vEd2LYJ6Ptbtwh7o0zx8l2HcBEwExgHAVu9eerUbneuDk93le4zoT1xOKe
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
mk3EaRPZTAY3j72gYZDsJMJCyZeTo23r1/f+JtLQ8KRSSLznZTO5IHBF5rzy
6lNHj/1g0WLvde9jZDO5ta3de6Z9/QbxpvjLO9Y/H5tKor95icdtbR3pd+Wk
ZBOVMRkSHAgJnTaBcl9FNkk6bXJ67dmxX9rQ5vHp7mtsNhErOYte26MWkrHB
2s7Dz/8821ZO6GZhkU2eVyQT/2fs879Qm0lzwJWoj4Rs0nu5sJpNNuVtE1Uy
kcdLRDaJNWBjm0nSz5zxHQ/HHjKRZ0vy2WR77M3C3vO5mPWcLO5rdJ7e/bb4
QaYHk0TbZNxdScGkMJusjtVfd0SyycJNL7P76hpjkp5NmDEhxJiY774mnTa5
aEqjaCM3bPG/1xqy8ofizSvn+se/vzV6iDxk8q188Rg4d5KoJTkfSDldnjAZ
uvIh75nzRl8jDpZ8JViEuXHLY/JsifeMN/KQifjLY4PJgClNSb+tFHVfcyVl
E/+bpfNHD6uQ+5orPG2iBpOr5k1J+tJGb3083X09OZJNxErOd0dfF1rJyQV7
Ojrua1NcNhGfVq0oV04dLyLJ2G3+/99Ry4nIJv7Puqmt4oSJ917vTRlMmrf5
33jU1F0izpZ4r3hvjlo9TzYT8YwsJCJcxDaTW56dH/MPNHh470p3X0PZJIku
ER+WbSun6OXCIpvEBpM7dqxO+tJu6JyZ7r7ms8lzM+IKiTpibQfEfRXZ5JIx
N6mMiffMufWXy2bi/QCunj5RdJJ7XvSPigXlpPdgicgm3uPSMTeLQiLWfCa9
uE42k5wfQ84UhcT7MP9nzoJZspmIAyHykIkIF7G1pHXN40n/eCesWZbuvsZm
kyhj4v3dQ6dN9N1XuZUjsklsMJm2c3PSl9a48JF09zWaTaKFRMy3g7UdKPdV
ZhN5tuT6GZNzvdmkN5V4r6tfy6R1z8hU0vGS/3+Qb5gxZdK6lX3/mcyYEuok
A5tGR/+ZyEIy86Ut6vP3da+GYkxOra3Jr+TAMyY3PzDtu4Pqlxw+ILLJBJFN
gBiThtRsko0xib0opzCbHLmlrc37+3ovk7Zy7gpOnty1aJFYxhHZ5IKGBhlJ
5rzi/+JzVXOz+uatbe2yk3gffFptrXh97iuvqu+VbcT7GO2LcgruyonNJlH3
Nedv9JxdlvuaspUTYkxEGNG+XDjefVWzSXfPRxc1XJWLHCwR2eT+xcs1g4kY
kThkNln62m9ygUwiD5mI6PHIxhc2Fjlt0ne5cPS0ST9lFUhdyRHZJLSko8mY
xF6UE80mMo/IkySAjIk64pM/vftt/a2c7THz146l/rc6oWySLyQF+qtoKaQZ
E4ruq5nNRGYTcsFkuKvBxEDGJBZ6DWWTxn3P9n7/nLyS85X+p3kjd3BENpHN
xJuLp/g71ENXPiQ6iThJIvdxREWpm3evaCYDgg++aUuXjCR1wUKN9zIDYxLb
TEQSyaVmE1FFLp3in/ttmDdZJ5gkNZPBQRi5bGpzNsYk5aKcaDYZsdo/Nh89
WJILtBOdi3Ki2UTYJjevnpO0lSNOlYzd9oRYyRHZRDaTe975xbD5M7xnvJci
mwwMPqBl25Mim7Rs87/xGDh1gmgmw+b7GOAtz86TkcR73f+AaROybeUk3Y8j
s0kK93rbs53e3/rCxhvAg4k3d+zw/yfL2fWXZnBfU+/K6T1YIg0TMbmgUcRm
kx/sWKN/Uc7dfdmkN5KI6NGyZknSVo44eXLPi+vUbCKbiTfj1viLb0OmTxRb
OSMX+PLz+DVLZScRHy9eH9X73sdDbeSa6XdncF9TLsoJZZNY9/X2Nf4fIi5v
GlUuY1I0mARhxD+Kdl79FdkYk5S7ctRsIguJ90xSNnlg589A3FeRTdSVHHHa
pP2lF0QzuX7GZO/HIDvJ+cHHy3LSkS8ep9b0F4Xkhhn+r8bNj82VzUT8JQ++
tGXhe2+1POb/klLXNFo2E/GM91KcMBkRnA8Z1zUvtpOcWts/ml/8Tzi2MdpM
HnrZX/S78YGplXZfJ8hskhxMxOmR6OMbtTWx7mtKNoEKJjKbhH5I6YyJ2Mq5
pa1NzSa3trWpKzm5vpByrC1YwPnBosWx2UQcPmlfv0FtI+IDynJfU4JJbDaJ
vShHHDW5Z/FSfcYk6r6KoybeS41gEn+5sJpNJGOSkk0m92aTMhiTUDARnaQg
mwTHS0QnEXflCN9V3cGJZJM3c4U344SyiTheIq7RSbocZ0DDEEDGJIK++ls5
rR2zc0o2UU+ViP9e8rfnQAYTycB2bnwRhDEJBRMx0Wyy44O/Ltzkf8cyYtxd
KmPi/3Y/eKh2MPkS231FZkwsCCbFsklVGRN2XykGk5TLha+M3KQjz5kkMSZi
GSeUTUZsWSi3cuqCEyl1c+8VncT7+ODwSa9hMnRVQTYR71XPlty0xf//RAOm
NOkHE5UxySVkExlGxFGTk/qfntxMMgYTedTEe2QKJuFmEt3HUbKJv5KTlk1q
+pUbTFTGpClyk444Z5LCmIhOMnL13HuUbBK82Xu8xHs9F4QU0UkuaLzee1My
Jmo2uffdF74XvDe0kuM94z0PFUzUbJJ+S4446DJh+0p9xiQ64qhJ43OPAQYT
MaVkE5FHYrJJ+cFEbOXcHblJRz1nEsuYiGWccWuWCMNkZJBNvJcym0wKTqQE
IcVnTMQCzr0vdsdlk92XjhmZi5wt8T+gaWS2rZwkukTNJkkX5YiDLpN3bixj
K6eEYKIeNblr7ROAwaQwm/xMLSS5ItlE96KcaDYRtsmVTbclbeVMCk6e3DBj
stjKEdlENhMx3jPnDxooXn8w+IARM6bITuK9y/t4+WYuqCihNuKNziETcbxk
crf/h4LxXZ2n1tbI/zSCwycZGZOku3JSsknmi3IaIpllevda/WCyInKzcP60
SZ9hMrh5bIr7KjqJyCZPFckmvvsaOk/izWm1tTKbiA2d6COUTUphTJKCSTSb
xDaTe/qu0YkJJgsKrxKOPsa0P5gUTLx5aMNPcwHHChtM1Gxy/+LlKmNSLJtk
DCYbFPG1N5soKznirhwZRsRBEfVsifLeT4tmE3HaJPRQj5eIG4e9lzKYXNdy
uzeZGZPYi3JkNglxr2cEX13wfNnua9Fmcslg/5v/tqWroIPJX9SDJWo2iZ4t
kSs5QjtZ9foBdl+dcl/LzCZI7ivEVo5eMFmRPZhYwZiABJPC0yaTVMPkhi0L
Uu7Kic0mN25ZKLdy6ubem1OyiTxtIjpJ3bzgvX428SOJ2NmJPiLZJHswScom
oTYirtEZvmp27CGT0FXC0UdKMPHmrLqLvY+5at4UzWASbSZKNuljTG5MzSbZ
gknsaZN/C06SDJ0/PcV9LTGbDMxnk/xpk6fE8ZJRq4PDJFPFYZIXaoMNnehD
zSZFGZP0YFJiNpHX6MSmkuGFVwlHH43PLUy5WVi5RicLY5LSTB4olk3UUyXh
bJIpmHT0ZhM/ccjTJuIkyc0LHkpxX2U2mZmYTfz/riPnSXpPm9zb+96RYitH
bOhEH0o20Q0majZJuVz48uAanWHTJ8UGk9sKrxKOPu5cuyLlZuFrZ/i/wH6/
6ZZsjEn6lJJNxEpOPpv8PNpMygomopNEb9KR50xiAROxlTOwabRgTEQV8d5U
s8mpNf1lSLl3nX+ySxwmiWYT8d7Q2ZK6sf5Gj04wESs547s6xVf00MvbRSqZ
3O2f+Ty1tqZcxiT9cuHYbFJ6MCnlcmHhjYxqmwEYTMRWTm82yZ8wGdzsnwtt
W9+t1hKxuaM+bsl3krhsciwXZBP1eEkuD8CK4yXy8MltQTaZ98prJbqvSf/l
jm7vSL8iR2STmRs2xl4uPHODf4rstNqzoRgTdR579VfiB5neTFJsk5Rm4s39
fdmkr5CE9FexkiOyyeznf6EZTCLZpM99zRXeKax+IaKctHTMEls5y4plE3Ge
ZFzHrNBijvrMoxu3qn+LaDPJsJUjasnw4HKc6OMXCgMbfZxRe45mMPGmM2Bg
Yx+aWznqGk70sarPM/mbKCe9X9TZ5zJj4qD7Wk42AdvKYfcVL5hUlTGJjrRK
ZDYRkkm/gd8LBZPor10ym5zXl01613BC2URs5QyYMqZQMlkrs4lqwKa7r8Vs
k/hgEptNQs3Ee1eucD1HkzFR5zvBpTaXTW1OaSZXp9kmy5KCSSibyDwSo78G
J0xyweGQbMEkmk3E8RIhk4RSSU2wuaM+krLJpHd+Maowm4jjJRKADUkmtXWX
KAZskZWcFNtEuK8pF+WkZ5P64JLiCxtH6Luv0bmh88Gcv55zWcohkzt3xPxX
KR4jOmcmBZMHkrOJsE1Cyzh9tkn5h0w6+sbvJKFsIiQT75lQMBGbO+ojIZv4
x0tC2UQcL5EArDhecu+L60UV8Z5PNmDDwWTCmmVJ/3i9d5WcTWJuyRk6XdwO
PEqTMYl1S0Yv9L/VVNZzYoLJ9GTbZMzCn6Q0kzmHfhubTaRtojImIptkYExC
wUTNJqph4j2T4r52FHaSlGyiuiXqaRP1veO65iX9Eys3mHRFLsoR2eTGB6ap
Wzn1YxtzPhL7bCiYqCdSog9hmCRdLhzKJrDBRIaRbwQ/Qv2tHBlMxMhsIgrJ
o6/4l3CpBqyIHm3r18du5USyybFQNhGnTU5TVoFEMxFVRGSTWAA2M2MSO419
2SR8RU7nq6+LH5g+YxLrlvT+fH71VyUeMinlhInKmMRmE6m/qozJsKClZGBM
wjcLJ9yVU2w+VRmTlIm9TVhMv9pzxGJOJRiT2Itykgd4K6e8i3IyBZPo7AhP
2RflMGNiq/taWjYxlDFx1n0dSTCYyMuFQ9mkMX8zzpCVPxTB5JqV/u9rZwy8
UHYS9bRJU182eSw2m4hbctQjJaGVHFlRMlyUU/SESWw2ie7giJMkl04Zq8GY
xAcTby6b6pP73xl9LQhjEjebRTaJHizp1V/zjIm4BOeKqeOyBZNQNpFbOUMD
meTKqa2ymYh/0fJO4VAnUd+cFM4mfbfknBzsv4iHuo9T21dRslyUkz5J1mvo
cuHhnf530WfXXQrFmKgX5TQ+51875f2tS9zKKfGEyQOp2aSgkCjztZozvec1
g0lsNnnwwCs3L/CDat6A9Y+XiH/d8mbhIYmnTXovF7437rSJepPOfTvXyzYi
TpvAMiax7ms+m8Q0k1sX+kepv1V/BYj7Gpq71vqHz79ec1ZZWzlFT5iojEls
NskXkgL39es1/b3ns23lzI+Mmk2EZJLzZZI5aippDjZ31Efp2UQcL8nlAVgp
mYgYIrJJugEbIl4jScN/1I9tjLqv4myJyCbyYMlND0zL+bfedGZjTGIvylGz
SfrNONHHN2prSrwoRxw4+fGul6CCiThhIrKJerbkggb/bxTcleN3kpy/ttMs
Xo92EuXNY2KeLswm4niJuFNYdV/FzHvF77FXNzcDMiaxF+Xks0nMzcLiX8SC
V18HcV9j78cRt+fouK+xwaQ7OZs8/Lz/3cKw5laVMfGeuajh6gyMSdWCicqY
DGgY0q/2nFjPpALBJNxMqhxMSmkmOoxJCcEk3EwoBpNd+MHENsYkNZuYGEyY
MTGHMSk9mCRlkyFBJ8nfldPruwq6RM0m8nLhxGyS10u+0v9072PkRTmhEQdI
hq36ESBjkpJNos1EMLDi9hx99zV0s7C4H+esuosrFEzExGYTIbWO2bZcMiZX
TPUpuZtWP5otmKjZ5ILebNLXSeRdOTcHDSTwXdOyyajVcyeFs8kEebzEm7g7
hf25ttMnYa/tbANkTGLvyolmE4G+jg4YWO9d0MFkh3o/DhRj8kDchLKJKCRX
TfPPu97Y+UPZTMau8e/jvmr6XZrBJJRN1OMlOeWuHOG73qzs4CRkk1kz82dL
QtnEe+WUmrPkRTmhGbXQjyreS0DGJO6unF99K6BFos3kjoCB9X6EIO5r5H6c
TeJnDhRjEgomKdlk+Awf8W5a+KhsJnevfdp7ZviM+/WDiegkajYRkSQXWCWy
mQwMhNjmx+Z2xnWSaDYJnSeZmcdPZChQV3JENkkCYMvdygnNQy9vF0VlcSSb
TO5+rqytnPSbhUU2ub1rIdQJk1j3NZRNMm3lFASTJ/IXCoeyibgrR6KvwoxV
r8WJyybtT+WryNNxp01Cj4mLFstCcnVw47B8ZuXRnu81NNzW1q4fTBTG5IPG
9gdjs8lpQdb44YZNIO5raC5sGOx98nsXL4NiTELBRBSS2GyyvueP4myJXMm5
KPBaF7/2RuatnKoFE/W0ibqSM6DB/z+Pj27cCu6+ltxMymZM8IJJYjMpGkzi
mgkzJo4yJinZpNqMiavBBGQrRyuYVIAxCQWTpGwyJi+ciEgyMPiAi6eMUSWT
fDbpo0tSssl5+b9EPtQDJ81v9UKRspncvMX/w5r3EiqYiBMmsdmkYd5k+Xy4
mWgEE9FMbljtGwUn9e8H4r7GBhNRSGKyiX+2xP8uRa7k3LT60Zx/SuQ6nWZy
9zs/G9uXTcJ35dy8eq73enNw43BN3QDRTMQtOWo2GRiTTeap2UScNgk91K0c
AbGO2/60DCa5vguFAYJJys3CE7b3XmAK5b6GLhcWn/zOHav1GZPYYBLKJtGz
JTllJScXNI0MjEm0mSRlk0uCO4IF+ipuHD63/nI1kuT6sknvRTnqhcKxp01C
D/XAiYBYg2d6g0ku4ULhTMGkdysnmk1mH/zVlJ0bxY+n/EMmRYKJGPHJp+3c
XKFgEptN5FbO14PgILNJLtBOsjEmoWCiZhP1bInoJPKunFNr+p/vr+3si+0k
6puxazjieMnM4Bqd2DCS8/3YOthgIufU2ppCyWT/dwbV+394zMCYJN8sfHvX
wlxp2SRbMBHj/y4zaJAOYxIKJk8mZBNxwiR48qg8cCIf+QuF29SLclTx9emI
bSI+QHaSicH5k9siz8jHbW0dUMFkSHNL9Bcu7yHc10kBAxt9BMhJFsYkysDG
PkCCiVjDiT6CMFKwlSMep9eeXd1gUvZWTnQE+qo+ygkmZbivlQgmwFs5aMEE
gjHRCCYgWzkcTKqfTZgxMZgxKTuYgDMmsaNmE+m+ihMm8k5h8aZ4nDf6GvGm
jCShbFKIvq6R50lCizk5pZN4I06wyEcJzaSkYDIqKDDRh9zHOSkBpB08b7JO
MBEjGNjo4/KpLRqHTPqCSewn9z2Twq0c+bhm/jSdYHJ3bzbxq0gom4gTJt6T
IpUI4lU8Tq45Q7w5Mt9JCrNJAfoq7soR50nGbX8qtJgjOokYcZ+OfGRuJtFa
EvtPNbhi2G8jFzaOiP2AixpHZGNMVPF10LQ7Yz/5OfWXaW7lqLcJhx4hz+Rr
yobLgDE3gQQTsZJzTzib9J0wuWTMzQ8qFwqLxyk1Z4o3x61ZKlZyRqVlE/+E
yfjgQuFW5YrhS5tGxj4jHynNpNxgIppM6CH3cQQDG314z2sGE8nARh/n1V+Z
IZhEm4lYwwk9/DBSuJUj33VF062ZGZNoM5mfv1A4elfOwKbbBPoqrw+Wt+Tk
ItlEvVA49rRJ6KEeLxE3DnsvFRK2MfZC4bKCiegkrV2d3ie/6YFpopmIoybB
m2W7r0k3C3tTYjYpPZhM7/b/i1abiYBNfrzrpezB5Eg4mMRelBOapxKnbyUn
fa4KDpOEdnBOq629oKGhQoxJ7EU56lTCfY0dcMZEnjCJHZUxKfmunLIZk+oE
E3VMY0yqHUyMYUycdV9dZkwyZBNmTKqzlUPRfU1pJrEX5SSNvCgnacTZksLp
u01YzSb18/xD3YWLOZCMSZL7mnyzMID7qgYT2ItyYk+YxE8+mGS+KCe1mcRf
lHN3fhmncH6hzqSYeSE0kduE+54RsqtczAFnTJJmSt9kdF/TGZPQVIIxiU7o
hEnBaLuvSc0k9qIcOTPT5jW5kpMwu+VWzik1Z32z/vvqYs59O/1jZtdMv7us
lZzSGZMk91UeMtF0X0tpJoAX5SQdMlFHdV9Lvlw4ezARWznRbCJOmARP9lkl
snjcu26l96bMJjOLZRNxxbBaRcRijvrMfd2r1aii2UxCt+SIciIfP3p5hw5j
os7ItumxSW32rp2Zg0loJUc+vDf1GZPUZlJ6MDlaYjARjMkFDQ2h24S9yQXH
UaofTOKaCRhjUvlgkthMqhNMKuG+YgQTGxgTvWBiA2NC0X21o5mkZBM8xsSt
YGIBY6IdTBKbSWwwETN0lX/Svm7efepWTqFnUjZjUuVgUiJjkh5MoBgTpGCS
2EyKBpO4ZpIYTLwZt92/RmfgtAnqVs61nW0ym7gZTDIzJqU2E1ODSWoz2R1i
THIFtwn70xqcPwmyCW4wgWRMygkmuls52sGkbMYkFEwSZp+YBSWMmkpiJ+k2
4VNr+4cWc8q5KKfUYBK9WRgqmABelJOylQPovpZ1yKRoMCmlmYToEnUlR1zN
07H+eexgAsmYlB5MdBiT1GZSejAxyH3NHExMYkycdV+/xHZfkbdyHAwmKdmE
3Vc3g4nOVk5cM6lIMBEjTpvkgiUdcbBkWBBSzhh4YSXc11KCyXj8YJKdMQEJ
JmVt5YAGk3AziUVfe0/I51dyvFdyAcFaCfc1QzCBYkzoBpP2LMEk3Ez0gslr
se6rWJNRV3LEz6VKuK+Zg8lsgsEkrZlUO5jshQ0mYs4fVHdqbf90zwSEMdEI
JmUwJqYFkxLdV5RgIkfcMqw+ih4yyeS+Im/l4AWTxGZSZcYEL5jYwJiw+0oo
mLjDmJSSTUxjTPSCyYrswcQKxgQvmCQ2k6LBJK6ZxFyUIyb03ciAKU3YwQR2
Kyd7MAHZyqlyMIlrJmUHk6RmIk6YfFW5fVjs7KQ3E7RgkpUxSWgmZbuvIFs5
mYJJGmOiccik1GASe1eOvGVYPoKdHdhgkthMyggmGowJ7FaOVjA5VHYwSXdf
SwwmpTSTosEkRL+K0ybqSs75g+py+UuHKxNMws0EkDGBaiaVCSaJ7mt1GJPY
ZpJws3Aph0zIBBPYrRy0YNKD477GNZPswYQZEzT31QrGhINJWdnEtGDC7qs5
jAleMElsJs0xw4yJoYxJpmCixZhEg0loqs6YYAUTGxgT3GBSOPQYkyoHEwMZ
E5RgEkJf1UeZWzluBZPKb+VUijGBCyamMCZ47iszJsjBBGQrh6L7yowJu68l
ZhN2X6u7lUMmmJjAmFgQTFohggkIY4LnvlaPMUlvJuy+Egom1WdMbAomsFs5
eMGEBmNS4jjLmFAMJtm2cpKbCZlgAr2VgxVMbGBMnHVfTWJMcILJLvxg4jpj
ki2bMGNiJWNCMZjENRMcxoTdV7xgUhJjUv4hk6oyJnrBxAbGJFMwgWVMSg8m
ZTST6jAmFN3XOc4HE5CtHL1gsp+u+0qCMclwyCQTY8LuKxZj4qz7+gV2MGHG
hBkTUyYlm5SxleNqMAHZytEKJviMSfZgUhZjUvSQCRpjohFMQBgTiu5rFRgT
M4OJSe7rTmz3FXkrBy+YmMKYUHRfzWFMqhxM2H01hzHBCybGMCauuq8gWznO
uq9b8YMJBGOiEUxAtnI4mBiYTZgxIeS+2sKYZA8mIFs5eO4rMyY2MCbOuq9t
BIMJ7FYOxWDCjEklGJMqBhPLGJPyg8kRO9xXgK0ciu7rOohgAsKY4LmvpjAm
FN1XEMbEWfeVGRPwbIIdTGxgTCi6r9BbOey+uhVMJuIHE2ZMXGdMnHVfgbZy
CAcTkK2cKgcTZkzMYUwoBhNzGBN2X/GCiQ2MiV4wsYExoei+utlMQtmkMoyJ
W8GEGRNzGBM895UZE2T3FWQrh2IwsYUxwXJfd2MHExsYE3ZfnQ0mIFs5esEE
nTHBCibMmBB2X01iTJx1X7/Edl+Rt3I4mJSVTdh9tTKYmMOYUHRfx+MHExsY
E2fdV5MYE5xg0o7vvqIzJtmDyWyCwQSWMdELJnvpuq/MmNAMJqa4ryBbOXjB
xBTGBC+Y2MCYsPtKKJgwYwKeTQC3cvSCyYrswcQKxgQvmJjCmKC5rzBbOdmD
CchWjsPu6xbkYGIFY0LRfWXGBGQrRyuYHCLsvjJjArKVQ9F9hd7KIei+Qmzl
oAWTHmT3dTN+MLGBMUFzX61gTDiYVD+bsPtqJWOCF0yYMbGBMXHWfZ2MH0xs
YEwoBhNzGBN2XykGky5XgwkzJuYwJnjuKzMmyO4ryFYORffVFsaE3VeDJimb
sPtazlYOmWBiIGNCMZi0QgQTEMYEz301hTFh95VQMDGJMaEXTGC3cvCCCTMm
NjAmFIOJLYwJjvu6Fj+Y2MCYOOu+msSY4ASTXfjuKzMmFckmzJhQZEwoBhNz
GBN2X/GCiQ2MiV4wsYExyRRMYBmTst1XcxgTiu7rHOeDCchWjl4w2U/XfWXG
BIQxcdZ9BWJMnHVfv8AOJsyYMGNCdULZxPFgArKVoxVM8BmT7MHEEsaE3Vfa
jImz7utObPcVeSsHL5iYwphQdF/NYUzYfcULJsiMCV4wMYYxcdV9BdnKcdZ9
3YofTCAYE41gArKVw8GE1shswoyJIe6rLYxJ9mACspWD574yY2IDY+Ks+9pG
MJiw+8qMiTmMibPu63KdYHLEDvcVYCuHovu6DiKYgDAmeO6rKYwJRfcVhDFx
1n0FYkw4mJSXTZgxsc99hd7KYffVrWAyET+YMGPiOmPirPsKtJVDOJiAbOXg
ua/MmLD7SpgxYfcVL5jYwJjoBRMbGJNMwQSWMSnbfeVmUl42KWMrx61gYhJj
Qth9BWFM8NxXZkyQ3VeQrRyKwcQWxgTLfd2NHUxsYEzYfXU2mIBs5egFE3TG
BCuYMGNC2H01iTFx1n39Ett9Rd7K4WCCmE2sZExIBRPjGBOK7ut4/GBiA2Pi
rPtqEmOCE0za8d1XdMYkezCZTTCYwDImesFkL133lRkTmsHEFPcVZCsHL5iY
wpjgBRMbGBN2XwkFE97KQcwmFQ4mK7IHEysYE7xgYgpjgua+wmzlZA8mIFs5
DruvW5CDCTZjohVM9hN2X5kxAdnK0Qomhwi7r8yYgGzlUHRfobdyCLqvEFs5
aMGkB9l93YwfTGxgTNDcVysYEw4mJkxSNmH3lRBjghdMmDGxgTFx1n2djB9M
bGBMKAYTcxgTdl8pBpMuV4MJMybmMCZ47iszJsjuK8hWDkX31RbGBMt9/ScH
k0pkE2fd15EEgwm7r9CMSfZgAsKY4LmvpjAm7L4SCiYmMSb0ggnsVg5eMGHG
xAbGhGIwsYUxwXFf1+IHExsYE2fdV5MYE5xgsgvffWXGBD+bMGNiCGPirPsK
spXD7iteMLGBMdELJjYwJpmCCSxjUrb7ag5jQtF9neN8MAHZytELJvvpuq/M
mIAwJs66r0CMibPu6xfYwYQZE2ZMXBmZTawMJiBbOVrBBJ8xyR5MLGFM2H2l
zZg4675CMCZI7ivIVg5eMDGFMaHovprDmLD7ihdMkBkTvGBiDGPiqvsKspXj
rPu6FT+YQDAmGsEEZCuHg4ndI7JJFRgTZ91XWxiT7MEEZCsHz31lxsQGxoSi
+wq9lcPuK5lgYg5johdMbGBMnHVfl+sEkyN2uK8AWzkU3dd1EMEEhDHBc19N
YUwouq8gjImz7isQY8LBpNLZxC3GhKL7yowJBxOgrRysYMKMieuMibPuK9BW
DmH3FWQrB899ZcaE3VfCjAm7r3jBxAbGRC+Y2MCYZAomsIxJ2e4rN5PqZxMr
g4lJjAlWMDGFMcFzX5kxYfcVJ5jYwphgua+7sYOJDYwJu6/OBhOQrRy9YILO
mGAFExsYE2fdV5MYE2fd1y+x3VfkrRwOJoZMbDahyJiQCibGMSYU3dfx+MHE
BsbEWffVJMYEJ5iAMCbOuq+zCQYTWMZEL5jspeu+MmNCM5iY4r6CbOXgua+m
MCZ4wcQGxoTdV0LBhLdyjJpQNtELJq4zJnjBxBTGBM19hdnKyR5MQLZyHHZf
tyAHE2zGRCuY7NcJJsyY2MCYaAUTGMYEx31lxgRkK4ei+wq9lUPQfYXYykEL
Jj3I7utm/GBiA2OC5r5awZhwMKE4ajbRDyawWzl4wQSZMcELJsyY2MCYOOu+
TsYPJjYwJhSDiTmMCUX3FZYxoRhMulwNJiYxJoTdVxDGBM99ZcYE2X0F2cqh
6L7awphgua//5GCClU1sZ0zIBBN2X6EZk+zBBIQxwXNfmTFh95U0Y0IvmMBu
5eAFE2ZMbGBMSAUTyxgTHPd1LX4wsYExcdZ9NYkxwQkmu/DdV2ZMCExcNmHG
BJ4xcdZ9BdnKYfcVL5jYwJjoBRMbGJNMwcQGxsRZ93WO88EEZCtHL5jsp+u+
MmMCwphQdF+7IYIJEGPirPv6BXYwQWZMnHVfeSvH/CnMJqYHE5CtHGfdV0sY
E3ZfaTMmzrqvEIwJkvsKspWD576awphQdF/NYUzYfcULJsiMCV4wMYYxcdV9
BdnKcdZ93YofTCAYE41gArKVw8GEJy6bsPvqGmOSPZiAbOXgua/MmNjAmFB0
X6G3cth9JRNMzGFM9IKJDYyJs+7rcp1gcoTdV8Lu6zqIYALCmOC5r6YwJhTd
VxDGxFn3FYgx4WBiykSzCUXGhKL7yowJBxOgrRysYMKMieuMibPuK9BWDmH3
FWQrB899ZcYEmTFx1n0F2cph9xUvmNjAmOgFExsYk0zBBJYxKdt95WZiyKjZ
hGIwMWkrByuYmMKY4LmvzJiw+4oTTGxhTLDc193YwcQGxoTdV2eDCchWjl4w
QWdMsIKJDYyJs+6rSYyJs+4rOmOSPZiAbOVwMCE6MpuYxpiQCiaQWzkUgwn0
Vg5WMLGBMXHWfTWJMcEJJiCMCUX3dRZEMJlNMJjAMiZ6wWQvXfcVhDGhGEzY
fQVxX0G2cvDcV1MYE7xgYgNjQtF9hWVM2H3lqc6IbMKMSWwzwXNfTWFM0NxX
mK2c7MEEZCvHYfd1C3IwwWZMtILJfp1gwoyJDYyJVjCBYUxw3FdmTEC2cii6
r8yYgGzloAWTHmT3dTN+MLGBMUFzX61gTDiYuDDJ2QR+KwcvmCAzJnjBhBkT
GxgTZ93XyfjBBJ0xcTSYmMOYUHRfYRkTisGky9VgYhJjghVMTGFM8NxXZkzY
fcVxX21hTLDc139yMDF/4rKJ+YwJmWDC7is0Y5I9mIAwJnjuKzMm7L6SZkzo
BRPYrRy8YMKMiQ2MCalgYhljguO+rsUPJjYwJs66ryYxJjjBBIQxYfeVJzSF
2YQZk1KbibPuK8hWDruveMHEBsZEL5jYwJhkCiY2MCbOuq9znA8mIFs5esGE
GRPXGROK7ms3RDABYkycdV+/wA4myIwJXjBhxoQHePLZBCeYgGzlUHRfGyGC
iSWMCbuvSIwJxWBikvsKwZggua8gWzl47qspjAlF99UcxoSi+7rEkmCCzJjg
BRNjGBNX3VeQrRxn3det+MEEgjHRCCYgWzkcTHh0RmYTZ91XWxiT7MEEZCsH
z31lxsQGxoSi+8qMibPBxBzGRC+Y2MCYOOu+LtcJJkfYfSXsvq6DCCYgjAme
+8qMCTJj4qz7CrSVw8GE6ohsYhpjQtF9ZcaEgwnQVg5WMGHGxHXGxFn3FWgr
h91XLPeVGRNkxsRZ9xVkK4fdV7xgYgNjohdMbGBMMgUTZkx4skzRbILnvqJv
5WAFE1MYEzz3lRkTdl9xgoktjAmW+7obO5jYwJiw++psMAHZymH3NVMwsYEx
cdZ9NYkxcdZ9RWdMsgcTkK0cDiaOTHo2cTWYQG7lUAwm0Fs5WMHEBsbEWffV
JMYEJ5iAMCYU3ddZEMFkNsFgAsuY6AWTvXTdVxDGhGIwYfcVxH0F2crBc19N
YUzwgokNjAlF9xWWMWH3lcfMScomVjImeO6rKYwJmvsKs5WTPZiAbOVQdF9h
GRO0YILNmGgFk/06wYQZExsYE61gAsOY4LivzJiAbOVQdF+ZMQHZykELJj3I
7utm/GBiA2OC5r5awZhwMOGJTjSbUAgmyIwJXjBhxsQGxsRZ93UyfjBBZ0wc
DSbmMCYU3VdmTLpcDSYmbeVgBRNTGBM895UZE3ZfcdxXWxgTLPf1nxxM7Bs1
m+AxJmSCCbuv0IxJ9mACwpjgua/MmLD7SpoxoRdMYLdy8IIJMyY2MCakggnk
Vg7FYAK9lYMVTGxgTJx1X01iTHCCCQhjwu4rj+bIbOI4Y+Ks+wqylcPuK14w
sYExYfc1UzCxgTFx1n2d43wwAdnK0QsmzJi4zphQdF+7IYIJEGPirPv6BXYw
QWZM8IIJMyY8yCOyCVQwAdnKoei+NkIEE0sYE3ZfkRgTisHEJPcVgjFBcl9B
tnLw3FcIxkQrmOyh676aw5hQdF+XWBJMkBkTvGBiDGPiqvsKspXjrPu6FT+Y
QDAmHEw4mLg04WxiHGNStvtqC2OSPZiAbOXgua/MmNjAmFB0X5kxIRlMjHFf
QbZy9IKJDYyJs+7rcp1gcoTdV8Lu6zqIYALCmOC5r8yYIDMmzrqvQFs5HExc
mb5sYlwwYcbEBsbE2WAyET+YMGPiOmPirPsKtJXD7iuW+8qMCTJj4qz7CrKV
w+4rXjCxgTHRCyY2MCaZggkzJjzVmN5s4gRjghVMTGFM8NxXZkzYfWXGhKL7
uhs7mNjAmLD76mwwAdnKoei+PoMfTGxgTJx1X0EYE4rBxCT3FZ0xyR5MQLZy
OJjwxE5SNrErmEBu5VAMJtBbOVjBxAbGxFn31STGBCeYgDAmFN3XWRDBBIgx
wXJfARgTvWCyl677CsKYUAwm7L6CuK8gWzl47qspjAleMLGBMaHovjJjwsGE
JzrRbEKIMcFzX01hTNDcV5itnOzBBGQrh6L7CsuYoAUTbMZEK5js1wkmzJjY
wJhoBRMYxgTHfWXGxFn3lRkTkK0ctGDSg+y+bsYPJjYwJmjuqxWMCQcTHv1R
swmhYGKL+8qMiQ2MibPu62T8YILOmDgaTMxhTCi6r8yYdBEMJtYxJljBxBTG
BM99ZcaE3Vcc99UWxgTLff0nBxMemU1At3LYfXUrmLTiB5NN2O4rMybsvpJm
TOgFE9itHLxgwoyJDYwJqWACuZVDMZhAb+VgBRMbGBNn3VeTGBOcYALCmLD7
ylPlEdnEPsbEWfcVZCuH3Ve8YGIDY8Lua6ZgYgNj4qz7Osf5YAKylaMXTJgx
cZ0xoei+dkMEEyDGhJ77CsuY4AUTZMYEL5gwY8JDbIpmE3LBBHorJ3swsYQx
YfcViTGhGExMcl8hGBMk9xVkKwfPfYVgTLSCyR667qs5jAlF93WJJcEEmTHB
CybGMCauuq8gWznOuq9b8YMJBGPCwYSDCU/ypGQTZkwMCSYgWzl47iszJjYw
JhTdV2ZMSAYTY9xXkK0cvWBiA2NC0X2F3sopP5gcYfeVsPu6Dt99PYHtvjJj
gsyYOOu+Am3lcDDhiZ/YbFKZYMKMiQ2MibPBZCJ+MGHGxHXGxFn3FWgrh91X
LPeVGRNkxsRZ9xVkK4fdV7xgYgNjwu5rpmDCjAmPiRPKJqQYE6xgYgpjgue+
MmPC7ithxoRiMIFlTPCCiQ2MCbuvzgYTkK0ciu7rM/jBxAbGxFn3FYQxoRhM
THJf0RmT7MEEZCuHgwkPyMhsQiqYQG7lUAwm0Fs5WMHEBsbEWffVJMYEx30F
YUwouq+zIIIJEGOC5b4CMCZ6wWQvXfcVhDGhGEzYfQVxX0G2cvDcV1MYE7xg
YgNjQtF9ZcaEgwmP/ohsYghjgue+msKYoLmvMFs52YMJyFYORfcVljFBCybY
jIlWMNmvE0yYMbGBMdEKJjCMCY77yoyJs+4rMyYgWzlowaQH2X3djB9MbGBM
0NxXKxgTDiY81Z+i2YTdV2ZMXGNMnHVfJ+MHE3TGxNFgYg5jQtF9Zcaki2Aw
sY4xwQompjAmeO4rMybsvhJmTCgGE1jGBP1P4jyEJj2bsPvqZjBpxQ8mm7Dd
V2ZM2H0lzZjQCyawWzl4wYQZExsYE1LBBHIrh2Iwgd7KwQomNjAmzrqvJjEm
OO4rCGPC7iuP4ZOUTUxjTJx1X0G2cth9xQsmNjAmFN1XWMYkUzCxgTFx1n2d
43wwAdnK0QsmzJi4zphQdF+7IYIJEGNCz32FZUzwggkyY4IXTJgx4bF8otnE
tGACvZWTPZhYwpiw+4rEmFAMJia5rxCMCZL7CrKVg+e+QjAmWsFkD1331RzG
hKL7usT5YAKylYMXTIxhTFx1X0G2cpx1X7fiBxMIxoSDCQcTHrhRswkzJtUJ
JiBbOXjuKzMmyIyJs+4rMyYkg4kx7ivIVo5eMLGBMaHovkJv5ZTvvh5h95Ww
+7oO3309ge2+MmOCzJg4674CbeVwMOGBGZFNMgUTZkxsYEycDSYT8YMJMyau
MybOuq9AWznsvmK5r8yYIDMmzrqvIFs57L7iBRMbGBOK7ivsIZNMwYQZEx4b
Rskm2YMJ0FYOVjAxhTHBc1+ZMWH3lTBjQjGYwDImeMHEBsaE3VdngwnIVg5F
9/UZ/GBiA2PirPsKwphQDCYmua/ojEn2YAKylcPBhAdl8tnEHsaEYjCB3srB
CiY2MCbOuq8mMSY47isIY0LRfZ0FEUyAGBMs9xWAMdELJnvpuq8gjAnFYMLu
K4j7CrKVg+e+msKY4AUTGxgTiu4rMyYcTHiqPynZRJ8xwXNfTWFM0NxXmK2c
7MEEZCuHovtqCWOiEUxAGBOtYLJfJ5gwY2IDY6IVTGAYExz3lRkTvGByGNd9
ZcYEZCsHLZj0ILuvm/GDiQ2MCZr7agVjwsGEx/yJzSbsvjJjYhNjQtF9hd7K
wXJf0RkTR4MJyFaOXjD5NV33lRmTLoLBxDrGBCuYmMKY4LmvzJiw+0qYMaEY
TGAZE/Q/WfNYPKFswu6rlcGkFT+YbMJ2X5kxYfeVNGPirPv6BnYwYcbEBsaE
VDCB3MqhGEygt3KwgokNjImz7qtJjAmO+wrCmLD7ymPZyGxSZcbEWfcVZCuH
3Ve8YGIDY0LRfYVlTDIFExsYE2fd1znOBxOQrRy9YMKMCWHGxFn3tRsimAAx
JvTcV1jGBC+YIDMmeMGEGRMenoIR2YSc+9oIEUwsYUzYfUViTCgGE3ZfQdxX
kK0cPPcVYitHK5jsoeu+msOYUHRflzgfTEC2cvDcV2MYE1fdV5CtHGfd1634
wQSCMeFgwsGEB28i2cRZxiR7MAHZysFzX5kxQWZM0IIJMGNStvvKjAnJYGKM
+wqylaMXTGxgTCi6r9BbOeW7r0fYfSXsvq7Dd19PYLuvzJggMybOuq9AWzkc
THhwpjCbkGdM2H11NphMxA8mzJi4zphQdF9NYkzYfcVyX5EZE4fd16OOu68g
WznsvuIFExsYE4ruK+whk0zBhBkTHhcnn00qsZWD5b6awpjgua/MmLD7Spgx
oRhMYBkTvGBiA2PC7iuhYGLgVg5F9/UZ/GBiA2PirPsKwphQDCYmua/ojEn2
YAKylcPBhIfERLOJaYwJxWACvZWDFUxsYEycdV+ZMXHWfZ0FEUyAGBMs9xWA
MdELJnvpuq8gjAnFYMLu6yqIYAKylYPnvprCmOAFE2TGxFn3lRkTDiY85o+a
TYpu5eC5r6YwJmjuK8xWTvZgArKVQ9F9tYQx0QgmIIyJVjDZr+O+MmNiA2Pi
rPvKjAleMDmM674yYwKylYMWTHqQ3dfN+MHEBsYEzX21gjHhYMJj34hs4oz7
yoyJDYwJRfcVeisHy31FZ0wcDSYgWzl6weTXdN1XZky6CAYTc9xXoK0crGBi
CmOC574yY8LuK2HGhGIwgWVM0P+kzMMjJy2bEGBMHA0mrfjBZBO2+8qMCbuv
pBkTZ93XN7CDCTMmNjAmFN1XkK0cisEEeisHK5jYwJg4676axJjguK8gjAm7
rzyOT3w2KZ8xcdZ9BdnKYfcVL5jYwJhQdF+ZMQHZynHWfZ3jfDAB2crRCybM
mBBmTJx1X7shggkQY0LPfbWFMckeTEAYE7xgwowJD4/WhLMJkvvaCBFMLGFM
2H1FYkwoBhN2X9shggnIVg6e+wqxlaMVTPbQdV9BGBOKwQTEfV3ifDAB2crB
c1+NYUxcdV9BtnIouq/AWzlo7isEY8LBhIMJD50pyCZWMSbZgwnIVg6e+8qM
CTJjghZMgBmTst1XZkxIBhNj3FeQrRy9YGIDY0LRfTWHMWH3laL7ug7ffT2B
7b4yY4LMmDjrvgJt5XAw4aExvdnEVMaE3Vdng8lE/GCCzphkDybMmIAwJhTd
V5MYE3ZfsdxXZMYEL5iYwpg4676CbOWw+4oXTGxgTCi6r7CHTDIFE2ZMeHiK
j8wmpgUTAxkTPPeVGRN2XwkzJhSDCSxjghdMbGBM2H0lFEwM3Mqh6L4+gx9M
bGBMnHVfQRgTisGE3VcQ9xVkK4eDCY+VI7JJNbdyKAYT6K0crGBiA2PirPvK
jImz7ussiGACxJhgua8AjIleMHGdMaEYTNh9XQURTEC2cvDcV1MYE7xggsyY
4AUTWMakbPeVGRMOJjz2TQnZxGbGBM19hdnKQQombxN2Xy1hTDSCCQhjohVM
9uu4r8yY2MCYUHRfDdzKociY4AWTw7juK8hWDm33FWIrBy2Y9CC7r5vxg4kN
jAma+2oFY8LBhIcnNZuYH0yYMbGBMaHovprDmLD7SjGYgGzl6AWTX9N1X5kx
6SIYTMxxX4G2crDcV1MYEzz3lRkTdl8JMyYUgwksY4L+J18ensyTkE2wGBNH
g0krfjDZhO2+MmPC7itpxsRZ9/UN7GDCjIkNjAlF9xVkK4diMIHeysEKJjYw
Js66r8yYsPvKw1P9icsmTruvIFs57L7iBRMbGBOK7iszJiBbOc66r3OcDyYg
WzkUgwkzJiBbOc66r90QwQSIMaHnvtrCmGQPJiCMCZ77yowJD09VpzCbVGIr
J3swsYQxYfcViTGhGEzYfW2HCCYgWzl47ivEVo5WMNlD130FYUwoBhMQ93WJ
88EEZCsHz301hjFx1X0F2cqh6L4Cb+Wgua8QjAkHEw4mPPZOPpuYz5hkDyYg
Wzl47iszJsiMCVowsYIxYffVWfcVZCtHL5jYwJhQdF/NYUwouq9KMyEYTIAZ
Eyz39QS2+8qMCTJj4qz7CrSVw8GEx86R2aQ6WznsvjobTCbiBxN0xiR7MGHG
BIQxoei+msSYsPuK5b4ib+XgBRNTGBNn3VeQrRx2X/GCiQ2MCUX3lRkTbiY8
Vo7IJm4yJnjuKzMm7L4SZkwoBhNYxgQvmNjAmLD7SiiYsPsKvZWDFUxsYEyc
dV9BGBOKwYTd110QwQRkK4eDCQ/PL0vIJlYGE+itHKxgYgNj4qz7yoyJs+7r
LIhgAsSYYLmvAIyJXjBxnTFh95Wi+7oKIpiAbOXgua+mMCZ4wQSZMcELJrCM
SdnuKzMmHEx4eFKyCUXGBM19hdnKQQombxN2Xy1hTDSCCQhjohVMmDFxnjGh
6L4auJVDkTHBCyaHcd1XkK0c2u4rxFYOWjDpQXZfN+MHE2zGhLT7agVjwsGE
h6fcic0meMGEGRMbGBOK7qs5jAlF97XN+WACspWjF0x+Tdd9Zcaki2AwMcd9
BdrKwXJfTWFM8NxXZkzYfSXMmFAMJrCMCfqfZHl4qjbRbAK6leNoMGnFDyab
sN1XZkzYfSXNmDjrvr6BHUyYMWHGhDBjQjGYQG/lYAUTGxgTZ91XZkzYfeXh
MX/UbMKMCbuv5gUTGxgTiu4rMyYgWznOuq9znA8mIFs5FIMJMyYgWznOuq/d
rgYTEPfVFsYkezABYUzw3FdmTHh4jB6RTcrZyskeTCxhTNh9RWJMKAYTdl/b
IYIJyFYOnvsKsZWjFUz20HVfQRgTisEExH1d4nwwAdnKwXNfjWFMXHVfQbZy
KLqvtjAm7L5yMOHhgZxSsolp7ivIVg6e+8qMCTJjghZMrGBM2H111n0F2crR
CyY2MCYU3VdzGBOK7qvSTAgGE2DGBMt9PYHtvjJjgsyYOOu+Am3lcDDh4fEn
PZuw+8rBpIRmghVM0BmT7MGEGRMQxoSi+2oSY8LuK5b7iryVgxdMTGFMnHVf
QbZy2H3FCyY2MCYU3VdmTLiZ8PD8MjmbVJkx0Qsm67DdV2ZM2H0lzJhQDCaw
jAleMLGBMWH3lVAwYfcVeisHK5jYwJg4676CMCYUgwm7r7sgggnIVg4HEx6e
DBPNJs66r+Pxg4kNjImz7iszJs66r7MgggkQY4LlvgIwJnrBxHXGhN1Xiu7r
KohgArKVg+e+msKY4AUTZMYEL5gwY8KMCQ8PsQllE9MYEzT3FWYrBymYvE3Y
fbWEMdEIJiCMiVYwYcbEecaEovtq4FYORcYEL5gcxnVfQbZyaLuvEFs5aMGk
B9l93YwfTLAZE7RgwozJ3zmY8PBUZ2Q2YcaEGROb3FdzGBOK7mub88EEZCtH
L5j8mq77yoxJF8FgYo77CrSVg+W+msKY4LmvzJiw+0qYMaEYTGAZE/Q/mfLw
GDsim5S8leNoMGnFDyabsN1XZkzYfSXNmDjrvr6BHUyYMWHGhDBjQjGYQG/l
YAUTGxgTZ91XZkzYfeXhsW/y2cQtxoTdV7xggsyYUAwmzJiYw5g4677OcT6Y
gGzlUAwmzJiAbOU46752uxpMQNxXWxiT7MEEhDHBc1+ZMeHhsWpSsokrjAm7
r0iMCbuvFINJO0QwAdnKwXNfIbZytILJHrruKwhjQjGYgLivS5wPJiBbOXju
qzGMiavuK8hWDkX31RbGhN1XDiY8PJgTm02qHExAtnLw3FdmTJAZE7RgYgVj
wu6rs+4ryFaOXjCxgTGh6L6aw5hQdF+VZkIwmAAzJlju6wls95UZE2TGxFn3
FWgrh4MJD0+WCWUTdl+dDSYT8YMJOmOSPZgwYwLCmFB0X01iTNh9xXJfkbdy
8IKJKYyJs+4ryFYOu694wcQGxoSi+8qMCTcTHp4Mo2YTQMZEL5isw3ZfmTFh
95UwY0IxmMAyJnjBxAbGhN1XQsGE3VforRysYGIDY+Ks+wrCmFAMJuy+7oII
JiBbORxMeHiqMCKbWOm+jscPJjYwJhTdV2ZM2H0F2spxK5jAMiZ6wcR1xoTd
V4ru6yqIYAKylYPnvprCmOAFE2TGBC+YMGPCjAkPj+Ujssn/B1BSYUU=
     "], {{0, 412.5}, {1101.75, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{96, 96}],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "Greenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{990.75, Automatic},
   ImageSizeRaw->{1101.75, 412.5},
   PlotRange->{{0, 1101.75}, {0, 412.5}}]], "Input",ExpressionUUID->
  "77451f0a-f7fe-4764-8b5e-927e10923d35"]
}], "Text",
 CellChangeTimes->{{3.8231551858630657`*^9, 
  3.8231551994934688`*^9}},ExpressionUUID->"76655c2a-a387-401b-bed0-\
9a72d4e80632"],

Cell[CellGroupData[{

Cell["5.1 Calculation part", "Subsection",
 CellChangeTimes->{{3.821518460775728*^9, 3.8215184635711555`*^9}, {
  3.824454793937812*^9, 3.8244547947725697`*^9}, {3.825223017250855*^9, 
  3.8252230183490252`*^9}, {3.8253331130806303`*^9, 
  3.825333115055187*^9}},ExpressionUUID->"6757e4c3-5cb1-4ba8-b5d2-\
3ad2477d25d9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dg", "=", "CL1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], " ", ";", "\n", 
    "                  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "=", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "=", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "11"}], "]"}], "]"}]}]}], "]"}], ";", 
    "\n", "                  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       "startWipLevel"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "4"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "6"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "3"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "7"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "9"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], "+", " ", 
        RowBox[{"startWipLevel", "*", "2"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "10"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "12"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "11"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "15"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "16"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "18"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "18"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "19"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "18"}], "]"}], "]"}]}]}], ",", "\[IndentingNewLine]",
    " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "timeUnits", ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.8214580617588253`*^9, {3.821458126102867*^9, 3.8214581867917557`*^9}, 
   3.8214582284850206`*^9, {3.821458275598774*^9, 3.821458276754862*^9}, 
   3.8214584242355423`*^9, 3.8214589529542866`*^9, {3.8214594870797987`*^9, 
   3.821459531381855*^9}, {3.8214595637179327`*^9, 3.82145962720304*^9}, {
   3.8214596785971575`*^9, 3.821459689000943*^9}, 3.821518653553316*^9, 
   3.821790619117299*^9, 3.823082634041542*^9, 3.8252449866603537`*^9, {
   3.825250234974511*^9, 3.8252502408303857`*^9}, 3.8252503674816775`*^9, 
   3.8252507517965813`*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"345eb09a-caef-45f3-856b-7872d962d3de"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalwipDBR", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finishedgoodsDBR", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"dg", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DBR", "=", "dg"}], ";"}]}], "Input",
 CellChangeTimes->{{3.821457222675911*^9, 3.821457234438753*^9}, {
   3.821457293315337*^9, 3.821457321011918*^9}, {3.8214573518641214`*^9, 
   3.821457397212779*^9}, {3.8214589615928736`*^9, 3.821458984618804*^9}, {
   3.82179215254018*^9, 3.8217921863635983`*^9}, 3.82179244343305*^9, {
   3.821882107330138*^9, 3.8218821107892103`*^9}, {3.8230826340455427`*^9, 
   3.8230826340505433`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"113a0e63-8719-4a48-8c65-f139560e044e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"availCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{
           RowBox[{"3", "*", "i"}], "-", "1"}]}], "]"}], "]"}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"utilCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"3", "*", "i"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[74]:=",ExpressionUUID->"3d5ac86a-c778-4272-bc17-10eea40f0d30"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<station 1\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  2\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  3\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  4\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  5\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  6\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}]}], "|>"}]}]}], " ", "|>"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<available versus utilized capacity per workstation\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<available capacity\>\"", ",", "\"\<utilized capacity\>\""}], 
          "}"}], ",", "Below"}], "]"}]}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<station 1\>\"", ",", "\"\<station 2\>\"", ",", 
           "\"\<station 3\>\"", ",", "\"\<station 4\>\"", ",", 
           "\"\<station 5\>\"", ",", "\"\<station 6\>\""}], "}"}], ",", 
         "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}], ",", 
        RowBox[{"Total", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}], ",", "Blue"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<queue12\>\"", ",", "\"\<queue23\>\"", ",", "\"\<queue34\>\"", 
         ",", "\"\<queue45\>\"", ",", "\"\<queue56\>\"", ",", 
         "\"\<totalwip\>\"", ",", "\"\<finalgoods\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<wip per queue, total wip of all queues and final goods\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DBRRollingStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "Pink"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DBRQueueStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "LightBlue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DBRQueueGraph", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue12\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue23\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "10"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue34\>\""}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "13"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue45\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "16"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue56\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "18"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<finalgoods\>\""}]}], "]"}]}],
          "}"}]}], "}"}], ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TDBR", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sp", "-", "tvc"}], ")"}], "*", "finishedgoodsDBR"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IDBR", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"totalwipDBR", "*", "tvc"}], ")"}], "+", "invest"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npDBR", "=", 
   RowBox[{"TDBR", "-", "oe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roiDBR", "=", 
   RowBox[{"PercentForm", "[", 
    RowBox[{
     RowBox[{"npDBR", "/", "IDBR"}], " ", "/", " ", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"csDBR", "=", 
   RowBox[{"PercentForm", "[", "1.", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ltDBR", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"totalwipDBR", " ", "/", " ", "finishedgoodsDBR"}], " ", "/", 
     " ", "timeUnits"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pDBR", "=", 
   RowBox[{"TDBR", "/", "oe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"itDBR", "=", 
    RowBox[{"finishedgoodsDBR", " ", "/", " ", "totalwipDBR"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"financeDBR", "=", 
   RowBox[{"Dataset", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"<|", " ", 
       RowBox[{
        RowBox[{"\"\<Throughput\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "TBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "TCL1", "]"}]}], ",", 
           RowBox[{"\"\<TOC-DBR\>\"", "->", 
            RowBox[{"N", "[", "TDBR", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Inventory\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "IBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "ICL1", "]"}]}], ",", 
           RowBox[{"\"\<TOC-DBR\>\"", "->", 
            RowBox[{"N", "[", "IDBR", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Operating Expenses\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "oe", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "oe", "]"}]}], ",", 
           RowBox[{"\"\<TOC-DBR\>\"", "->", 
            RowBox[{"N", "[", "oe", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Net Profit\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "npBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "npCL1", "]"}]}], ",", 
           RowBox[{"\"\<TOC-DBR\>\"", "->", 
            RowBox[{"N", "[", "npDBR", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<ROI\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "roiBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "roiCL1", "]"}]}], ",", 
           RowBox[{"\"\<TOC-DBR\>\"", "->", 
            RowBox[{"N", "[", "roiDBR", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Customer Service\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "csBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "csCL1", "]"}]}], ",", 
           RowBox[{"\"\<TOC-DBR\>\"", "->", 
            RowBox[{"N", "[", "csDBR", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Productivity\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "pBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "pCL1", "]"}]}], ",", 
           RowBox[{"\"\<TOC-DBR\>\"", "->", 
            RowBox[{"N", "[", "pDBR", "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Inventory Turnover\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<Balanced Line\>\"", "->", 
            RowBox[{"N", "[", "itBL1", "]"}]}], ",", 
           RowBox[{"\"\<Constrained Line\>\"", "->", 
            RowBox[{"N", "[", "itCL1", "]"}]}], ",", 
           RowBox[{"\"\<TOC-DBR\>\"", "->", 
            RowBox[{"N", "[", "itDBR", "]"}]}]}], "|>"}]}]}], 
       "\[IndentingNewLine]", "|>"}], "}"}], ",", 
     RowBox[{"HeaderBackground", "\[Rule]", "LightGreen"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.821457715262518*^9, 3.821457729134305*^9}, 
   3.8217904629787574`*^9, {3.8230826340605426`*^9, 3.8230826340805426`*^9}, {
   3.823085251429611*^9, 3.8230852638517075`*^9}, {3.823085328258466*^9, 
   3.8230853420191526`*^9}, {3.8231583877985077`*^9, 3.823158429540799*^9}, {
   3.8237742918976517`*^9, 3.8237747126085973`*^9}, {3.8237756163710313`*^9, 
   3.8237756240322413`*^9}, 3.8237761128486376`*^9, {3.8251578307882576`*^9, 
   3.8251582180282326`*^9}, 3.8253268519466543`*^9, {3.825328539767344*^9, 
   3.8253285421550164`*^9}, {3.8253287924238067`*^9, 3.825328798819777*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"2595aa67-8234-4601-84c5-f10021836daf"]
}, Closed]],

Cell[CellGroupData[{

Cell["5.2 Rolling dice statistics", "Subsection",
 CellChangeTimes->{{3.8218815937108717`*^9, 3.8218815968003645`*^9}, 
   3.8230853706332154`*^9, {3.823778587122511*^9, 3.823778590466144*^9}, {
   3.824454799359231*^9, 3.8244548002649727`*^9}, 
   3.8252230209962473`*^9},ExpressionUUID->"1086e7c1-0def-4db6-a9c4-\
426c47cc0a6b"],

Cell["\<\
In this scenario, we re-use all rolled dice points, but we modify the program \
code to make use of the information via the rope.\
\>", "Text",
 CellChangeTimes->{{3.825235425984559*^9, 3.825235511471284*^9}, 
   3.825316615998017*^9},ExpressionUUID->"e0dcc454-3e8e-42a4-9f62-\
2acf0a6f71cc"],

Cell[CellGroupData[{

Cell[BoxData["DBRRollingStat"], "Input",
 CellChangeTimes->{
  3.825223197795851*^9, 3.825223776622568*^9, {3.8253268725778522`*^9, 
   3.8253268760164204`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"b013ba43-02a3-46dd-b79d-7b21ce852ad9"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "station 1" -> 2., "station 2" -> 2., "station 3" -> 2., "station 4" -> 
          1., "station 5" -> 2., "station 6" -> 2.], "Mean" -> 
        Association[
         "station 1" -> 6.91, "station 2" -> 6.95, "station 3" -> 6.73, 
          "station 4" -> 3.41, "station 5" -> 6.91, "station 6" -> 6.96], 
        "Median" -> 
        Association[
         "station 1" -> 7., "station 2" -> 7., "station 3" -> 7., "station 4" -> 
          3., "station 5" -> 7., "station 6" -> 7.], "StandardDeviation" -> 
        Association[
         "station 1" -> 2.530999722631276, "station 2" -> 2.4510356500009864`,
           "station 3" -> 2.4323368652928457`, "station 4" -> 
          1.7296873075264738`, "station 5" -> 2.781958470087742, "station 6" -> 
          2.5972790735418836`], "Variance" -> 
        Association[
         "station 1" -> 6.405959595959596, "station 2" -> 6.007575757575758, 
          "station 3" -> 5.916262626262626, "station 4" -> 
          2.9918181818181817`, "station 5" -> 7.73929292929293, "station 6" -> 
          6.745858585858586], "Max" -> 
        Association[
         "station 1" -> 12., "station 2" -> 11., "station 3" -> 12., 
          "station 4" -> 6., "station 5" -> 12., "station 6" -> 12.]]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[1, 0.5, 0.5]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[6]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 1", 
                  Style[
                  "station 1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 2", 
                  Style[
                  "station 2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 3", 
                  Style[
                  "station 3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 4", 
                  Style[
                  "station 4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 4"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 4"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 5", 
                  Style[
                  "station 5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 5"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 5"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 6", 
                  Style[
                  "station 6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 6"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 6"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.41"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.531"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.45104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.43234"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.72969"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.78196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.59728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.40596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.00758"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.91626"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.99182"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.73929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.74586"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{601., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{601., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA2IpDid5zoY3jqeibzBwAelbh0xMuYE0l8m1aQJAeuXz
HetB9LKmycyCQLrv7mp1ED2F4YYViH5xjisKRItFJpgLA+kJt2obQPS3byoL
QbRVxv8PIHrXWd1/ILqOo4xPBEj/tu9SANFs7y31QfSC87kWIHq9XrUriD6n
fDgTRDMpSJSAaJGgydUguu62RAuITnBImwai57nELQLRLZpXToForQ35/0C0
60sVblEg/Y+PUxxE71q5QE4MSG+uK3IA0QeCt180A5k3deINcyAdoGS92wJI
X3vRLm8FpO/or1QD0fOm9MXaAGlm83OrYoE0AB0GjQc=
  "],
 CellLabel->"Out[90]=",ExpressionUUID->"dce7872c-3863-4cdb-9203-79cc02098042"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.3 Queue statistics", "Subsection",
 CellChangeTimes->{{3.8230854071419296`*^9, 3.823085416508416*^9}, 
   3.823778653610358*^9, {3.8244548057866354`*^9, 3.824454806483676*^9}, 
   3.8252230239899483`*^9},ExpressionUUID->"babfe86c-0501-4c08-8b59-\
ffd7a8648876"],

Cell[CellGroupData[{

Cell[BoxData["DBRQueueGraph"], "Input",
 CellChangeTimes->{{3.8230854357271414`*^9, 3.8230854473574457`*^9}, {
  3.823085485057846*^9, 3.82308551494881*^9}, {3.825158242407712*^9, 
  3.825158245463087*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"c649e842-6dec-4af9-ae52-331443ad9d94"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJyFlM0ug1EQhk+sLLuwsLBARERE/P/Todr6K21VsRXWbmEu7VySS0A6j2Te
jSbN5OnM+86cOd/XhbfP4cdUKeX95/sbJ5+v5iSuW/wQcTnidMTZiA3Lupl/
6ubEd17qFy37LIkPc9BvRXhV+q1JnnPhvyHzbIp+S+bbFr8d8duV+j2Zf1/8
D8TvUPhI/I6l34nwqfCZcFP6W/Z3k/y55GH2dZHrHWb+VmZv5fpyGTH24zDz
tjM7jL4jeph9dUUPM/+V5GH8r7Ofw9znjfSH0d+KHuZ8dxHjPXAY/172857k
76U/jP+D9Bcu/YixD4O5r36urzD9B7neYOYd5PoqXIaiF3Y45qsw+sfMBnNe
GD3M8znKeRvlvMOxzwrT/yli/K8ZHH4uXGH0Y+k/znmHY54q9eVZ9DDPs+Qr
TP+XXG8w54e5f+Hy+lf/Db5eemA=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue12\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 15.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdk0lOAkAQRSuuXLpw4cKFGmOMMUTFeaIVRZwBEXWpiWuvUEfrI3EEMdQz
qU9Cfh6/qn/1wPLXz+B7xsw+J98/nX7mylTXQ+dDF0MXSq7jdwtdCp0NXZH6
VVlnLXTcyrnwhvRvit+QObdknm3p35H5mlK/K/6e8L7MfxDKORxK3pHMeyzr
ncj8p8JnwueS1xIueX2H6b8QH2b/l3l+h5m/ndnbud6ucp4L27X4MP0d8Tvi
34gPc55d8YXtNtc7zH3eZXaY/HvpF7aH0PgfOMz9PIbGeTvM+k+SDzP/s/gw
+b28foG5r16urzD77+f6AvMe+rm+CttA8mHyxa8w+3sJjfMqMOcN0w/zPoeS
P8y+w5FXYc7vVfJh7ku4wux/JPmj7Dsc81Sptzfph3nP4leY/PdcX2D2D3P/
wvbxX/8L8IR0Cg==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue23\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQfaJQ5nhhjKDDE4u+xxbrfBwYwEAESvtBaQk0vgwa
XwGNrwShG3yhfBU0eTU0vgYaXwuNr4PG10PjG6DxDdH4RmjuMUaTN4HSMHlT
uLzwLe8M/Yem8PABAKYPIXg=
          "]], 
         LineBox[{{23.12037037037037, 57.361111111111114`}, {24., 60.}, {25., 
          60.}, {26., 60.}, {27., 60.}, {28., 60.}, {29., 58.}, {
          29.638888888888886`, 57.361111111111114`}}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQ/VZ1y/QLcnYOTyz6Hlus83FgAAN7KO0HpR0gdIMv
lHZAk3dE5Teg8Rmc0OTR+AzOaPJofAYXNPtd0ORd0fSj8RncoDRMvxuavDua
+e5o8h5o8h5o8p5o9qPxGbzQ9KPxGbzR9MP4MHkfNP0+qOrh6nxR1cHF/eA0
JyjCC/zg8Q0AHq471Q==
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQ/V3olndGv5/DE4u+xxbrfBwYwMAfSvtB6AY0PkMA
Kt8Bjd+Axj+AxmcIRNOPxm9A4x+A8ht8oeJBaPrR+A1o/AMwPkx/MJp+NH4D
Gv8AGp8hBE0/Gr8BwW/9BgzgHSHw8AUA2IEwyg==
          "]], 
         LineBox[{{83.12037037037037, 57.361111111111114`}, {84., 60.}, {85., 
          60.}, {86., 60.}, {87., 60.}, {88., 60.}, {89., 60.}, {90., 60.}, {
          91., 60.}, {92., 60.}, {93., 60.}, {94., 60.}, {95., 60.}, {96., 
          60.}, {97., 60.}, {98., 60.}, {99., 60.}, {100., 60.}}]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 57.361111111111114`},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue34\"", TraditionalForm],
      PlotRange->{{0., 100.}, {57.361111111111114`, 60.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdk8lKQ0EQRQtXLl24cOFCg4iIiCbO0+uomRyTaIxuRdf+Qn9af1J+QIjG
OkLdB6E4ubeG7npv9f1r+DlnZh8/v984mj3flc2ejfQXzeO6x3mJC8KL8v+S
1FkW/4rk1YTXPE6qOMdE5qTfpuhbUm9b/Dui7wrXpV5D9D3R950594H0OxT/
kfCxM/dzIv1Ohc+Ez4UvpH8l9VPUcxK96dH3l5vRb5dx/ixsV1If5n6uRYeZ
vxU5w+S3Zb529FtH9I7o3Vgvw5yv59Hf09yLfruR+WHe91uZHyb/TurDvPf3
Hmuuw8z3IPVh9vcYOcPM1/fo+0p98cM+bxG/DeI8aRD9GfbvvsDkD6U/zL5g
+sPs7ynOm2DyYa9fRLdn6Q9znzD9Ye5/JP1h+sPki24vUU8w/WGvX2Dyx9Gf
xlHPMP3Fb68eOT/M/oWL+O3tX58CdbF7uA==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue45\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdkssuQ2EUhXeMDA0MDAxoRERE3O/0L1WXFlWXMiQx9grnefQlziN5BCrr
k+x1kmbl676s9f/nzL9/Dj4mIuLt9zfW0df4mSrx9yxJp6Wz0hnppP0Pz9lc
w3jB+hel383sS45lq6/Y/KrxmvG6+W/Yvk2rb1l9W8y5dyzfrvXvGe9bngPz
O5Ryb0dS7unY+k/Mv2n7S65Xxeotaajeyv1xmvNXxnFm+2G+g3bOW7Vzf5xb
HeZ+O5avk/vjwuow57u0/TD+V1LddwXjf537K1h+0bX93dwfPcvXy/1xI22o
DjN/a/thzneXuYLJ15fqfZW+9cM6bw0zf5/zFJg8sN53DZNvYP4w9wHjD3M/
D3lfgZmHtb+2ejyaP0x+GH+Y/E/mD+MPM2/1eM5cYL4nWPtr649hzluGuV7B
+Ft/vEg5P8z7N66tP17/6z+X83fh
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue56\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxtkklOAkAQRSuuXLpw4cKFEmKMMcZ5VhoHHEAFHNCt0bVXqKP1kTiCGuqZ
1I8k5Ofxa/jdzeL71/Bzysw+fr6/OvmMWxNdLvFD6GzodGgjdCa0KXVzovTN
Cy9IX0P8pvBS+T8nOVbEX5X+NeF14Q3JsynztsTfFn8nmHPvSr49qd8XPpA8
h6G8w5H4x6Hc04nkO5X9Lekv2fcifjvv93aut7Oc34XtPM9zmPu5yHkdZv6l
+DD9HcnXyfV2JT7M+a4lH8z+m9D4nzrM/ttc7zDv1ZX83VxvPcnXy/V2F9oI
H6b/XubDnO8hs8Pk64fGe5W+1MMxv8L0D3KeMsj1Llxh8g1lP8x9wHHfFeZ+
HvO8AtMPx/wqvj3Jfpj8MPth8j/Lfpj9MP3i20vmAvN/gmN+lXob5bxllH2H
2S/19hrK+WHeX7hKvb39+d+3FHZY
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"finalgoods\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 1]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+JjKj7ynA1vHK/HP2LgAtIWK2xNuYF0n9f9aQJA+n/g
4fUgegnjNGZBID37/jZ1ED1r1kMrEG1xRDgKRCe/yDIXBsnPb2sA0UvC9RaC
6D0aXB9BtO0Ts38ges7kej4RkH3LpiiAaMcKZ30QXSZfbgGiPU+0uIJouzln
MkF0UYdiCYjed3tONYjmClZqAdHTTuZPA9FLKjIXgehJ2vdPgegWsap/INpk
ojq3KEi8llscROstXSQnBqQb5lY7gOiHegcvmgHp+kuzb5gD6T92rrstgLTz
5InyVkBa8cdmNRA9ZdL0WBsg3al0Y1UskAYAp/WOLA==
  "],
 CellLabel->
  "Out[91]//TableForm=",ExpressionUUID->"11895df0-10fb-4879-ba67-\
a66ec22e5d5f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["DBRQueueStat"], "Input",
 CellChangeTimes->{{3.825223740571387*^9, 3.8252237621390705`*^9}, 
   3.8252240048370924`*^9, {3.8253285529714117`*^9, 3.8253285581293144`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"6731c68b-be23-48f9-a150-ef24de6f6cd7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "queue 12" -> 1., "queue 23" -> 1., "queue 34" -> 37., "queue 45" -> 
          1., "queue 56" -> 1., "final goods" -> 1.], "Mean" -> 
        Association[
         "queue 12" -> 3.81, "queue 23" -> 4.34, "queue 34" -> 59.06, 
          "queue 45" -> 3.97, "queue 56" -> 4.3, "final goods" -> 3.71], 
        "Median" -> 
        Association[
         "queue 12" -> 4., "queue 23" -> 4., "queue 34" -> 60., "queue 45" -> 
          4., "queue 56" -> 3.5, "final goods" -> 3.], "StandardDeviation" -> 
        Association[
         "queue 12" -> 2.2860799671406107`, "queue 23" -> 3.585098226399005, 
          "queue 34" -> 3.0971475961476607`, "queue 45" -> 
          2.4881740495813593`, "queue 56" -> 3.710482012849108, "final goods" -> 
          2.1616258377957696`], "Variance" -> 
        Association[
         "queue 12" -> 5.226161616161616, "queue 23" -> 12.852929292929293`, 
          "queue 34" -> 9.592323232323233, "queue 45" -> 6.191010101010101, 
          "queue 56" -> 13.767676767676768`, "final goods" -> 
          4.672626262626262], "Max" -> 
        Association[
         "queue 12" -> 15., "queue 23" -> 22., "queue 34" -> 60., "queue 45" -> 
          17., "queue 56" -> 24., "final goods" -> 12.]]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.87, 0.94, 1]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[7]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 12", 
                  Style[
                  "queue 12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 12"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 12"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 23", 
                  Style[
                  "queue 23", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 23"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 23"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 34", 
                  Style[
                  "queue 34", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 34"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 34"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 45", 
                  Style[
                  "queue 45", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 45"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 45"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 56", 
                  Style[
                  "queue 56", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 56"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 56"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["final goods", 
                  Style[
                  "final goods", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "final goods"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "final goods"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.81"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.34"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.06"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.97"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.28608"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.5851"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.09715"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.48817"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.71048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.16163"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.22616"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.8529"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.59232"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.19101"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.7677"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.67263"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{610., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{610., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+LXwYHynA1vHB+YPWPgAtKzdjiacgPpyPWPpgkAaZ8t
x9eD6E03ZjILAukur93qIJol86kViDZ2FI8C0YpteebCQDqjrqsBRP+aYLQQ
RKe95/0IonV6bP+B6EeezXwiQProthkKILruhYc+iJb5X2UBop0iu1xB9J3q
C5kgelqyegmIXrNvUTWIdv6q3gKizwWVTgPR/8pzF4Fok9zHp0D0pLe1/0C0
fYQ2tyiQzvbhFwfRkYzL5MSAtM3UegcQbfT0yEUzkP9Ozb9hDqTLxDx3W4Dc
/WaqvBWQPjV5hxqI7q+cHWsDpOOc76yKBdIAZKuPpQ==
  "],
 CellLabel->"Out[92]=",ExpressionUUID->"d7758b7c-ff25-4031-a095-a668650e0e71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
5.4 Comparison of a) available and utilized capacities and b) last run WIP \
plus Final goods\
\>", "Subsection",
 CellChangeTimes->{{3.821518805549862*^9, 3.821518808269321*^9}, 
   3.8237786779231863`*^9, {3.824454815062381*^9, 3.824454821578072*^9}, 
   3.8252230291726084`*^9},ExpressionUUID->"45a72062-e2f6-4a75-bb70-\
8242d092e58a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\"\<*        *\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821882169049618*^9, 3.8218821957543116`*^9}, {
   3.8218822446277895`*^9, 3.8218822481048317`*^9}, {3.8218822782011623`*^9, 
   3.8218822819357505`*^9}, {3.823158459847491*^9, 3.823158469838746*^9}, 
   3.8252261433934546`*^9},
 CellLabel->"In[93]:=",ExpressionUUID->"4e8a46a4-34bd-4beb-a61c-e3c288f72f23"],

Cell[BoxData[
 TemplateBox[{"*        *", "\"*        *\"", 
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5611439176649233, 0.}, {14.738231820482538`, 
         0.}}]}, {{}, {{{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.8391260334064451, 0.}, {1.703475620043867, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.839126033406445, 0.}, {2.703475620043867, 
                 346.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.246077273494179, 0.}, {4.110426860131601, 
                 695.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.246077273494179, 0.}, {5.110426860131601, 
                 353.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.653028513581913, 0.}, {6.517378100219335, 
                 673.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.653028513581913, 0.}, {7.517378100219335, 
                 368.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.059979753669648, 0.}, {8.92432934030707, 
                 341.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.059979753669648, 0.}, {9.92432934030707, 
                 341.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{10.466930993757382`, 0.}, {11.331280580394804`, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{11.466930993757382`, 0.}, {12.331280580394804`, 
                 356.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{12.873882233845116`, 0.}, {13.738231820482538`, 
                 696.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{13.873882233845116`, 0.}, {14.738231820482538`, 
                 371.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}}, {}, {}}, {}, {
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {1.271300826725156, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["346.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {2.271300826725156, 346.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["695.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {3.67825206681289, 695.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["353.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {4.67825206681289, 353.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["673.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {6.085203306900624, 673.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["368.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {7.085203306900624, 368.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["341.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {8.49215454698836, 341.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["341.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {9.49215454698836, 341.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {10.899105787076092`, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["356.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {11.899105787076092`, 356.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["696.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {13.306057027163828`, 696.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["371.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {14.306057027163828`, 371.}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, {
        StyleBox[{Antialiasing -> False, {
           Directive[
            Thickness[Tiny]], {
            LineBox[{{0.5611439176649233, 0.}, {15.021773578538888`, 0.}}]}, 
           StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
          StyleBox[{{
             Directive[
              Thickness[Tiny]], 
             LineBox[{{0.839126033406445, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {0.839126033406445, 
                0.}]}], 
             LineBox[{{14.738231820482536`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.738231820482536`, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
               LineBox[{{2.703475620043867, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {2.703475620043867, 
                  0.}]}], 
               LineBox[{{3.2460772734941785`, 0.}, 
                 Offset[{-1.102182119232618*^-15, -6.}, {3.2460772734941785`, 
                  0.}]}], 
               LineBox[{{5.1104268601316, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.1104268601316, 
                  0.}]}], 
               LineBox[{{5.653028513581912, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.653028513581912, 
                  0.}]}], 
               LineBox[{{7.517378100219334, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {7.517378100219334, 
                  0.}]}], 
               LineBox[{{8.059979753669646, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {8.059979753669646, 
                  0.}]}], 
               LineBox[{{9.924329340307068, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {9.924329340307068, 
                  0.}]}], 
               LineBox[{{10.46693099375738, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {10.46693099375738, 
                  0.}]}], 
               LineBox[{{12.3312805803948, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.3312805803948, 
                  0.}]}], 
               LineBox[{{12.873882233845112`, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.873882233845112`, 
                  0.}]}]}}}, 
            StyleBox[{
              Directive[
               Thickness[Tiny]], 
              Directive[
               Thickness[Tiny]], 
              StyleBox[{
                InsetBox[
                 FormBox["\"station 1\"", TraditionalForm], 
                 Offset[{0, -2}, {1.771300826725156, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 2\"", TraditionalForm], 
                 Offset[{0, -2}, {4.17825206681289, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 3\"", TraditionalForm], 
                 Offset[{0, -2}, {6.585203306900623, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 4\"", TraditionalForm], 
                 Offset[{0, -2}, {8.992154546988356, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 5\"", TraditionalForm], 
                 Offset[{0, -2}, {11.399105787076092`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 6\"", TraditionalForm], 
                 Offset[{0, -2}, {13.806057027163824`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}]}, {{}}, 
               StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
             False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
         "GraphicsAxes"}, StripOnInput -> False]}}, {
      DisplayFunction -> Identity, AspectRatio -> 0.5, Axes -> {False, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.5611439176649233, 0.}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
       FormBox["\"available versus utilized capacity per workstation\"", 
         TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"available capacity\"", "\"utilized capacity\""}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5079726666666667, 0.313888, 
                    0.6270646666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.761959`", ",", "0.470832`", ",", "0.940597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2875306666666667, 0.473182, 
                    0.6180513333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.431296`", ",", "0.709773`", ",", "0.927077`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}],
              ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.651]]], 
         RGBColor[0.976, 0.6848, 0.26480000000000004`]], {{
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 1.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 1.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 60.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 3.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 3.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 68.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 371.}, 
           "RoundingRadius" -> 0]}}}, {}, {}}, {}, {
       InsetBox[
        FormBox[
         StyleBox["1", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {1., 1.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["1", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {2., 1.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["60", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {3., 60.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["3", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {4., 3.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["3", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {5., 3.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["68", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {6., 68.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["371", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {7., 371.}], 
        ImageScaled[{0.5, 0}]]}, {}, {}, {}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.4107501820830298, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["\"queue12\"", TraditionalForm], 0}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox["\"queue23\"", TraditionalForm], 0}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox["\"queue34\"", TraditionalForm], 0}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox["\"queue45\"", TraditionalForm], 0}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox["\"queue56\"", TraditionalForm], 0}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox["\"totalwip\"", TraditionalForm], 0}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox["\"finalgoods\"", TraditionalForm], 0}}, None}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"wip per queue, total wip of all queues and final goods\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->CompressedData["
1:eJwdz1tIUwEcBvBZD1aKOLbZSsguq0YPJVibSMk50VrRQUNXUnHAbAb1ImG3
tVWnrMwZo0CWRa6pR4erVesCywy6SNmSylIUO7GgdZke1GlFjBz9vx4+fg/f
w8e3qKKqpDJFoVAUU7QPvfs7bDLLc3sPwPTW8kNwaKTTBXeEq21+skTz+RRM
dp9tghfudY4cOSaz0bvVk6JdZjeZE8o2crIrykHnF5t7iiyqjw7All1i/Ce5
3XLn9C9SXba0Hn4d7RPhfUn7BvK+YBRKkkv4TSr0Ky/Boz0fi9QOmX3h+NCo
JXV/Urvg65pXM9jjMpvybJZuAznsu/bERJ6IXW80k9O9Rt+3kzIbeRt+DD2H
n9d+J7M3evrhvJrSBBS5jMofZCIknINXNcEG6LS8V8ZI9xU9B+cHNWWwdI8h
MEoyVj5ntiCzq01TijmktqJ7Hczs4NakketVY+5MUgr234aCwzNTSVqZnuUw
S44XQC6yeCesG7MbVaRXahAgYy5shmpjdhzmtm1OwuZBV4aaHLSKC2Hhecsq
mL67Nh+Wp7pN0PBA2ve/X5F3EI5vuWWHWz/lnYFMQHDDCa+tBYYj42H4d7ou
CbnLuWka/JhQzYVVTf4FWaQ95GRg7413fQZyWHdzyIjd4m2P8smLT1tzCkjd
kpfLYGignV9LBvQxP0/+AxPxSVc=
  "],
 CellLabel->"Out[93]=",ExpressionUUID->"3fae3904-de78-415b-bf6b-5585c47a19c5"]
}, Open  ]],

Cell[TextData[{
 "Apart from ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 ", the utilized capacities of all other stations are significantly reduced.\n\
More important is that the work-in-process could be reduced from 422 pieces \
to 68 units."
}], "Text",
 CellChangeTimes->{{3.8252360666490197`*^9, 3.8252362648278418`*^9}, {
   3.8252363254711623`*^9, 3.8252363414508257`*^9}, {3.8252363742167025`*^9, 
   3.8252364111796355`*^9}, 3.825245577513214*^9, 
   3.825316649520543*^9},ExpressionUUID->"96446378-038e-4f13-a5f2-\
f6ebe04d37a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["5.5 Comparison of Throughput Accounting figures", "Subsection",
 CellChangeTimes->{
  3.823778699930626*^9, {3.824454830026142*^9, 3.824454831015752*^9}, {
   3.8251583017896967`*^9, 3.8251583066152115`*^9}, 
   3.825223033538582*^9},ExpressionUUID->"e52fb673-6605-45b8-8397-\
9e572c43aaec"],

Cell[CellGroupData[{

Cell[BoxData["financeDBR"], "Input",
 CellChangeTimes->{
  3.8252238633945503`*^9, {3.8253285647824607`*^9, 3.8253285681303406`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"988dbcf5-7be2-4fa4-ae2b-92510d137e79"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Throughput" -> 
        Association[
         "Balanced Line" -> 132800., "Constrained Line" -> 74200., "TOC-DBR" -> 
          74200.], "Inventory" -> 
        Association[
         "Balanced Line" -> 48600., "Constrained Line" -> 104400., "TOC-DBR" -> 
          33600.], "Operating Expenses" -> 
        Association[
         "Balanced Line" -> 30000., "Constrained Line" -> 30000., "TOC-DBR" -> 
          30000.], "Net Profit" -> 
        Association[
         "Balanced Line" -> 102800., "Constrained Line" -> 44200., "TOC-DBR" -> 
          44200.], "ROI" -> 
        Association[
         "Balanced Line" -> PercentForm[0.021152263374485596`], 
          "Constrained Line" -> PercentForm[0.009846743295019156], "TOC-DBR" -> 
          PercentForm[0.013154761904761905`]], "Customer Service" -> 
        Association[
         "Balanced Line" -> PercentForm[1.], "Constrained Line" -> 
          PercentForm[1.], "TOC-DBR" -> PercentForm[1.]], "Productivity" -> 
        Association[
         "Balanced Line" -> 4.426666666666667, "Constrained Line" -> 
          2.473333333333333, "TOC-DBR" -> 2.473333333333333], 
        "Inventory Turnover" -> 
        Association[
         "Balanced Line" -> 4.643356643356643, "Constrained Line" -> 
          0.8791469194312796, "TOC-DBR" -> 5.455882352941177]]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1, {All, All, "TOC-DBR"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TOC-DBR" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 3, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Balanced Line", "Constrained Line", "TOC-DBR"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 8], 1],
      "Meta" -> Association[HeaderBackground -> RGBColor[0.88, 1, 0.88]], 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[8]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1, {All, All, "TOC-DBR"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TOC-DBR" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 3, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{"Balanced Line", "Constrained Line", "TOC-DBR"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 8], 1],
      "Path" -> {}, "BaseIndices" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 1, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1], TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Balanced Line", 
                  Style[
                  "Balanced Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Balanced Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Balanced Line"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Constrained Line", 
                  Style[
                  "Constrained Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Constrained Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Constrained Line"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TOC-DBR", 
                  Style[
                  "TOC-DBR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "TOC-DBR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "TOC-DBR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Throughput", 
                  Style[
                  "Throughput", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Throughput"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["132800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory", 
                  Style[
                  "Inventory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104400."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Operating Expenses", 
                  Style[
                  "Operating Expenses", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Operating Expenses"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Net Profit", 
                  Style[
                  "Net Profit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Net Profit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["102800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ROI", 
                  Style[
                  "ROI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ROI"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.115%\"", ShowStringCharacters -> False], 
                  0.021152263374485596`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"0.9847%\"", ShowStringCharacters -> False], 
                  0.009846743295019156, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"1.315%\"", ShowStringCharacters -> False], 
                  0.013154761904761905`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Customer Service", 
                  Style[
                  "Customer Service", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Customer Service"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Productivity", 
                  Style[
                  "Productivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Productivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.42667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory Turnover", 
                  Style[
                  "Inventory Turnover", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory Turnover"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.879147"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.45588"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{480., {119., 125.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{480., {119., 125.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+JJHxPkORveOMaVfWfgAtKnuQNNuYG0x/5P0wSAtBLT
rfUguqVqMbMgkF7x8Kw6iD7W/s0KRLvkaUaB6Avnm8yFgfQru5kNIDqH23kh
iO6xVPoIonfs9vsHonO7J/OJAGknxZUKIJpTJ1IfRB/K77EA0V9Oz3IF0YaF
DzNBtMB38xIQvU9iczWILrls0QKi33i0TgPR7cvrFoFo3XdfToFollV9/0B0
33dTblEgLbRXQhxEP3yzXk4MJG7d7wCivV9fvWgGst9+8w1zIF2wPGq3BZDO
E1wpbwWkPxw5owaiQ2atjrUB2cf6blUskAYArdCQ1Q==
  "],
 CellLabel->"Out[94]=",ExpressionUUID->"b93c6923-b0a5-4ec4-92d1-37f3531a5cd9"]
}, Open  ]],

Cell["\<\
Okay, in this step we did not increase the Throughput, but we could \
significantly reduce WIP and therefore we get a much lower Inventory.\
\>", "Text",
 CellChangeTimes->{{3.8252364260711203`*^9, 3.825236485265548*^9}, {
  3.825236528117506*^9, 3.8252365496841254`*^9}, {3.825237580857521*^9, 
  3.8252375821628213`*^9}, {3.8253166724251413`*^9, 
  3.8253166798693047`*^9}},ExpressionUUID->"16d815cf-e7b5-4bbb-b92b-\
c20cbdfb3f1b"],

Cell[TextData[{
 "\nThe ",
 StyleBox["Rope",
  FontWeight->"Bold"],
 " launch does typically belong to step 3 of the ",
 StyleBox["Five Focusing Steps",
  FontSlant->"Italic"],
 ": ",
 StyleBox["3. Subordinate Everything Else to the Constraint",
  FontWeight->"Bold",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8252366443965073`*^9, 3.8252367219524937`*^9}, {
  3.825236753539707*^9, 
  3.825236754055711*^9}},ExpressionUUID->"6272b19e-72af-4449-bad7-\
60404d7b86a9"],

Cell[TextData[{
 StyleBox["For didactical reasons, I decided to launch the Rope first and we \
will make use of it in the following scenarios", "Text"],
 "."
}], "Text",
 CellChangeTimes->{{3.8252369470641794`*^9, 3.8252369618088446`*^9}, {
  3.8253167324948854`*^9, 
  3.8253167419913144`*^9}},ExpressionUUID->"0de8a973-ac54-44c9-ba74-\
4acf7ec75ce2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6. TLS", "Section",
 CellChangeTimes->{{3.8214561974537773`*^9, 3.8214562194485636`*^9}, {
   3.821458872285861*^9, 3.82145887737852*^9}, 3.8215184681349063`*^9, {
   3.8215188731756945`*^9, 3.821518874082848*^9}, {3.8244548605710354`*^9, 
   3.824454861120075*^9}, 
   3.8252230373679757`*^9},ExpressionUUID->"d405687b-deb4-449b-9c12-\
f4344fc00bc2"],

Cell[TextData[{
 StyleBox["TLS",
  FontWeight->"Bold"],
 " is an abbreviation for ",
 StyleBox["T",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 "heory of Constraints, ",
 StyleBox["L",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 "ean, and ",
 StyleBox["S",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 "ix Sigma. These three improvement methodologies are known in operations \
management. Each methodology has its own advantages. \nBy using the term TLS \
it is meant to take the best from each method and combine them.\n\nIn this \
section, we apply ",
 StyleBox["TLS",
  FontWeight->"Bold"],
 " at our constraint to full-fill step number 2 of the ",
 StyleBox["Five Focusing Steps",
  FontSlant->"Italic"],
 ": ",
 StyleBox["2. Exploit the Constraint",
  FontWeight->"Bold",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8252371017555857`*^9, 3.8252371567213917`*^9}, {
  3.8252372045571537`*^9, 3.825237336593275*^9}, {3.825237385287176*^9, 
  3.8252374730229197`*^9}, {3.8253167987713256`*^9, 
  3.8253168255907187`*^9}},ExpressionUUID->"ba41e9c1-6c81-4d0a-b70a-\
97fcb5ed12ee"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QlwVNed6H+9jFcM3rFBLF7YQTaL2W2QQCDMIkBiB4lViFVi32SMBRYG
zL4KIYQwsbGxIbbBGNs4Xokdb0km9uS9TJKplzdJ/OrlJVPzn5nkpSpV/t/u
0310+259+95f9+/8zjldv1KJS0tmaWPx9f19zgPzVxSXfy8rK2vNTcab4nkb
hq1ePW/TpNuNb0ypXLNkUeXCstGVaxcuWrh64Px/MC52Np777vVZWZH3s16b
yOe/vVbkPd9rmmK3+Qc+r7OZ5DbXOcxky1zvOlPY3JBsbnx9atK5qWmmxeai
89x8cXrSadY0MxznFoeZaZnmrjOLTQs/c6nEmFt9zG2XSr3n9qaZ7TZ3NM0c
x7nTYeZa5i4+b1hmnmXu9pr5bFomm3veWOA99zZNmdu0ss/lhY7TumnK3Sbb
Ooss08ZrFrNpm2zaXV6SfN6MTPs3lyad+5pmmePc7zDLLfOAw1SY50GvqWTT
gc8Vt1nBpmOy6XRlZdLp3DSrHKeLw6y2TFf7vMVmjWW6Ocxay3R3nXVseviY
nLfWe89DTbPBOm/H5mHrbHSbng6zyTy9vKaKTW/XeYJNHx/zyNubY/NOkun7
zpPe069ptrhNf4d5yjwDvKaazUD7XLXMVjaDvGYbm8HJ5tGrTyedx2JT4zZD
HGZ7bN6NzFCvecYyua6zg02ejxn27k7vGf7urqSTz+eHz3rPiKbZ7TgjHWaP
ZQpcZy+bUT7m8R/us857zjP6vf1JZ8x7B7xnbNMcdJtx1jlkmUKPef+wMeN9
zRE2E5LNxPePJp2ipjnmOMVNU+s2kz6wzHG3mewwdeaZ4jUn2ExNNtM+qE86
05vmZGw+dJ4ZTdPgNjNjc8ptZjlMo3lKvOY0m1KP+Sgysz96zv/M+eiM98xt
mu+7zTzrPG+Z+Q7zgmUWfOw2Zy1T5jUvGrPQx5R//JL3LGqac26z2DLXXrbM
Eq95xTJLrXPeMsu85oIxy31MxbUfuM6PIlPZNK8mnRVN85rjrHSY1y2zynUu
slntNZfYrPkk6bzBZm2yWffJ5aSzvmnedJwNDnPFMhv5fGqZt9hs8jVvs6ly
nXc++eSTP/zhDz5ryX8LUktcg0lmaomfYCJ3LfETTJLWktvwa4k1mGSmlvgJ
JmmuJdZgkuFa4ieYJK0lTsFE9FriJ5gkrSVOwcR/LbEGE2VriWcwSVpLqlBq
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
EhnoEmWh12n4tQSZLsGrJZoukYEuURZ6XadqLYGlS3BriUczgaVLLLXEEXp1
rCW+DhGOn4zjeHAw+LE4AtIlaLUEmC5JGXqVhS4JAb1CLOOg1ZIryNAryDJO
uFoiA10CC7061hI2C+3NJHpjyYj6HeYThI0piVYUlk1G1u8cdHVr3rntU1cd
YocFz59cN8i2gMOOFWZ0SUH9TuM5HDPheaR0/jEWZ4qr95uDybiDe+aW1Bpv
AyzjaOgVrZZgL+OEqiXxYIIHvSpPl4SoJTPQa8mHhKFXoGUcwrUEhC7Bg141
XYJMl1CsJSh0iZ9mQrGW+AkmqSzjYNUSGegSitCrOHQJRegVli4hVEtEgl6r
sKHXtCzj8FrCCklCM0k8RJh917KhDex+krxz2xcXnHSUWo3rzCcZbLvPxP7k
0vnHzLeUDDu3g/2D2D+LHZrDOowxE3btQ6RLlIVeZaFLlIVeNV0iA10SqJbI
QJcoC71WKF9LQJZxwtUSTZdktJYY8/RnH5qbSZroEt+1JJVgkpZaoqFXGegS
irUEli7BqyUy0CUaehWtlrCZF+VbjbeWYDLw6taJ8aUbdlcJm8kbD/DEwWKL
ccUNejXeL6rex0uL8WR+M4llpmw8aP60xofMLak1BxOK0CvsMk6gWiIDXaIs
9FqkfC2Zjl9L0OmS4LVE0yXKQq8i0SX0oFfYZRy8WoK8jOOzlrBhzSStdAlW
LQFZxlEWetV0ibLQayeIWqLpknC1ZBNd6DU8XWKpJeZNHEstsZ+Mkzjb7IcI
uzUTjwNxNPSaSegVZBkHD3oVhS6hCL2KQ5dQhF5loUuC1xKQZRyKtUTTJeLQ
JcpCr5sJ1hI/wYTXEv/NJHwtgVnGyWwtAV7GCVVLsOmSELUEhC7Bg16FoUtU
hV5BlnFC1RIYugQHem0KJmi1JAhdAlFLtnrXEkszSUMtqcGFXjVdomwtgV7G
waolMtAlFKFXcegSDb1SrCWV+LXkIjb0CrGME6qWqE6XpKOW+GkmUtIlFKFX
6GUcLOgVmS7BqyUy0CXhoFdNlxCGXvti1RKHYOK3liQNJj6bSdJgkqllHKRa
IgxdQhF61XQJ7VoiBV1CsZbA0iVotUQKukRDrxShV3HoEorQq1sw8Wgmaa4l
M7GhV02XgNAlZGqJdHQJYegVhC7BqyWaLkk7XeJ9ewlILWE9xLuZCFNLIJdx
KNYSWaBXGegSDb0SqiUC0iUUoddyiFqi6ZJwteR1utArCF1CsZbQhV49xt5M
NPSqGl1CEXrVdAnIMo6y0GuO8rUEZBknXC3JKF1iDybGjD2427GZaLpEQ68+
gknwWgK0jIMFvQIs44SrJXXY0CsyXYJXS0ShS5SFXkGWcRSGXi9h1xJkukRZ
6DXwMo5HM1EWer1d1Vqiodf2ELUEhC7Bg15FoUsoQq/i0CUUoddM0iWWWiII
9AqyjIMHvWq6RAa6RFnodRp+LUGmS/BqiaZLZKBLlIVe1xGsJQLSJbRqiaWZ
iEaXkIReIegStFoCTJekDL3KQpeEgF4hlnHQaskVZOgVZBknXC2RgS5Bg17T
TJckrSWPhoFer2roFbuWYC/jhKol8WCCB70qT5eEqCUz0GuJpkso1xIQugQP
etV0CTJdQrGWiEOX+K8lxtR89hFrJkLVEuhlHKxagk6XKAq9ikOXUIReYekS
QrVEJOi1Cht6RadLsGqJKHSJstCrLHSJstCrpktkoEsC1RIZ6BJlodcK5WsJ
yDJOuFqi6RKx6BJLLWETbyaaLtHQq6DLOBRrCSxdgldLZKBLNPRKqpakiy6h
UksEXMZRli5RFnotUr6WTMevJeh0SfBaoukSZaFXkegSetCrLHRJ8FoCsoyT
plqStJlISZcoC71qukRZ6LUTRC3RdEm4WrKJLvQKQpdQrCUaes2HqCUgyzh4
0KsodAlF6BWELlEWepWFLgleS0CWcSjWEk2XiEOXUIReoZdxlINeHWuJRzOR
spYAL+OEqiXYdEmIWgJCl+BBr8LQJapCryDLOMpCr03BBK2WQNAlJKHXGlzo
VdMlytYS6GUcrFoiA11CEXoVhy7R0CvFWlKJX0suYkOvEMs4oWqJ6nRJhmuJ
WzCxNxOKdAlF6FUWukRZ6FUGuiQc9KrpEsLQa18NvYaAXoGWcZBqiTB0CUXo
VdMltGuJFHQJxVoCS5eg1RIp6BINvVKEXsWhSyhCr+FvL7E3k3C1ZCY29Krp
EhC6REOvWHQJYegVhC7BqyWaLkGmS5SFXkGWcSjWElmgVxnoEg29EqolAtIl
FKHXcohaoumScLXkdbrQKwhdQrGWqAO9Jm0mGnqViS6hCL1qugRkGUdZ6DVH
+VoCsowTrpZouoQwXaIs9DoGopYALeNgQa8Ayzjhagk6XRK8loDQJXi1RBS6
RFnoFWQZR2Ho9RJ2LUGmS/Bqifx0iWW2R8epmchEl6hVSzT02h6ilgSgS87/
rpvPKfio1H8t2f3LRy/8rjufUR/N9h9M9vzysQu/62GeH/ieMR/N9V9L9v1y
SPwDc4wZ+/F8/7Vk/y+Hvvq7HI95zX0KP17gny458M+5r/3+IT4Tri30T5cc
/Oe813//cLApurbIfy059M/DLv7+4fj0nHRtif9acuSfh1/6fc9gM+VHS/1D
r0f/Of+N3/fiM/VHy/zTJcd+NeKN3/f2OZcTZ8Ynlf5rSe2vRrKPejM6sz6p
9F9Ljv+q4M3f94nMH1Kekk9X+a8lJ3496sofHuEz+9PV/mtJ/a9Hv/WHvsFm
7qdr/QeTk78e8/Yf+vKZ/+k6/7eXNEQ+th+fd1KZhZ9u9F9LGn8z7p1v+/Mp
//Em/7Xk9G/GXf22/9VvBzjOu56z+MdP+K8lz/1mvPljl3622X8wOfOb8T/8
dmCwWf7ZFv+15Pu/mfjet4P4VH7+lP9lnOf/ZeL73w6KzuBUZ+Xn20CXcbCg
V2S6BK+WyECXhKslMtAlykKv6wjWEgHpEoq1xE8w2d40Hyc2kzTSJSShVwi6
BK2WyEGXEIFev/suy+fM/KzY/70lP/5TW/PHlnw22f/tJZ8lfmxKM/uzKaZg
kuTeks/+1M78sXM+n+afLvk88WNTmnmfT0+6jMNvKfniT+3NHzv/i5n+by+x
fGxKs/CLWf7vLfnyT/eZP7b8i1L/95Z8+ef7Av8gF38x2z9d8tWf7zd/7JIv
5vqnSywfm9Is+3Ke/3tLfvLnB8wfW/HlAv/LOJaPTWlWfFXm/96Sn/75QfPH
rvxqof9lnJ8lfmxKs/oni/zfXvKzP3cwf+zanyz2v4zzj4kfm9Ks/8lS//eW
/OO/dTR/7IafLPO/jPPzxI9Naap+UuEdTMxV5Ot/65TwsT+t9H97ieVjU5on
f7rS/70l3/xbZ/PHbvnZKv90ieVjU5rqn60RB3qdgV5LNF1CGXoFoUvwoFdN
lyDTJRRriTh0SfpqCZt4MxEder0Nv5ag0yVYtUTTJcmhV/9fHM78bJJ/uiRp
M/FYxgnVTD6f4h96tTcT/5s4YZrJ/Fgz8bWM491MvJdxIJqJr02clJqJZe8G
rpkkWcaxNxP/0CtIM/FDlyRtJh50CXQzcd3EsTSTVV+V+9/ECd9MfC7j2JrJ
Ev/LOODNxG0Bx9ZMlvunS+CbicsyjlMz8buMA9JM/NAlTs3E7zJOmpqJpkuQ
aokMdImy0GuF8rUEZBknXC3RdAlhusReS9yaiTJ0CaFaIhVdQrGWJKVL/H9x
OPOzSf6hV49mkpQuCd1M/NIl/pqJM10SrpnM8E+XuDUTP3RJuGZS4p8u8dlM
HK0SiGbiiy6xdI+llmbiSZeEbyY+6RKPZpIUeoVrJknokpSaiQUqCdNM1vxk
kX+6xK2Z+KFLYJuJB1ris5k4Qq+QzcSTLrE1kxX+6ZLwzcQn9GprJqv90yXg
zUQ0uoRiLQGBXjVdoiz0KhJdQg96lYUuCV5LQJZxMg+9ugUTSzOhSJcoC71q
ukQo6NX/F4ezkjUT820kbs3ED/QarplM9X+OcLJm4gW9gjWTZNCrvZn4h15D
NhP/0Kulezg2EzffNVwzmeMfenVtJj6g1zDNZPmX8/1Dr27NxA/0+lOAZuIL
evXZTBxx19DNxC/06thMfEKvUM0kKfT6cx/NxO1kHJhm4gN6tXSPJ366wj/0
GrKZ+IdekzYTD+gVsJmkp5bA0iUpQ6+y0CXBawnIMg7FWqLpEnHoEorQK/Qy
joZeg9QSczOhWEuAl3FC1RJsuiRELQGhS/CgVwS6xPFkHOsX/D8f6TaD3lvo
/1icBV9M3PDzAj6D31uY9PYSfhpO2RdFG39eEJ1Rltlkma/5PM7msfcX+6kl
bMq/nFT19eN8hr6/xP+xOIu+nPzE16Of+HpM0tlsm2HvL/d/LM6Sr6Y++fVY
PvkfVPg/FmfpV9O2fD3WNOPYPOU6hXxGfrDCVzCJ9pCKr2ZUf1PIp+CDlf6P
xan4aubWb8bHZ4LbbHOa0R+s8X8szoqvSp7+ZiKfsR+s9X8szqqflNb808T4
FPmc7f9UbEzhhxv8H4uz5idz2EexGf/hRtfbS2zH4qz96Zwd/zQpcSb7nKKP
qnwei2PMhp/O3/VPU/hM+ugJ/8fisI99ls8vpvqfqR9v8X8sTtXPynb/Yhqf
aR8/5f9YnCd+tnDPL6bbZ+8vZiSdGde2+j8W58mfLdr3i5l8Zl3b5v8c4S0/
W7z/FzNtM8syB5xm9rUa/8fiVP/jkoP/vYTP3B894/9YnK3/uOzQfy+1zOHY
zPae+T/a6f9YnJqfVxz5H3P4LPjkWf8n42z/eeXR/zHHZeayOeYy5Z/sQaFL
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
imPNJCK1Vgxt9NFMnN0Sl2YSOx+nvOyURy1hyzi8mcDTJSFqCQhdQgV6/eNf
7/7uuyw+6z7fLwZdoiz0eh4bekVexsGrJaLQJcpCryDLOBp6xaslnwWuJZ7B
JFZLDkTHTzPBriUy0CXKQq8i0SXKQq/odEnwWgK0jIMFvYpCl1CEXjVdEqaW
wC7jJK0ljC7xaCb8u+ZsiyklxjvsyvTGOh5MJn1Qu6i0IbGZOFuvrJAkNpPY
XSXlZaeY7OpRS9gsTNZM8KBXVegSz2ZCni5RFnqtIFhLNPSq6RJx6BJlodfd
AkCvjrXETzMRDXoFWcZRGHqtxK4lMtAlFKFXTZeALONQrCUCLuMoS5fIAb06
1pIi92Yy5fzxuVUxA9Z8V4lxnT15eUHj9MY6toDDbhGJN5N6R+vVvIZjaiZ1
fGY2nmD/uCVTG00H4tQZ78+vaigvO8U3cbybia4loMs4zm6JSzPRdImmS8Do
EmWhV6BlHMK1BGQZBw961XQJJl1iqSXezUTTJRp69RFMsGqJDHQJxVoiDl2i
oVeKtSRf1VoiH11iqSWWm0kcp2Jo46zDdeY1HLaeY5my5Sc9msnkZM2E5ZH5
VSdZNmFJxBheY8yFxK2ZaLokY9CrUzNJVy0BWcahWEs0XUIcepWBLtHQq7K1
BGQZJ1wtCUKX2IOJYzPJcC0BoUvwoFdh6BINvdKpJeLQJRRrCRD0uhW7ltTg
Qq8gyzgaeqVYSwCXcSzQ65Tzx3mpMM/S8afmrz5pfK+FLpn0Qe28qnpeMxZP
PcU6CfskJUdO8GZivB9ZtxmY4JYYU3qkPn7duoAzq/HE4tJTlbmxH4PxnGXj
G8vWNMy4UM/biPFNSzNJZRkHq5ZQpUscj8UxGbDFxiz75ITc0KtIdAlOLanE
ryXodEnwWrKBYC0RkC6hCL1qugS3ltibibrQ62X0WiIDXRIOetV0CRL0Kgxd
QhF6fRQCegVaxkGCXiGWccLVkj3Ba4kUdAleLbGejMOnuGlq3YaficOhV7eZ
7DB15vGGXn2eI4xHlwSvJSDLOBmuJU7nCGNBr2eRa4kUdAlF6FXTJSDLOKFq
yaeEoVdNl4As44SCXtNPl3g3E0C6RFnoVSS6RFnodS12LUFexsGrJaLQJcpC
ryDLOBp6xasllOgS0FriGkyS1hLPYOK3lmi6BK+WyAC9luPXEhnoEoq1RBy6
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
k1v7dqBJl2y7r6wg8uVW344965ay9x2biSNd0qVqKnt+hxXjM19LQJZxwkOv
988czn4Rcp6Yab+ZZMCJVSyb3NWvszR0Sa/Ns2M/5VVTvOkS/sx+O8pFo0sy
DL12mfV47H/7PrnATpeMaHiCrbTc2687CbrED/Q67sUd7KccXbpxoEvaD+9v
fG+vxZNb98+JNxMNvcLTJVPPHWC3Xtzd9UFeS8zTbeII9js17mh1ZpZxwtUS
V7pk6undWdGVnLG7qyzNZJlrMyEMvc5/pY7dR3Fv1468lpiXcXoWjWa/DtNq
d4avJZmnS0zNJAn0uvh8I/ulmLBtk/B0iaK1BGQZJ1wtuUYXeiVNl9iDiVsz
oUSXaOgVq5ZcCV5LxKFLMlxLgOkSJ9k157ll7OuNNmX5btDrg1XF7Dld980N
VEsQ6BIz9Nqpakq37SWsirg1EzeuZMCFTez595cVhKdLKEKvg74f27buWD7G
TSzJ2TyTPafvwaXUawmbEa/VsJ9Rl/JCb+t1xGvbY/92lBemq5bg0yXJoddR
Z5+OVaZFRW7Wa/8tC9hzcg+vFZwusQYTd+iV3WrSun8PO/E64shG47uaZ98z
6dJB72YiJfSabrrETLyyJHJji1scgwm7seTWNvcaz2nb/2HS0Gv7Ab0i/wat
W1R0rIY3E/P9JLZmggu9BlzG4dYrSyI3tWieGEwS6JLb27SK/Dd6QB+RoFfX
YGJRXh2biePJOGwrp1W3zv5qyVuKQ68gyzgaesWrJcToEsexNBNl6RJloVeR
6BJloddQdIll2q8Yw77ueui55W5iSa/zsTtjW894jNeS+1eMNa7cmdvDUkty
ji+K/dXp+CJLLbl/xbhbOmez770p+457C/v2eq7SXEseOr44Kyqv2msJ25F5
YMU4Sy3pur2E790YzzHez9m/wOMcYXsz8T4Tx9ZMhKBLMlNL2Mk4XVfGitng
5ze6NZOhr1az5zwwczjPI/fm9TSudFs1yRJMjCtZUWfVkkryXt32wMz8ZnFg
9tYu7TqXjx326jZzMOm+KkJDtMrrZSkkg0+sif0gT6yx1JIeq6bc1qUd+17j
k7cfP3joC08kPRaHN5Ou5YXex+IMqV/Hntlvx6L0Qa8C0iWWY3F6r451s1Fn
n3aDXgsv7o39qpaM5p2k7fC+xpU+q2dZaolxJSu6y2MPJo+snsWXgJpnt+ww
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
pK+WsLHv5jiejHNPdI/GvImT2EyaoFd7M2EWynXNb4pKJh3Z3B4ddq9IrJlc
re6x39JMmo7FYdd5MzHeYVduj38qPkw1sTQTnkQ8monlHGG2lWP8CHvXLadL
l4SpJfbdHI9DhNluzl39uox0aCYJ1mtnWzNh32yWfReTTIy5Oz6xv+PYmokF
erU3ExZGrm9xM5NMzMOih7mZmMMI28oxnvNY/TpLLbEcizPytWd6b57TLPvu
2A9yxyKh6JKM1RIWSRJ3c1wPEWZ7NMbTOF1ybzR38GYyxbWZxMLIDS2aMcnE
PKzY8GbCS4hHM2HH4vRcNJldid49kjBMNYkeiONwiLAxubtWsBKSFTVgWTDh
eaT/mtlmusTWTESnSxChV8dasiC6dPN/k+zmeJ0jzHdzxh+t9m4mi5qaySyW
RwZEw0hWtI1Yhqkm7Qb05Gs47JnuzaQXCyYT42Hknq4d+B4Nm3viqgkLJiyP
3Nam1YLLjW7NxNstmX469jfuvrMnZWYZJ2QtYWOCSrzOES47H/v3enrtLqdm
knAsDrvOm8nQpbGvWO4f0MeYB0zDVBN7M5kZayZNdImlmcyqja1cteraiW/c
sOGqiTddsuDMMfa0wXOmW5qJnS6Ztjf2Qio7UysNXUKxltSoWks0XeIYTByb
iaZLCNElFKFX6GUcFaFXt0OELc3E4xxh1j3uzO3R36GZJJwj3N2lmXg84qfh
mJuJ9Rxhdt3UTAq8P+fdeTmOJ+M4NhNLLeHBJCtOv4arJWToEu9m4n2IMCsk
rfJ6ejQTVkjcmonHY/CJNYnNpKvlHGG3ZuLxyFk1xX6IMGdMzPSrvZZYygnL
Jte3aCZILUk3XeJ4LI4dd3U8RJg9rd3wvvyuEt5MLGcHm5pJ7BBh1kw8Ho/E
T8Px10wiN5bwZuL2aD+8n72WmJdx7ovfecLokpFHIidt3dnlfov1amomKdMl
eNArJl1iqSVlrs3kxXE23NVxeCGZ1LjLrZnwc4TZdXszcXt0yB/so5lEhCV7
M3F73NjiFpZH2PnC43ZXma1X3kzMd5V4QK/skxhvxaRLHM8RdmkmlyznCPNC
MvvMIVszsR4izK7bm4nbo+uIoXwTh12ZWbvbcnwwbybcLfH+nDe1aO5WS/gy
Dtu7Md5amknUgE2gS1a99Qr/Lkswwaslmi6RgS6hWEuw6JKkzYRiLWmPX0sq
sKFXTZcg0yWZh149DsRpW5bP/mvb+/xax1piTO/zMd7h/hVjPZoJKyRuzeS2
vh0HWE4QtkGv5mYyKHHY9Wgziazh2I8Mdhz7zSSWZmKvJcZ0XDGBPcclmASv
JSDLOBmrJWw6lscOFMh9tdotmOS9GvsN6rZqEqdLLM2kwLWZxL4U7Fw+ziK7
2qeLpZnEoRK3ZmK89YBeLZMTB115MHG8vcROl3QrHx97NR5cITf06naIsDF8
6abw4l63YDI+ftZw9GThhGbycLJmwhdwjLdTbbs5FujVsZmwG0vY9Z6LJrNN
HLaAYzzcoFePWsKGRZLIy2bxlJkfnjLeuv9Vqekx+dJhlaDXIHSJPZg4NZND
Zaalm16lE92CSfnHL/WOnjV8Y4tbeCExN5NFTROJJLE/T2zNZLHpfBzLsTic
LmHPtDWTV8zNxLyAY7zDoVfz8Dzi5xXVd/Yk75NxrM0kQ7XEL13ido5w7Ddi
9hTHWsJmwJzIH93mk4XNzWStv2ZiOQrHMusDNZNZtXu4W5L0WJyNiSfgWJrJ
kvON7HOyZmJZwOHflbZlHEVrCcgyTrhaco0u9KoUXeLdTEShSzT0ilVLrgSv
JeLQJRSh16ZgEq6WsOlxvJz91/b+FWMdgwmnS4xHz+cqOF3CLt6YfUd/E+vq
1Eyqs2cMyYoemuMdTAZe3dojrpT0PrPSpZkUsGbSbXsJu9L/wkaftcTSTBxr
iTFdqmJ/cTbeSXp7CUXodbjvWsKWcQacWMV+QbqtmmSvJZajcB57fiO/q4Q1
k7bjB5tkV0sz2cuGnY/z4Mx8j1rCIglrJs2y7+K1xN5MWBLpMCva9Lq08xlM
em2ezT4DCyY+a4mtmawkQpcEryVOwSQSRkY0bI79y7t6lr2WsOFdZfTZ7XwT
h5WQDhNybc1kEnsyryLdSiL57s4u93nUEkszGXv2GXMwaWomiyezNjJ0V+yk
16JLB1KtJew2Eksz6b8m9kLyfky5dJgc9JphusRSSxybycYvDrEk8mB+ZDfw
1jb3lr5Rb68lxsx+o54hrt0njrQ3kxnnDvFa4thMxjwbO1R67hsnPWqJuZmM
rF7BawmbdvFqwdCS+ZdPxV6lu6vcagkb9iP3ftibiWUBh+37dMp/NBz0mt5l
HLtY0iU/8vXD7W1aLX3zrL2WGLP0ylmmf/QsHsPpkulxpWTh+ZMezWTdJ5cn
7Y29BpZfecmjlrBlHPbMwm0bzMFkg62ZVF6JvX4m792WLJg41BI2TCnpNiKX
X2E/zeHLFliCCb8FpezMcTGhV3HoEg294tUSZLokw7XEmCPxZiIfXaIs9CoS
XaIQ9Pr7v9xmnszQJW4n49zSOTsr6o30OL7IUkv6v7Ml53gM4b+nsK+ZLulc
M5Ndt5yGw04Qjnxpum8+g1671sT+D13v51a41RI2/S7E/qZjOg0nMsY32fX7
ygpYEul/IfYVbOeqKT5riUszSQgmPbbH/r7TbkZuJukSdOjV/RDhyDLOrV3a
ZkVtkAEnVtmDycB4VGk7frDZLXlgZuQWpsTTcCLHCrNCkhVvJqN+uPfB+DM9
agmbR56JnexpPg3HGHaCsPEYGG8mfXfEYmDuC5u9a4kx/eJP7jBrZNJaYode
W/brFvsZvbZDBbrE7VicO7rclxX1RkY0bJ5sCyb81JsOE3LNdEm3ktFZ0ZOC
TcHkxISL+9lnyzI1kyE7Y2Vs7NntbrWETdHF/eyZgyKn4fBgcnLwlthvNG8m
RZcOsCvGdyWtJfZgYr6xJG/XSqdDhGN0iXk3R9MlAWqJdzN5/NnYfzu6Txxp
qSVsOkSjivGYfu4QvzjnjVhDs5yGY3yTXR+wZBa7pWTuGyfZlRHVKzxqCZuW
0TrBT8NhM/X0bpY+eDMxhnWMnKJRbrUkcazQK/sh2Xdz7GJJ4e5Y0hy1dXVi
MBG3lrAp2rMl9u9s0Rh7MDGmy4gh7All5+s5XbLsSuzWI8tpOMY3Y/9dWDqP
JZHlV2J7WIXbNnjUEjZMI+ldPJbXEmPmnTnCaka0mcTuKuHPDFBLjJkaJ0om
bNvE6ZJuIyIYlN167R67nq3pEg29ZnAZJ/Va8rkc0GvyYHIkPrZmAr+MozD0
WoldS5DpErxakmm6xPxVnzGZoUvczhHuEa8i1zW/qW3ZiIefq+C1hN9hcmP2
HX3Orze7JcY32Xfd0jmbZZPu++ax/BL72nXffH5LCbtuvH24brG5lnTdPuuu
vBwzXdI8FnBuztm/wPhm7zMrjSfwz8mbiTFtZwxlz+y2vcRcS3rVLWtV2N94
m6yZ1Fimd91yZtK2LuxPC3qFXcaxQ6/8VpPrW9zcqXzso5GbSWK1hN9hcnP2
XXmvbjPTJX2eid011G784GGvbjOuPLy55ProKTyxr97jVWTo81Xsequ8XvxY
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
60abmbqEfloC8tzl9tTJAKk62TreYTktYeoSJVoy/MvnJ3+9BSXrZqcCMAFJ
vzYancutU/rwL/7Wmsr56Etf4fovsnwHro3pU5dErOgVUzNOCFoCk3F+ktRV
5eDkZDjREqYuoUddErGiVyzNOLpFr5LxBCPFTEykJbibcUiJXomrSyKUlmBp
xjFGSwrtK3pVry6RSUlUrtv6wWpUlscxi11dYhtaQqe6RJiLDTCOXI/1FeLI
8iZfsI26hJzolYC6RAxMYFy5XiLT3p2XOw2rSxgtwaku+X//4y8//fQzKAVv
tijQEpjkmi5wNocfjbameKYefIrbbulUJznR6xnStIQudYlk8m/Mxh4OWH9V
cWX5C27M2UJdErG0BEszjh1Fr3XkaYmN1SUCWhLMj5czEyZ6pZ+W0CJ6xdKM
E8Gi12OkackJTbQEZnVlo/WDVUdpCxO90k9LEoOJqWqzvkJiyjy2oCW4m3FI
0RIN6hIxLYFJqPZbXydrywNM9EqTuoRrw1HJTBAwAdne0wfOZk7y69YUT0nc
S+Dptrf32130moWDlmBSl2CmJTAptX3WX1U2VfTqUJfYUfSKRV1iR1rCRK9Y
RK9YmnEspiUCYLKcmdheXWJH0StTl2BpxiEmeqVIXYJH9CpHS2BWtddYP1h1
eOrNbsYxRksiUV3CByaJvKzpbLG+QuJ9bREqesXTjKOflqhsxhFnQ1fA+jrZ
GGjHJXrFqy4hRktIq0v2XRv5OBQz4dMSmFdmhrlX/b6mP372sxYUz8aXq8DT
vTI5wtQllKhLxLQEZnffuPVXlZc6x+3ejGNHdUnEil6ZugRLM44OWrKcmdib
ljDRKxZagqUZh5zolRZ1ia1Fr3K0hAMmIKfLrR+sOkaFMhPaRK/hoi7RTEsE
wAQkYbLJ+gpJHG8xRkuYusQ6WgKzdbrd+jrZdrojLEWvL5OnJarUJZKiVwVm
IqYlKLFHOeb2wVe/aXbl/OrP/ppbyXbYTyctoUddYjEtEQMTkENz09ZfVTKn
puxLS07YkJaEnbqEFC2hRV1CTvSqqhlHEAEzCQvRK151iWbRK1OXRCwtoUdd
YoyWiJaX8BKV32blYDUq1x05olfczTimiF7laAmKM99jZYU4cz1M9CoCJqRo
SSAkLXnuykKi831W1okr18vUJaRErwrb4kgyEwVakn6dy4YGTmnSvjLR7OIZ
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
/QzKyTs+3bSEB0wWNsHZPcQNyfZvyREXT07y6+C/XuwdDklLGDOhISGZiUpa
EszV55pHlK8qafWDGmkJB0wYM6EhiJnoUpfopyVYmnFU0pLF3Hul7WzkTK7R
IhNr1CUCWhLML5YzE0PqErl8bzr7+2cOr85qA7/yxprrxA++Sdlcf5N7qWZ6
fnimAHszDjHRqznqEgEtYcyEhsgzE220BCa6p155sBrT0agDmDBmQjwiZqKZ
lsAk9XmUK2R9l7ZmHMZMqMoiM9FPS2C2DXQr10lqT7c+WsKYCQ1Rw0y00JJJ
/sbBmZe5jSldB9x/uO9+fuX88bOfjd/XBP7r9dmzaoBJ7o1pVidko8BMNNES
mAMjU8pXlX39k1ppCUgZYyYUBJ6CcFKXSNISmIYb78bmBCJhcu3K9De/cU9L
Mw5mWgKzyEzMoiUoP2oqD3aP9uk+bh/99pNPl98++c//+tXH/975xkcKd/74
9//rQN/PlR/5/Acfo8dsmP8XfT9eXD43+nqytirs1SXYaQljJjREhpmoBSaI
lsDETtcoD1bjztZppSWMmdAQHjNRS0vEwARky6xHuUI2T+mkJSDbGDMhHcRM
dNMSmJcu9CnXyYsz/WqaccS0hDETGhKSmeijJSjrirkujFtf/x6/eD746jej
OA9AuwpawgETxkyIR5KZqG/GQbQE5tjVy8pXlaMXLmqlJWWMmdARHjMhS0ve
NZWWoKQHpg1OrsURT7fRDcyXxfcHXwST8d/9xx/hfcBfPvyffxi7+29Yfhg4
ud7TNmWxukRAS+SYCZZmHD4tgfn+mcOrsrmlJhuqruo7bnJnENzA2VG4873f
/F75kT/5z/9Cd5YkMCGzqfYG+NVWZ3keO1MYxrQEl7pEDEwYMyEeETPRSUu4
BC0lzuNtcoNVR75bBy1hzISGLDIT/bQEJea4V65CXPnKwESJlmxjzISCwONv
hJbAvHK1P744IFcnsUf96tUlUhlidUI2CszEIC2B2dY2AM5vy7Ob+cXTvjIR
fDGlsU8NLQE5zJgJ6QiYiRZaIgQmMEkneuSuKmuPdqpRlwhoSdltLqxOiGeR
mYSJ6LVVnpagpSZxuR1GJtfiKEy3BcwETJkRKhHfPv79/9K9DgEGTq6jswMt
iotMzKElQmDSvZyZmERLUJ5oK+V+95yeNM893Sfxzv/4/9BXwLkAZ0TyPCLY
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
jKtL5LKrb3RX94jktjhHZHpz/urb39pUXpSnqzdHZZ2kWctMPpLffVi8Zvsj
GTknuqfyjwreX/i/Kd8VrLxLqWSdgOgWvfKbccQ742yvH9paM6i8ibByb859
998ftXOHvt4c/uECx4d/BQ7pacRVJ2JmYlmd3FncNujO4pbc6KeV+/xRTalQ
ri7RIXoVx7sYcW9O0Gpy+6WG02om1+IoTLcl6xZq3PjLuX/18b9Dv43KZ4ST
6+drxs0XvapVl/CXl/SqYyZYRK8KtOQHM4dBHhkviMrkdtbYXK+ZhlmZBQ6W
4X1i7BhTl4RUlwhoySIzOcSnJd8N0hIYI+816BqL6DT/4q88nIPaRnBZRstH
xW8r6pkJuv5LPhf82AU9jkIjp9ZOQOUfUk0QM8FLSyAYie1oig00q6ElYmaC
aAmMeXWiPMdRUyfqmQl6LklIiz7ikft2wTNqOulorzF9yrUlZoKBlixBkqQu
f1K7Kloix0wQLdl+uR3EeJ2AM44+J+U3yplaJ4IXPsE6gR2FaKW0XgesZtGr
HC2B2drTu7WzRw0t2SvDTCAt2XttZF8wpOoEHl4wy0B1Il7JTGedwPsgl0LI
HzVknUgxE83qEmVaApMxdw5EDpgEmUmXmJbAmFcnaYpzYTV1oomZwHtKzobQ
+kP0OHLjECMOClSNmi4py5kJNloCkz5wbl/vpEpgArLH0yqmJTDG6wSSk08X
b+LPWcyoE/EL37I6UbjmwM+45YbTyqWiXl1CTvSqR10iBiZeCQfsbe+dn/ju
/KTu8juuTL8tJteOgz5Hhq/h0rs0iF4laYkyM8EoelWgJSgrayu5+Vr+IPFz
p5D4Qk5E/ExlLbW0RBGYqKUluvcRVqYlz8yeBIHMREBLcDETGDQsQaNHheGc
gjTPCDORG3MK/pdCZoKdlsDEn20Akacly4AJiDPITAS0BBczkasThRGFyjrR
wUwkfzbx/6of6igHfdypVf0qqJNQwEQDLYFJmeKihpbAbXEgM/ny1/+v5bRk
AZg8h4OZwIidHqbWidxc2OI6QUFd7foGrjpEr3K0BGb3zCCIAjDZuzyQmfzZ
1/9GTEtwMRMddaIgVzTITMyuE9jpI7CjKP+oIeskNqul7E4A5vCNs0ZEr/KZ
UVhespjzkJkIaAkuZiJXJ2nyc2GVdaKDmcitfRL8rxnMROH3Va6TIDPRKXqV
oyUwRRcvg6ihJRCMQGYioCW4mAk69fAo8eGkeXUix0wsqBOFSweyjGo6dIiZ
WCN6bSVKSxAzEdASlNfaJu0yuX658QxV6pJeqUgyE4zqkpC0BOThmcOPnDkK
l5psqr1B/PRJZkvDbe6VmOF9YvyY3mYc9bSk0L60RAqYnFzI3MkVI3liWoKX
mYgZuNw1GV3P7/3m9/yP58RvFpGzzsQILVGzj3BIWpIQBCOxY6ViWrLuYgOI
eXUiN6JQXyeUrzNBD6sbmKTJM5OQy0tCbiIsBUwkaAnM5tMNq06kwz/5tAQC
E4zMJG1xnap4fmpGndCzzkT802rq0IHHHyMtkdwWRxmYgOyaDKwpzQ7+KaQl
eJmJ+jpBghFB05OR3hzL6gQ9kfJN/RICePwlm3GspCUwB6eGxLQELzMR10ma
zFxYfZ3Ya52J3O+rpk6w0xL1a0v4YCRraEBMS0Aqbt/EWCeC4aKpdUJwnYlC
/46+MoOnwFpagrcZRwMt8d75Cchr5bViWgLT+MZ7cKkJ5ZNrZ4av8fJ7pNUl
SrREkpmYrC6RoCUoK5tOcZ84HBkgfgYls+YotynhU7U1xNQlemgJzmYcXbTk
BKIlMJK0BC8zEQtU5Uae4rckGPHbinpmgsC4gs9EzYeDVDETK2mJdIK0BCQR
HzMR14nciEJ9nahnJmCcA7+i4B9Q86GP+rkwGpkYASZpUszEHFoiBCbblbKM
lmBnJnIvWzPqRPDCt75OxMHDTLSrSwzSksWMwIhpCXZmorJOIMEQb4tmhJlY
VidouqR8085MZJpxDNGSafW0RJKTmMRMxLIyeNAEb/fq60QTM4F9qcqeCoVv
Fzyjjl8f1aqm3bj4zERDMw5uWiKXits3YTDWidzL1ow6Eb/wLasTMYER/FT6
ljjiUZdYTUtCq0sEtIQfITC5u5AD7efpn1zvaZ0yQV2iWfSqDEz4zMQadYkk
LYF55Gze6mw3OHQbqq4SP4mCbKoNrrjL9DxxpiiyRa+am3HUAZMSEFzvNWic
iaiF3HVb0luF3tDFcxw1zAR9u/jtA+EUcTOI+GHpYSbGaYmyuiQELVkOTDAy
E3GdiM+m1jpROKHiO8Mxifh8oZ2RxYu3dc+FUe1p3ShHrk6MqEu00hJFYCJB
S/AyE3RO+bNR8+pEbo5jTZ1IBilZNBmDlzETvbREpehVNzDByEzU18mdxb01
BY8AT7TkHIf+OjHSmyNgJgZFr6qXl6ilJSD5N2ZNrRPJt3v1daJwQsWPjBwR
4pczfGR+M4gZzARtJCS3o65CnRhXl2iiJWqACaIleJmJ5HZX5tWJ+IVvZZ1I
ul5RW6g+BywNotc2UrSEB0x8d3/acvNebE47zZNrV6a/7Y0PaFOXiNP39v+A
zMRKdYkkMFlcalIBjl7M4T7i51GQuPxBbpFJQzU96pJwoiX6mAkYAYJLN39P
cPAWjEZu/Mssum7DQSO4G3yzRm8K6L0bPBSyg0p+LgyfC/yJ3kfEd0ZDAqQB
h1pp+L7Af6OhnJmYQ0uEwEQ9LdHHTNTXCTqb8Bwh57/6OpGrNMk6QRwDPB36
2cAX4ThBsKmNkTkOanbWOvZQqBOaaYk+ZgKOEjjm4Fzz+SfaR0+what5dSJ+
4VtWJ+B/QYWAR+b//Ej7o5W2LTATM5txDNISfczEeJ2gE4oWY4D/QsdZkplQ
VSeSwcJMrGrG0UZLYEytk48WN2+F5wh+i/o6kas0yTpBDI2/jTi4P0Kj/PYu
g54K8O3gKVDhgUdGQi191xOaaYluZgLOO7zwogMF/o7eOPhkybw6Eb/wLauT
NN7VA/wF/mr8t06tsnoRM8HWjENW9KqDlsD47/709eBSE2on1+neGQrVJQJa
ArPITAjTkodnjnCZylud0woOYHLlJeKnEmVjzXXwI63Odj8xWWQCLQlbdUnI
Zhw+MNHBTPhqccENXMAFbBzt/sB/H0FvCvBb4CUafAX+hT+eRH0c6Ib+Vzz4
RHu5im9ym9uKfzuVzAS9M0reNHVh8JmJlmYc/bREZTNOojFmoqlO+DtCfro4
hFBfJ3KVJlkn4qdDN7nNKPXNcZSL5FNd+xdYqS6RAyZytITLFc3MREHUAM6p
4HSYVyeSL3zidSLYJEV9nVipLtFKS9KvjYJYXydpix/Ufhp8R0BzEMlTT2Gd
SMYgM7FeXaKeluhjJprqROyO1loncpUmeWcFVbVgzIDF7Sm+6aD3MszEdHWJ
elqim5nIHSXwshWcDvPqRPKFb02dpMmPmcVHQH2p0Kwu0Sd61UdLYDxv/Tj+
cAedk+vYnHbvzZ9SS0v4wESamWinJVrVJdLAZObIIzNHVrjLwTGMzulO89wj
fkJhYg73cYtMmqtMEr3iVZeQoyUa1CUCWgKySjszgYs3wGAejSrBBRbuCS6+
M/8DU3Bx5i85AG8icKYD/gR/R4sQBONJPvkHD4Xm2vB7xYNP8GOgNy/4ZiT+
wVAjp/gHht8bsuEXOzOhSl0iGVPrBNwZ1QO4P7qP+jqRqzS5OgFfAfdHc23w
LeijFn7kvv2O1L6fgsjNpNBNFzOhSF0ioCUwOsau4HSDY8UfvIGXISge8ekw
r07gFyUHn2bXCfwcXPxK0aQxEdQJVeoSMTDRwUyw1AncThQdZ3iQ4fxCcOop
rBPJQKmCYPmE+jqhmZboYyaa6gQeebRBFVqDob5O5CpNrk7glQo9MlzqIG6W
USizT0OJJtD1BFUjfBYj1xMxMLGYligDE33MBBwQuEcwqhNQM+Arkr1LJtUJ
fP1KdvaZXSf8Xw29WOSeSH2p0ElLzFaXiGkJSnbvBTon1xntc0TUJVppiTQz
wUBLQqtLJGnJQqbyVh2maKnJhqqr3CKTHIlFJuGuLtFOS2Z10pJVupgJC96o
YSbWqEvkaAlenwmLkTpRBCaEaMkiMNlxpQOE1QkNdWKxukQTLdHNTFiw1wkl
oldJWqKbmbBgrxPzmnGM0xKQSqwOWBYjpWKxuoQYLbkTmpagpSZr87tom1yv
ye3w3vypMVpilrpEMkvMxBLRqxItWcyP/KWcEya7c5v7fdKn9V50Tje3yMRd
ydQlGNUlAlrCmAkNUWYmFoteGTOhNpLMhKy6hL+8BAITxkyIR5GZWC16laQl
jJnQEClmQkz0ypgJtVlkJhSpS8TAhDETGqKGmYSlukSOlqDkDV2hbXKd23vJ
LrRkGTOxXl0iRUsWMn1kVV4LOJhJ5XNkT2ty5SVukUlu2+PThURoCT3qElNp
CWMmNESOmRARvcqkEYTVCQ11YhUtUaUuEdASxkxoiAwzISN6laQljJnQkOXM
BH8zjnFaAnKUMRPSQcyEHnWJgJYEc4vVCfEoMxMtzTikaIkhdYl8fua789PE
gh56Jtfxhzvb7/ycWnWJAjOxipYcDkFLuOSBPNEeXGqS1UGUhi1wsCe9FbjU
JXakJXhFr5K0hDETGiLJTMiqS8TAZD1jJqSDmIk1olc16hIBLWHMhIaImAkZ
0asSMLnOhdUJDXVClbpEDEwYMyEeePypUpcIaAkMqxPikWMm5NQl5GkJTODu
zwpGr9Ezuc4fuGKyugQnLekPRoqZmC56VaAlII8G82xhMzikiSXTpE5rUvkc
+AFW5bU+PmOOusSA6BVLMw4R0atMSkHYew3ZCJgJbbQEAhPGTIgHHn9KRK+S
tIQxExqynJnQSEtA9jNmQjqImdCjLhHQkmDmWJ3QUCc00xLGTCiJJDOJENGr
HDAJ8LKxuJ+GyfX6gp6Oux+aLXo13ozDByb97/xqOTOxWl0iSUtgnug8CY6q
81Bga+t71p/Tbe73XVncqPvJwKmwFr2SbMZBtARkNWMmpIOYCT3qEgEtYcyE
hvCYCS3qEsZMKMwiM6FIXcIHJvsXw+qEhjqhSl0ioCUwrE5oqBMa1CVytIQx
E0oiYCbmqEtIiV7VqksEy0v4OTb+Bg2T64Lha5SrS5bRkiAwWc5MSKhLZIDJ
wlKT49z8aN1JAjQsqZRbirmqsOWJGSZ6NYmWLAMmjJkQDzz+VKlLBLSEMRMa
sshM6KUljJnQEDEzIa4u4S8vWcwYqxMa6oRmWsKYCQ2RZCakRK9ywIQxExqC
mElYil61NuNIJqVkkOzkelNxf8fdfyKoLtFBS5YzE7poCczjfcXg2Doy/Kkt
71h5Tre2vuc8FABPvbKrlKlLzFCXCGgJYyY0ZJGZ6KclmJpxZGkJYyY0RI6Z
EBG9MmZCbfjMxJpmHK20BIbVCQ11QoO6RI6WcLnJmAkVdUKJ6FUyVcGwOiEe
eAqsbMahSvSqTEtgSs/dJju5PjFxi2bRqyQtUWYmVqpLFPJsMTdFSiietPK0
JpZMLywy0UVL8KpLyNESE9UlAlrCmAkNUWAmpNQljJlQGDEzIa4uEWTnlU4Q
Vic01AlV6hIBLWHMhIbIMBMyolcJYHJzIaxOaKgTqtQlYmDCmAkNWWAmTF0i
n/a7P99aPkxqcr2peMAMdYnZtESOmVivLpHLD2fyHx86vkDDmu9ac05TW96B
HGxF38nwUpdopyWzFtESxkxoiBwzMa4uwUVLGDOhIXxmYi4tuayZliBgwpgJ
8UgxE83qElNpCWMmNESKmdBFSwqCYXVCQ53QTEsYM6EkCszEBrTkjn5aogaY
tN/9OUz13F1Sk+tTU3coF73KZWA5MzGZlhzRREsWcj7/mbJ6bipXNGHNaU0o
nuQWmZxoYuoS7OoSOVqywEzy2ri5WBsBKxFLGnyjyfTipSVYmnFQki42gTjz
PKxOyNaJI9NLlbpEQEtgHFk+VifE64Ss6DVdkZbAOFmdkMw9zkaY6aNKXSIG
JiCuLD+rE+J1QqIZRy0tCeZ2dHaA1QnxUnFl+sNAXWISLUHZWTNm/eR6W/kw
/aJXSVoywGMmxNUlkrQE5vHh41EZ3qiDvpSmO2af09SWdxwZ3DvjioESM2gJ
PeoSUqJXJWZSyDETC84yi2Tlc3OcPDclolc5YALiKvKwOiFbJ648L1XqEgEt
gYk56mN1QrZOYvJ9lIheFRJXEGB1QqxOmrnPOuPyA+qbcaynJTBrCzpYnZCt
k/j8DqrUJQJaArOusJvVCfFSSTjaKQVMSNESkuoSOWACl5o4MnwWT64rZ+7a
RV0iBiYyzESzusQkWoLydGUtd8EsHDP7tCYcPwOe6NmyBiZ6NUn0Kk1L5sq4
nGoGBz/p1AXiV90ITHLlJW4uXNJmsbpEEy2BialwszohWydxJV7dtMQMdYlk
1lb6WZ2QrZOE0naq1CXiHLg+llzVxeqEbJ0klXWRaMZRS0uCmd9S3cfqhGyd
bC7vo7AZB9GSqje5bKsZZnVCvFS2nho0sxnH9rQEZXfjGSsn18/XjNuXlgTz
6+XMhIzodQmYiGjJwlKT8aLgUhPvlobb5p3TlKY7UQe5jyZXDJ+wWPSKpRnH
FqJXWWAC0s6RsdgjA8SvuhGYNUe5N/o4XzMloldJWgIT39nK6oRsnST5yYte
lYEJyMbudlYnZOsktb2HWloCgQnIc70DrE7I1skLnSNUqUsEtATmlf4JVidk
62RP11maaQlI9Zu3Dw7OsDohXioZPbM2UJeYL3pVTsfdnzdcfje41MSiyXXd
/Ds0qEt00RIOmCxnJkRpiTwwWVhqUg2Xmoyad1rXFnHvic+eqrez6JV4M44u
WgIzVR6Vw7VdJDNEb202VF3hGnOyPWun6qlSl0hm/flmR46X1QmpOnFme1PP
06UuEef5K5075judOT5WJ6TqxJXte3l+yLJmHB20JJjxfZfGonP8rE5I1Ul0
tj/r4hRxdYkCLYE5cmU2JjfA6oRUncTk+I9fuWJGM44uWiIEJtWLKb9+Iza3
ndUJ0VIJ1F2/q7EZh5To1SJ1iSQwCebDV5onrZlcv1R32l7qEgEtWc5MqFCX
yOWx80cfP1MUlclNqDfV3jDjnG5p4LarjsrwrhgvZqJX09UlAlqC0lUdNAcG
LDM5s6Q2v+08xHVqx3Y00aYukcvanhZWJ6TqJLnLTzMtgcAkmK7Nfe2sTkjV
ybaeXtrUJQJagrJzYIDVCak6ealvlB7RqyQtQXlt6DSrE1J1kj5wjjZ1CX95
CT+HRs6zOiFYKjlDF20kesXbjKOFlnDABKT1jQ9cmX6zJ9fODF/zlXvmNeNY
QEskmQlttAQCE5in6qqDurBBM05rfOEot8ikso6pS6xQlyiksim4srGPvd1Y
EPAuE3uEmy9El7WZ1oyDk5YkLya2ys3qxPo6WVPuo0r0KkNLOGACs646wOrE
+jpJLO+wBS1B2VDTxerE+jrZcKrHvGYcXbREFpgUBpNa28/qxPo6SakYsAUt
QXmuboTVCZFS2V45wkSvKmkJyt62KbMn1680nrWdukQyiJlY04yjj5bAPH62
cHW22wwatrk+uMgk07NiothsdQk5WkJYXRKalsyVOebKHVOnoo5wZ9l5KJBc
eYn4pTiMs6HqCsTyjlzP2skGCtUlkrQk+WIzSNL5FucRD6sTK+vEletNnaZL
9KpAS2B2zHe5jvhYnVhZJ9G5vpfPD9KjLlGmJTDpl8Zi8vysTqysk5jD/kPz
5yhUl0jSEpi8K7Nxee2sTqysk7jD7ccuXaZQXSKfN8uv31yT18HqxOJSWXO4
o+bKXaYuUU9LYNpu/Dg2p928ybUr099y9cdam3HI0RJZYDK4yEyoUpeIacnS
UpPmyuBbbR/e0xqXPwge9um6GlupS7TTklkKRK8KtATl3ClHcA+dIPkcAu84
QVZ/j/iVOTyS2vIOOKTQlBVcYeIWAJOQzTgW0xIxMFnAJjPNscE9dFidWFAn
a8p9qdPGaMll/KJXBVqC8txcZ0JlgNWJNXWSWN6hAExIiV4VgMnri9l3cRTu
ocPqxII62XCqhwdMKKUlAmASzIUjl2e3VPezOrGmTlIqBiAwIUdLbmmiJShl
126k1QyzOjEt98Dx5JfK9soRBWBCjJbc0U9LsKtL5NJ598OM9lnzJtf73DMk
1SWYaMlgCGaithnHGlqysNRkcmGpyYaqq7jO6abaGwuLTM4cZ+oSTc04+GkJ
L1FdNVAJy2JSHNme2I5mOkWvyrSEn4SeVqiEZTEpzuwFhwlt6pKQtATkhcVs
6Wt3BZWwLCbFle1Lk3aYmNGMg5OW8DLx/MAgVMKymJTobD/PYUKpukSKlnDA
BGXP0GmohGUxKTE5fuQwwdqMo1/0qghM3hSkJpiskVmohGUxs1QCyg4TStQl
5GiJLDDpXIz35k/gUhPsk2tXpt9z46f2Er3KARMZZkJM9Boyj58/+lRrBfca
OdyLC9jCJrinm6t00BJ61CV2Er2qACZowYnTV+c42RKV1wYNwCxGk+l15rld
JW1xvpa1Uw00i15D0hKQDcEkz7QkBNpiStzOPI8jk/QRDouAw+jK88aVcNsK
p56nWV0Smpag7Jjr2tTREV/qj87zsTrBVScx+f51pe1b23temR+yhbpEBphM
oOy7OPZc10BiWUdsvt+ZyTgbhoDDGJcfSC7reqFzhLdLDllaoqoZR0xLYIpu
Xsi7PPtK98SGsp41+e2sTnDVSXx+x+byvj1dZ+EuOfSrS+RoCUr5tRuv905v
Ke9fm9/B6gRXwEw84WjX1lNDmT1zddffjih1CV5agpLddTHKhMl1Zvu8TdUl
Aloiw0wIi14VaMlCpgtX57aBE4GlSXBD1VXwUKuz3Ssmj9uUlthS9BqSlsyV
O1HmT4WMayEVcomWSKUgMbKpgokNlbj5amEuyGbNhRrlxF+oDZm1S6mTTIJE
zBC9NhChJcG0SGbjJXFa5bJJmDZBNivFDbMlVFIueZSTuhTvQi7LZutSfJLZ
thS/XNKEUb+JMHXqEgVa8sKVbkFeFKZHkF1XFdIryEuy6YPZHSovX+0PmVeW
MiCZV8W5NijIa7IZEmSPRIYFMS56tV5dIrm8hJ+DSjkNkyGbMzCZb6jJWZhD
oZL1xqRyspdyTi45EpniJxflhjjTMIdDZwZGavtgU9Ul1tESmVyEOaYix29e
Uk7xrcsqc+LWlZA5uZSrkimRyDVBSmVzHaYM5bZsxJsFy8Uu6hIFWrI8b8HU
hkrdm3dCpn4pdyXT8BbK28ppXMo7cmmSyLv8NCvlPZiWUGl96/2F3JFN21KM
il7dNqQlxtUlMsDkn0ACb/08/nAn3sl1bE67/9bPw4OWDL7zLyA8ZmKCugQv
LTlfAPOUh1tqEp3TbZyGxRzui+IWmVQz0SsZdYkyMNFAS2SBiTW0RAKYRBgt
wd2MQ4qWCIGJNbREAphYTUuEwMRiWoK9GUc1LRECE4tpiRpgEpKWSAATDbRE
CEzsSEv2k6clp4nQEjXAJCQtycFDS6YJ0RKz1CWqackFIrREDTAJSUukgIl6
WiICJpFKSxSBCaW0RA0wCUlLFIGJWlqyBEyspiURJHqVW14CgQnM4b7LeCfX
me3zFjTjYBe9StKS5cyEItGrFDApWJaZglV5rRwNO3XByDlNrrzELTLJbVsx
fYxW0SvxZhxCtEQFMAlJS6SAiXpaUqmflsgDk5C0RA0wCUlLpICJalpCsbok
JC2RAiY2pCXywCQkLVEDTELSErurS3TTEkVgop6W9BKmJSJgop6WSAET9bQE
ZzOOSaJXOVqiCEzU0hJ1wIRWWiIBTDTTEkVgYqm6xGJaogaYhKQleJeX6KIl
QmCigZbIAxP1tARLM44h0ettMrREDTAJSUt4wMSGtEQemKinJW3kRa/E1SU6
aQkMuNv6gh5ck+u1hzs77/yTfdUlAlrCZyZ0qkukgUkwKwOnuI62rI5t7vf1
ntZ70Tnd3CITdxUTvZrdjGNHWoK3GYccLRECEzuqS3TREllgEpKWKAITtbQE
bzNOxNISfeoSsrQEdzOOflqCtxnHGlqCtxnHGC2ZIEJLTGvGUU9LpuxLSzCK
Xm1KS07goCVYmnEspiXE1SViYGI5LTGpGUc9LcHZjKOLlhAWvdpCXSKmJV1v
L6Rg+BquyfWR3svhREuGglFkJqTVJVK0BOQJkJmCVfncUpOk8jlDi0yOtC4t
MmHqkshQl1hMS3A34+inJZiacciIXrE04xijJW1EaAk96hJytIQWdYnltCSs
1CVUiV6JqEvI0RLC6hL7il6ZuoQGdYkdaQnuZhxStCQc1CV2FL2aqi6RpCUw
4FuSC/uMT64Tj3YvX2RiP3WJgJYoMhNKackCMAlmZVcpOC/OQ4Gtre9pPafb
3O+7sjnXzVOBCtuqS/TTEizNOORoCVOXhIO6JGJFrynkaQlhdQk5WsLUJeGg
LolY0WuWDWkJheoSO9ISetQlTPRqR9FrQ6TSEqYuUU9LgvkFyImJW8Yn14XD
1wXAhBwt0akuEQMTKWZCRl2iiZagrCps4XBWybTW05pUPsctMslrXTFDj7pE
u+h1loleSdMS0s04hmjJIjAhJ3qNeHWJAVqylTgtuWxj0SumZhwb0xIs6hJy
olemLiGsLrEjLaFHXWJHWoK3GYccLblFVvSKpRmHiV6J0ZI7+mkJPeoSOVqC
sql4wMjken1BT9fdX5jVjEOIlgTzr8uZCVnRq2IzjjCFICt79Cw12db2niur
g1tk0nGKqUv4wCRiRa/hoi6JWNErU5eEg7pEFy0JB3VJxIpe0yOelmBpxjFG
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
JSbztb4+WO8Bfn7++ef//d//ff/99997773/8z//k5eXB3bC80Obo6NaY0gQ
KwJsxhGrs2UalcUGxhbwahDLE447cKTTW21FCt0FiRoFJtSJXsNFXUJH0Wv4
qEummZaAyHMxk7BSl9CRloRhM07UqkumSks+YZ1LkTOtzU1w/gLP82BMEQgE
L7/88rx588Bws2bNGrvdDu+FUw9wQ9FgOCQs+A/z5JRoyQZOUraC2+poxx7O
xwYP19nVVaEWfVWb4V8zTpTSElLUJd5oyWZOxkUFJ4A8UVlMcaLylTVJU2rG
+bL2coFS0Db1PGFopHv5+ctrYuoSatQlO3kFuUqBDXHOTClPNJb6C5Ka7Uir
jv/qkn384lKVpM3hmGqesLSK34UVWzikqUvoSEtIEb2Gg7pkF6/ynIQrMRl6
e3vB/AVkV0FBQWlpqcPhaO1wlKik+/nM0NESUppxqBO90kldckjIy5JLG1pa
PHsu5JaGpDrx7wISyktQWnJCKCxVq+3t7Z49FzV6/WmR8KBQECbqEjqKXklr
xhErkiSKWkN9J+ISAZ8RPNvfuHFDKBS+8sorYNB58MEHwbjT1tYG7wUf5fXr
18EDrC2t5WrDBVfBiT+05KxIlVmnFhnNvdeccAaOX763IaTopa+/X2VtzJJp
4yXaiKAlkaAuCY6WRIK6xE9akjcJM4mJXulKS54ng5aQ0oxDnejVr2acJdVx
R0VFWpsZXAyA4QP3/SwYWcA1iUgkUiqVfX19uPkI+BUMN/39/VyjYjfv0ltO
NkIATLC05JOacxeklZbmJnAsdFDDvaa3r4nBfnC41vb2y0rORk5y+KtLqKMl
5KtLVrNTzkgq9baGYPKEb1T/IihYzkqclJZs5qSnyljWFnvgeeJoz1cJvkL0
sNNPS0hpxqEjLfmMm5NUxzLYLMHkicikPSas3MrJmZSWfFubf1nOt7U0B5wn
bY72ErXkR0Fp5KlL6Ch6DbgZ55CAWa1VOToco8jGZrMXLlw4G9kWLVoE8g3s
NNqsmXLhjwJGxKtLIpWW7OdzUyQipdXio+eiq7ubY9CfEQuDpyUH+fzLUqnB
bvfRc2Frby9SKY+5YRPaq0toJ3o9L1aUq7R2RwdIAOgYx35SYHRob2+XSCQK
heLatWu4jxIMBJCGGewtOVLVWbFqUtFrskTN0hq7rvbCJ3oOLjBhCEEKeDOw
VElkbMiU+sAmUasuobHolRR1CXWiV6/AJM89iJhJJIle91EreiWlGScmeiWd
lrzFOL6Hd0lgUsFO//r6epvNBqvocZMOcPKHX+LgBhpn54XZbLVawQOuXLlS
pBZs5SR7Ky9Zwoz7XVSgbDCAl+rt7QXHAoMXGD5wo0lPTw94QfAAwrvQZzXY
G8/WVXxSc35aaAnl6hKqaIkTmCyvSdwvKBSbtGTlSblGvLM266MaYlqympV8
UlKuajCRkicWe2OStGYLOyMKRa/TrC7Zwsk6Lqqsq9eTlScMjexnXskmNjEt
2cHNia9jaSz1pOSJ1d6UKePtrC0km5bkUy16JaMZJ7xpyU+8qnxlna3ZDuvw
4fbVV1/deuutjz322F/+8pebbrrphx9+gF89X716VVpvPCfmfD9d6pKoFb3+
TC4tEdSerxMJjMZe/3ouWh2OcrXquHvBif/qkoMCfnKdRN7QAM4V/vRcaC2W
y3LZEaGQ7rSEduqSsyJ5gVJrarKDDwJ8HOBs39TkrIPFIXT05IDjGLBwCD4L
DAR9fX1ys/WS1AlGCGlJglhdrtI3IUVHYFhpbGyEqi5cSoDxCwwu8C50pEPv
As8C4w54hfaOTpbOlCJWEwIT6mhJJKhLYqLXUNASJNrcmUn4q0sCF72S1IxD
kejVOzCp73WewbgOY4hpyQH6il5xwGQ7N6VCK+7q6gLDhMFgWL169SOPPLJg
wYJ9+/Z1dnZOWt8Oxh0wImzbtg1clM6fP//LL78Ef0Fg9GlqaU6T16xgxbuJ
XqtP7uJdqtWPE/7i4uI333zzb3/727vvvltdXY09VmFh4eLFi+FdDAYDvQvc
KCoqAs/661//Cp8FXqe/v19u1h8Q5i+tPhP5oleK1CXf8bIZOinpeWJvab6s
rN3KzcTSkk/Yyb8ICvh6Fel5ojQbj4vK17LTqBO9plFMS0KsLvlVUMrSKUKQ
Jy35StF3tYVuotfanKOiKpFBQ3qeqM2m8xLWF7UFYasuoaPolRR1CSEt+Z5X
kVbH11obwGcHv0pOS0s7fPgwB9mefvrpmTNnzpgx48UXX4S9G3DaAm44Ojo4
Bs0xESv8Ra8xdcmvAu5JEb9ar4MukSn1XDSAE4hKeWQqtOQAnxcvFtUaDFeR
We2Uei5kFkuyRHIIISfhpy6hIS3xrS6RKC/J1EqLtR/hWnq9ftWqVWD4ePLJ
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
51UvSix5Obn0zdSycokipHlS32j4llsUPeqS8BG9EtISGLv5lUyl1Gw2gxTi
8/mnT59mMBjgNpykQBbX29s7PDwMZitvv/32nXfeOXfu3FmzZj377LNgAo5Y
YWEzzlWvpU3EzCRMack+MmgJKc04JNISEL/U8vMlspD2XEBmchBhJr8LRFyl
OqQ9F5CZRKS6ZHpoSZxYdahW+U2pYt1l+Yp06apM6WoQ6dJJmQn47MBHCQYC
cEOt1thscNzxg5w786S1t7f1l3z52jT5mgz5xosKhkRnaTBbLJYDBw7MmDFj
5syZqampVqsVPRwYg8AJqqGhAckcraMdjDst/h5uMmYSbqLXwJpxgmImLrMr
ykwgMMF24kBhiN3ZnuMVmLgzk/GSEpSZENISGCgzwdaT8C2dnu+/uWcAVbzC
PWgPDlZdAptrhkavY8EI+itWXcIydbpwSh8kJNhfsaJXhf0qjpnAOhPwX4op
LJmCugRbXgKBCcpMnvLOTKDodZ0oQYXUbIwhvlZPWgI1sOJOM1z8FwTkFVhm
Am6POUsveiAbOawrg9DjMrLwDdz/TMW+Da6KlHfZxwhpyUIiZvIu5zh8Vlaj
GDKT7EbxGOIYQatKMMzEjZYkmjlchwGKShpd5hDITHBsBMdMjukr4P72wavQ
OoIGajVBl8WBcAMKTLwxExwt2SZJr2xRa3qa0Zf1h5nQUfT6Cnm0BNz4V3Hc
05kXnkhM/Vt82oILqc5ISPtbQtqkzASMLxUVFYsXL16zZo1IJAKXDw31htE+
/878cI7TYV2VU+SkNAkTzAR+bZSRkZGSkgIvRcBYBnaCG5mZmUuWLAEXP0gL
s661qR5cvvo/xzG4M5PgaAnl6pLAaUkA6pJl1RfeKUtedCnjH8lZCxOyFyZm
P4sEuDEpMyElTzbmVjybmPNc0gQzCV2emLwyk5jodRJgsp6d9Wll7ttZBa+l
OjnJouTil5NLXkawyaTMhJQ8+Sy/5uXk0pdTJphJ6PLE7MZMaKQuob3olZCW
wPiaXVkhczITMB9Zvnz5zTff/Pe//72mpgZ83DDNUGUomNiCycuRI0c+++yz
/fv3q9VquIzO4EDvyEDHDXRR6cmZSUxdMk3NODD2cflflvNWX+ZdqJaHuuci
TSr9jSf8sky4PkdYIVaFtOeiqb3prKjOP2BCFS2hXF3ilZb8WqP8ski+9qJs
RbpsVYZsdaYr0mW+mQk4V5SXl4NxZ926dXV1dWB8MNcbRvrsRGNBy9iQB1Qf
ae291rq/UL4+Q74mU4EyEwhhwKCTmJgIOUlDA3gPenDj0qVLS5cuPXXqFLgN
xp0Wb+POYAvCUvxlJtOjLplmWgKbceBUrqm738eyOD6YiefKOCgMwXKSAk2z
0dHb1jsA7oUBCzz8YCZullf44v3Doz46ceBjUGaCVqEIrF2eK+PYusb9nPBX
+NzugWHCZXHge27pGcQiFKzoFYYnM0F9JmOI/VXfei0YWjIZM9HDA2HBiLHX
Wf8zMDr8FkYAC2KXImtglEDJgjITWFiy22V8fYd97OmKfRChlDUrwa8YSLIP
7BlDrLDeaAkRM3FCEtjpg+xxEhJILcpblITMBNKS9zgnUbiB2xr7ujzrSXDM
BGUd3rbB0WF0EeGpMBMnMMltrPP2shhmcgDHTKJZXfJa1bEX8k8/nZ7weAJC
SxLSIC1B46+TMRMw1oCrzTvvvBNcPGzbts1gMFrMxuuecxxw2h9pd/4cdi9y
xjCTxxPSn3ExEx2yJGg9shkMBvBHV1RUBI/41ltvgcPde++94FrFZKpvtZsJ
xprhVufhRtrwoxtSP4Ayk+BpSaSoSyalJQn/Lkr5V2bmc0nZTlqSlPOsC5j4
yUxIyRMXM8lFmUno8qTepvdgJmGqLgmOlpCpLlnHzvqoNO+ty4WvpDhpycsp
JZCW+M9MSMkTT2YSujxpaDQizGTKtITsZpyoE70S0JLayi9ZlZsrqtYWM8A4
Ymlo4PP5CxYsAHPb2bNn//TTT4SLXF+5cuX69fE1AoZHRpBFpTt90RIXM+m7
YqOQlpDSjBMcLeFQREt4n5XyV1zmL0vjLU2pja+WhbTn4lpf2xGGZM1F4bJU
wfIMQYVYHdKeiyaHL2YSGnUJjWgJMTA5KVL+XK38rECxOkO+Ir3OjZb4wUxA
blgslh07dtx888233HILGHfqzWZrg2m0vxk/Fgy3XR/tGOxvvTHa4e69QZhJ
EWQmyo0XlZCZoCYl8Ppg6BEIBCUlJXA9r9dff/1Pf/rT3XffDcYdc4Ol1V5P
wEZGHSPDnaPDHc7RZzJmQivRq3lKtAQGPEV7MhPsIsJNPV6Ziec6wp7MpNbS
ga6Yg9t8MhOCZXHQBpliTYu3dYTdmIncLrOPMxPCdYTlLicJlpmA5xIuItw7
6OQekJl4LI7TSshM0JKScq2jCyOMHRq9jpKTqdISn8zkB0Jmsk6UAHeiHTp/
r9j7NvsoBCaNfZ2HdaWevTnYRYS7kRKOyzbR067Fgncrsp+p2NeOtO1k2UTP
uFYZRm4T0xIPZjLejJNg5sC3t0mcfFRfDm//h3MC7cRpHKcWBrTpBu7pGe5P
NHPe45zE9eb4YCa4BhzP3hy0vAQFIz6YyYkJZjLeg3NCXwX31HVZ96kK0KoS
DDMZrypBmUm40RJSmnGmJHr9v/QEZz2Js7ZkorwExONI4JgJ/FoW1zgMzv9b
tmy55557HnnkkaeeekoskdgsJvwcZ6j1amf9T3u/fe/dxUJuidv53+kfIGAm
aJEkuM4Ri8WLFi266667vvzyS7VaDW4/9NBDc+fO/eSTT8BlUHtzA35cG2lr
Mku/+GzjZ9vWd9o1btOckXZTo5OZhK+6JAha8n7IRK8vZl5cCGlJohstIWQm
ocuTjbmVOGYSujwxN2KZSZjSknASvTrVJYsvFb4MaUkyQeCYSejyhLDOJER5
YmkyfsstjqlLqKAlE8BkZ23VFzVVGyuqVhcxVhUy1hQyShBmIhQKn3zyyYcf
fnjOnDnr1683eyzYhIovuru7B1DRBOF3u8TMhLRmHHqLXsloxpmkDUfA28Pm
bSkSLL8oWJrKX5bO+yCd/0Eqb1JmEnzPxZ488Uepgg/TBJ9mCCskmpD2XHhj
JjHRqw91ybY8+YoM6cp0KR6VeDATnUtwBDv1sMxk69atd99994MPPvj4448L
BKImW8Nov3udyXD71W7b97u+fP21RXxOydiNTiJmophgJuZ6+Mog98DhZDLZ
Sy+9dOutt3711VfgoC+88AI41uzZsz/88EOEmZjx55zRDptFsXXz2g3rPnW0
aN2+HXBnJpEkevW2iLA3ZoLSEhj+MZNxQoJjJoWaZghMwH5p0xV0EWFsbw6E
JO7MhHgRYU3rOI4wOa550pIsHDORuzETofUKDpj4qDPxBCa4OhORy3yCFpN4
MhMlhpnATpxybYe5ox9dcVjfes0fdYl/zOQHGGwiZgICduh0D/ejbARdEOdt
9lFCnwkKTLByVygz6Rnuh8YSWFuCSF9/hATmXc5xH8CEkJk8W/kTuuQNzv4K
O3FwzGSPMhf+G4/qK7DqEqhv9cZMsFTkfU4c3J9k5hLQEnfRKyEzgYUlnswE
qmXBU15wX0HYxUwYfjOTSFKXeF9EGImnUhMngImrtuRxImYCTv5gflFTUwN1
Z9grhEuXLs2bNw9Mc/7617+Ca1Sbpd5tjoN8F7z/p+/uvHPGHXfM+Hz7hrHR
9onRAcxxOq1r3JkJOBw4Vl5eHvhbA9cehYWF9913H5jXgENkZ2fv2rULXKiA
24sXLwbXJPg5zmDLSK9t+Ufv33HnjNvvuCMtEeQbdmhrNzXpluOZCfnqkogR
vcJ4If2SN2CCYyYhzZNN7swkpHliboLMhBp1Ce1ErzDezCxEmnG8MpN/OZmJ
MNR5ssPFTBYjzCSkeWKxO5lJuKlL6Ch6DawZZ2dt5Y5qxoYyxuoiEEzkJ2Mt
wkzMyJxl/fr1dyDbvn37PJkJSk5AEl7rbnV+9CPtw1dt45nmk5n0d9vCUF0S
eaLXXwS8nUzepgL+Rxn8pamCD9L5HyKBMBO+b2ZCSs/F3kLR8jRwRCHKTELX
c+HJTKZZXRIcLZlWdQkam3PkK9KkqzKkqzO8YJN0WTLCTIxG51jD4XDgJ4jm
icViyczMvPvuu2+//fZHH32Ux+PZG92ZCfiwbnT9/ON3N99y6//3v39at3bF
2I1uT2ayIUOx1sVMbMia1EVFRSKRyG63gxtglPnzn/8MjgLGIDDu3HrrrTNm
zHjjjTfq681tze7MZKh1qL/5o2Xv3Xzzrf/7v39MugDGnatuzKRjnJmEm7ok
FLSEkJlkeAATHDOBhMSdmbjpSrDM5CI4iyCrA49ev1GoacYuiIM+7BIBMyEG
JjCgLwX8LNa04mgJITMp0Y5raT21rqjPBDwF/tre65S1YrWuaHg248BfzR19
fjATvOgV+mOvDY5OtbwECQcIDDMZpyWQjXhjJvFmFtyPlpTAR7YN9mCBydMV
e9snjK8TiwhDh8nA6HACspowujIOdJiA/Ud0zvqQ9sGrPmgJJCRYZoJ230gQ
JoM2CiH21wl1CY6ZHHXZSGCFCYpHJJ0WT2bieq4RV0wCW3vU3XYftISQmWDV
JWhVCW4F4bouKxaYfMA9jWMmL/liJmGqLiFT9Ooer1Yccy6Rk5K8ICEdS0tw
zKTB7Cwm/O677+bOnbtixQqpVIqd5oDbv//++8KFC3/44QedTm9tcP9eeLit
o0n9xON/ffjhR+65Z873Oz8fG3VghgbITIoXXEgfZyYSmdVi+eWXX6CRj8Fg
sNnsRx555OGHH77rrrv27t0rk8k+/PBDMJ8ClyXgEggZa7Bw3iHhlc+bO3f+
/Pl333NPVvo5968DnGuDYphJuIteSVGXBENLPqhJAPE+I/GNvPTnUy8/S1hn
kjTOTEKdJ27MRCIPaZ6Ymww4ZhK16hJ/aMlGJNbVZC91LpFThEhfi7HA5BXk
J2Qmoc4TyExegcykThnSPLHYTTtrfTMT+oleSWrGCS0t+ZZbsZ1Ztb50gpas
QWKCmdQ7v94VCoUbN25cv369QCDAppnn1ttlGxttL8hJfvO1Rd9/9/lgj8UX
NkGYSVjRkshTl/zMr/2GwVub66zxWJrKQ2mJn8yErJ6LvYXi5WkCLDMJXc8F
lpnQUfQ6PeoSbJyRqE6IlHsqFBuzFCsz5Ksy5DhgsgYEwkwabRaz2fzNN9+A
sQCMO0qlEhUcgVQBdx05cuSJJ54AgwLYb7O458loR3Oj7v+eehyR2Mz6fPvG
sbEeH8yEKdG1tTT/9ttvt91229NPP11TUyMSiR566KEHH3wQHH3fvn0mk+mD
Dz544IEHwLhjNuPyxD524wqfWzpr5sy/LfjbbbffkZZyBjmcHc2Tlo6WjDp9
CGhJWKhLfDMTQlqCZSa9gyOZBMwEr3jFLYgDSUj/8CgWmICAfg93ZjKAYyaE
KwijpSbgFUo0rThgkiXHM5NseTM8FgpG0KgxjTcN2br6YTOOrrUXBSM4ZtLe
OwThD9qJA1/22uAoFphg1SUuZkKgLoEr6XgwE79oCYjCCWYyQUt8M5O/V+yF
/TWq7iaIRy64KAq4AWnJO+yj6CLCOGYCAm3kGZtYGcfpLXGZV537y1qUvoEJ
lplgFg7+aZM4ecy1IfZXt2VxcMzkPc5J+EhJpwVlI7DIxJOZNLm6eN7nxMGu
HAhJksxc+HgnDMHQkq2SNLDHuawwETPBLYvjyUzquqxjiA5lmyQdApN9qgKH
S70CmclLXplJmNIS0ptx8ME8BuKVyhPPZZ9/MjkFEbESMBNwkSCV1j311FP3
3XffzJkzDx48iPvCDgwxCoVinNg3GHFznLZG5fz5f5k166558+byaopwc5ye
ThuWmZRIZPX1pnfffffee+8Fk5rly5eDF//qq6/AQAMOHRcXB65SNBoNuBKG
zkb8HOd6B4eZP/uuu0A8u/DvjiaVW03jSHu9HTITGolep1Vd4glMQHyIxFJG
4mu5Gf90rvbrAiZJzkCYiXOt4VDnCcpM/pWcVyaRhzRPGuxuzCQ6aYlPYOJG
S7Cxtib7/fx853I5LgHsK+7MJNR5siO/5hUXM6moU4Y0T6zNvpkJtbQkMtUl
33CrtldVrStmrC5kOsNFSzyZCURwYDILlb9Yp43nFHvwarOktvSB+++/6657
QKrUCSrcUmuKzCRGS4JXl6zO4S9L4y9L5eNoiScz0YWy5wLLTColmpD2XKDM
hMRmHHqKXicHJmcmQg3iOF+1u1y58bICK4BdM85M5Mk1qmZ7o1wuX7hwIfjr
vuOOO3777TdsUxX4TBsaGsBYAOtPrA1GN2ZyvcPeqHny8b/96aZb5s29V1Bb
Bj4sD2aiQJlJjdTQ1Gh97733QO7deeedK1assNvt33333W233Xb77befPXsW
/AqOKBKJwOE0YNxxyxP72Fh3DaPw1lvBo+94+u9PtrfonOWUmDxxMZPwV5eQ
QEsImIkHLfHOTK74yUzUrePeD3AD0pIiTTNc/BfDTJyEBMtMCGkJ2ozThlSD
QIJh7eoXWLogLRFYu8CvEINAJwkMrYuEgOOiHTpgJ+yRAT/LtO0oG4HEA7xI
fUcf3M8ydUJgAukKikfMHX1wZ1ffcLnWkSdvVdqvosDExUycnKR/+HpLz2C5
tgOykQptx8DwdfhEv2mJGzBBmYnnOjiezAS3/A3Y1osSsYsIjyFr30CUgdIP
HDN5pmIfuv7OGHZlnMofYdsO3DaKk3zQEh/MBBW9gi27UYxbRNjTZyJxHbRn
uB/cOzjOc7qwzASykZxGyZj7hpaa1HWO5z94OlzdBvKfMfdOHBfcMHquI4xl
JpCQbJOkD7qqZcATIS0Be+CNk3rGS8TMJPJFrz5oCYg3XPFq5cnnss4/kZS6
ICH98Qt4ZqJSqRYtWnT//ffPmzfv448/hlI13Hc6cNKBn+OAgWCo5fzpg2+8
tijvcgK+/JWImYDDrVu3DoxrDz300DPPPAOGOfD6J06cOHz4MHgbUOaGXBqB
w3nU0g+19nWZN69fufj1lwXsYvz3OOPM5EJUil79UpcQ0hJsvM9Iei0n/R8p
2UjNiXMVm2eTclBmEtI8wTGTkOYJykxi6hL/aQk21tTkLMnLfy3Nueavs+rD
nZmENE9wzCSkeeKdmYSruoSWtGQCmOxgMtYUMwlpiYuZMNcWMlFmgm7gI5ZK
pdu2bfvss88kEgkOm4A0GOhp/vqLTbNn3/XYY4/NnXuvQsRwm6d4MJOB7sZo
VJdMCy0B8ZuQvzJLsDSFtyyN90Eaz5OZOMPFTELacwGZyUfpwhUIMwlpz0VT
R9M5JxKJNHVJSGkJGqfF6mN81a4yxbqLspXpstUZUoSZyCEzsTfZNBoNGHfm
zp07Z86cJUuW1NfX48YdaL8Bn6+TmQw0u+XJcNv5M4fefOOV3Kyksesdbh8r
yJO+1v1Fyg3p48ykuk7f2mzfuHHjzJkzwTD31FNPgbEGnHOOHTv2+++/q9Vq
uHYbfAMardaZJ0OYFxxuvdbdsGnDyn+/+SqezyB50trZkuGlwiQC1CWEy+KM
T+56+r0Bk0yZ1Y5nJjZCZuKxiLANW1IyhlSGwHvhqyEPG0CrSlBm4oOWoM04
Jsc1b15ZuGlbez17cDw38CJC6xVsPQn41dsrd/UN49pwrg2Oej4MZSkoM0Ef
Bm6gt8FROKauAGiJb2aCWkqwtATGelEirBW5bBPCPW+zj7Lb9d0uUGDqbTus
K4NtOCgzecYVR5D9Yx4r4+xW5sD96PLB3mgJbMaBpSzgpzszcS4cPIbgBdTp
ikY98pTyFhWqLgGR0yhBl84BN8Cv0F7S2NeFa8PhOowQhoAXl3RasM04x/WV
9b3tKOUADwO/YotMQEBFCcJMfsPFPlUBfCK2E2ebJF3T0wxfE/wEt7dJMmod
pjF3ZmIef1lT4LSEhuoS38AEjZfLTz57eZycOJlJfOphprM3B2xxcXHgquC2
224DAwH2sgS7jc9x+u24y0sw3DgvVEba8d+5DLVc7bStyS5ecH6cmZRKpFZL
Q2lp6YIFC8CxwIUHHGvMyAa9keBXWFQJDkfgbBxsGelrGu614Sc4zq942s12
HcpMKBO9kqMuCZyWTNqMQ0hLJoKVsKQq+bXsjH86yUmuk5kkZB9HenNCmieb
cyuevTDOTMrr5CHNk4ZmJzPxDUwooyVhoC7xDUxAbOJkg1jDyH0vN/+1VEhO
Sv6VVHyqWhDqPNmRV/NyYukrKWWLU8srnb05IcwTa7PRg5mEKy0JG3VJYLQE
royzoZSxqoiYlqwpYq5x3kXMTEDK/fzzz9Bt8vnnn6Nl+Sgz6e9u2rD205mz
Zs+efdcH77872GMj7s0ZdYzd6ACTGk9mElOXkAJMfhPyYfzM5+8o5X96SbAs
DYRXZhLqngssM6mSaELac2HvsJ/z3omDASa0oSXkqktOe6El2DgrUR/hqb8t
UazLlK1Ml69Kl61Jk6WyVU2Nzl6qkydPgk/qj3/84+rVq6GFhnDcwTMTiE2u
d4wMgz//LvyZAeRJf/v+AsXaVPmaDOWmi8qaOl1rs72iouKvf/3rH/7wh8WL
F4OXBblhs9msVivIQ7NrA/s1Gg9mMoCMccOOkaE2Z+ETbgQc62rpbM2Q4OtM
IkZdQrgyDuQDlq5rhLQEBrh3bJyZTCyFA6eKWFqCZSaWrj60DadQ02zv6Yce
kjGk2EPadEWKUBcsM7Ei5hMvzAQvegVRomm1dvWjyxaPIRUj4MXrO66Vats8
1SVyew+4F31w//BoS88gtsIEDbAT3IWiHvCUnoERT9crDPBI1OkKHgY5Cdwj
tvbkuQpLwMNgbQl8n47eoQpn2UkgtMQ3M8HVlviIpydiH2E8QxA/+l5H2Dct
8R4/45pxvAW26YYwPBfB8bosDpG6BBcveDTjeMaL+DiAC+/L4kSY6NUvdcmk
tAQbi8rinr184fGEtPnxaTuKypxn+HqTVqsFw82WLVsYDAbughM31uDnOANe
jGdgz2iH0WJcXpL+dFryExfSn7iQcY5da7M6J1VFRUV7fvgBTHbQLwThV8/g
cmXp0qU5OTlgACKe48BX9vS5gSHpeidLL32/+mwYqksoF736SUtgfMRKBPFe
Rcqr2RefQ5jJN8WMkOaJyWLaUJa7KOPyPxJz/5GYl8AWhDRPag2KteyM6WrG
oYqWBK4umZSWYGNVVe57uc4FiP+VWLK7hB3SPKm3mr6oKH/7YrGz1CS5LJkj
DmmeCAyqL5yEhK7qElqIXieCX/kVp2pTRdWawqrVTkLiRkt8MBMIx8CEes6c
OWCG+/jjj4OpLq7UZKi3Je9ywvzHHl38xss6OZu4MWekjV2Ve/zQTy0W+fC1
5jBQlwROS0hpxgkRLcHGj1z+Z6X8T5HlcvBNOggzCXXPxd5CCcpMmFJdSHsu
EGYipYW6hDpa4hWYnJ0IDYhDXNXXxYq1mfKVqdJDZQqbzdpotdSbTMePH1+/
fj2TyfTG6jXj446H92aASA0NBoKxXlub/RRb80Wuck2GYk26PLtW42i1N9ps
JSUlO3fuLC8vR48FKxv379+/bNmyvLw8sxkkJxh3PJjJ+LjjsXOkFUyjVRZr
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
aK0NKRL5YaH4kGg8DovEBwXiXZWiDZeEX+dK8mrVJPZcSM3mRKHsSPiJXmmk
LvGDlkzEeYn2FE/9Q4nqRLmyWmawWq0NZhOaNRqNrtE57mD/9sEn1Xmlp61W
15As0PpDS7CRUGc4ztT9WKJJrtbIDfWNNqvVYlGpVAqFwukK1mjxzGS4ZWzs
SltHC0tjThQEQ0siQV0SHC2JBHVJ+ItePWkJBCb+MJOY6HUqzTiB0xJSmnGo
E72Gn7rED1qCjdfLTr6Wl7S7vJIrU4JLUyOyBoHbHAfpDe/vaa5W1e2ovvw2
I853eQmeljjj1Hgw414rOvd+ftZ5Vq1So7M0mNG1QSfmOIjM7UpHY6FMvIV5
8R1G2Ipeaa4u8YOWuJOTpCUFl3+qqKmVqXznCVsl28Uq/KQ6ZWq0xBUr2Kkr
WClLSzNWFBYlsgWT5kmpvO6bmsIVNVFES6ZVXeIHLQGxxRUbmLkri0t+q6zl
ySfJE65a8TOnautUaMk4MEGDk7e2vHBjUVUKRzxpnlTI5T+yq7ZxwkH0GqXq
Eh/AZLdHfMthbKtkrCuq3lPJLa+TGwyGeo/CA7PZHB8fP2vWrPvvv/+BBx6o
rKw0mYyTMxMQNzrGxnpaWiyXZZJf+KwYLZmeZhxPWoKNAwLB3mrh9jz+Fzmi
DI5SH1zPhbmlMVemOsITYWkJNg7wxXsqRVtzhD8VSavq9EH2XOitlstS1VGB
JNJFr9OkLvGgJXhgct494niq3ytUCSxtnabe3tQIzxUajXaCmThbtDpHhrqk
JnO6SHtWpJkSLYHABMYFif4YW3eoXJPH0xlMlmb7eJ0SSEtk3EHyZLh1bKyr
t7ddqGtIEegviMNNXRK1otcmqkWvNFCX4GjJpMwkIFqyj1rRKynNODHRKx1p
iT/AhJCWuJGT8hPvFaccrmFKVRqzuR5cp9gsphsDdmfvf19rnV79A6vwvaoz
gdMS93iz9Nza0uxLPJEesdNrdTrE2eic3Qz2tnDU8m+Yee8xzkaH6JVidYk/
wGS5Kz6sSv60NPs4i0OYJ1KD5jd2xcrqNP9oCR6YOGmJe3xYnrGtvDibLyHM
k1q1Yl9N2aqa9Ji6hEJaggEmuWhsrM7ZVF56ms0nzBO5QXuUy9rOKgiclrjH
hsqibyoYuXwpYZ7wNarf2TWfsUMneiWjGYeWtCQQdYkfwISBxrccxo4K5uaS
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
jEOC6HVqtAQfIaQlhEFiM05wtIRydUngtIQUdck00xJ/gElM9EojdQkdRa/T
qS6ZEjOho+g1pi4hpRknukSvxMCENrQkJnoluxkncFoSU5dEreiVFHUJHWlJ
OKlLaExL/G/G8RGQh3zPrY7j8dkKZYPVWCCT7eeyYuoSOqpL/KMlIvrSElJE
r5GiLglW9EpbWhIJ6pLgaEkkqEvoKHoNDJh4YyZRLnp9ngxaQkozDnWi15i6
hGJ1CXWi15i6hGJaQkozDh1pSUxdQnPRa0xdQg0tQYGJj4jRkulpxgmOluCB
yaS0hFx1iQ9gEumi13BRl0St6JWkZpyoFb02US16jUB1iT/MxGt5CUWiV1Ka
cWKiVzrSErKbcaiiJZSrS6iiJZGgLola0Ws4qUuooSWbqacllKtLAqclX9Kb
loSLumSaaUk4qkvoQ0vIFb3SkZaEj7qEOlpCqrokEFqio5qWRIK6JCZ6jdGS
SZnJdDXjUCR6JaMZJzhaciBwWhIR6pKY6JUy0Ss5zTiB0xJSmnGiWPSaRjEt
iQh1CR1Fr+Q249BR9EpKM05QtIQXLqLXAGhJTF1CSjNOUKLXCFGX0IaWhKG6
hI6i1wQyaElMXUKZ6DUi1CXhRkuwzIR26pKY6JU6WhIJ6hI6il5j6pKY6JWk
ZhyqaEkkqEuCoyXRri6JiV7pSEv2kUFLSGnGoU70GlOXUKwuoY6WxNQlFNMS
Uppxolb0GlOXkEVLvDCT6FKXRK3o9ZVopSXkNuPQkZYsIYOWkKIuoU70Gi7q
kpjolUa0hBTRa6SoS6gSvZZRTUv+//bu/M3K6kr0+Pk9mhgHVKrUjjGJUXGI
UkWhCIqigEpRVDE4BEXDaFVJDJJEhgKLwVkBBQoFOp0wiaKSQTu5JukmndaE
fvqHe6839wefp3Pzy735J+5+31Vn1z7vVOe8e52z9tp7nWc9PFWnyiOlyPB1
r88WusQHuoRjLcFexqGqJeR0CVUt8YEuCRZ6dYkuoaklp+hryf9rGfRaXzMp
X0tQlnHooFehSwR6pYFefaFLgoVefaBL7GqJD3QJR+jVHbpEoFeOtQRlGceu
lpzhC70KXbKbZS1xBXpFokuChV6/oK4lQpcEQZcUNpOaYMIRer0z+FqCsoxj
VUvo6ZLytcQTusSilqDQJRyhV5fokmCh15PU0CsxXUJXS1yhS4KFXlGWcQR6
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
8si+V/SXlm4mV3beAs9DEoG0Ml4waaCWfH3K5Ert4641y5nWkrxgsnB4s/kF
fmNKB3otgVf+5pROxFpyQXub+d1u0jKO2UwgknxryhT1t/vxqfc8oEse6I9S
+YXt7fMGBtPNJD3f7pqqPm3og583A3q9vXdhXFH+EaWWPLH9BV1L0s1k24cf
RT8N9i4yl3Eg2jQEveZfIvw/L4rPjZiPYrrkh/EOjt6+gWZyR98Ss5lA9AC6
5McHj1TiYySZzQQ+mjhVcmdf9BuMRumS4kuEF2c0kyT0eld8yGTNztft6ZL0
6g0cMlHfItaSY8YajtFM/prZTE5kNBOhS0KhS+psJs7RJaHWEpRlHKtaUpYu
STeT23atVc98bd60lkGvTaVL4FfJKZueqDaTomWcO3dHv+58fd70MnTJeNDr
/Ud3qBe/tOM6LLrknPgMyU0r+9Qb51TbiJ5vzrtDfbT76Av6bMlNK6PfC03b
tMpmE8dsJrqKRHGmbQJzumR0E+fLbRerL6dj1YPqjcxzJollHEgrTYJe4TuD
Bb3CGZLLO2+EN4xmEgWTe4ai//DVt7qNLIgDi/pkFOg13UwG/3BKPfOVtkto
l3GwoNd/6PyO+nJu7Jn7tfiNcZdx1Oec13Zpk+gS9crq9esMJuNCr9+Jz5Bc
2XkLHCZJNJP5W3+snlTf6iqydN+r6hn1yVjQKzQTfbBkwXMbop+op0x2gS5B
gV6/MaVDfUXfG9nTPOh1yoL5ZjNBOVuiXmpO/2qdROD1f3jqJDpdAs3EXMOZ
umBB3ExO6Vry8LaxIKwez75/SqeS/gMj0c9427ap0Z/w3W3bEp3k1t7eSuqh
28jAgbfM5ze+/wEKXbL7z/8xrbcP1m3GbSZwtkR9svq0tW8dagZdMn8g+oXg
8e0v1BVMxoNeewbWXtt1q17ASTQTePKZsWWcKIxM712sntz24ceN0iWpiQ6W
XNR+uRp4G9ySO3qXFECvPxq/mfwFmolplZjnTPRHD//H/16149X0jyh4lK0l
yWAChaS2mWRci7NmZ3R09vqpt2fWkldqbw1OP5YMri+4R3hz7aU5DdAlhbXk
eLKZjB0pMZuJPlJiNJOW0CUWtQRlGceulnhFl4zbTMZdxuEIvQpdYlNLytEl
6WZy15GhStxMzDDypYkX6p889Yeglqh31ZPzf/vmxZOv0Z+TqCX3HHku/ZPw
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
8VcXP98w9DpuMLl+avSb//6du7FryX+ZR0rMZpI+VaI3cUA42f3zPwj0GhT0
2kgzIYJeMZZx7GrJS+VriRd0CUotqT1nssx0S+4+sqXgZpzMZnLPka16Gadj
4+MVo5nocyYQSTo2xR+NmklUSGBVJ/1INZPytSSvmSTCCFyaM3P3+szjJYlb
g9OPglqi5tKO69Tn3LpphWUtSQcTo5mM0SX3FDaTcrUk85zJt+IzJNM3ry6A
XutsJpOrzaR6zuRVOFgyd098jGQlHCP5WXu8mJN+mM1kXLqkuJbU2Uz0pTmZ
nWRm7a3B6Uf3m1sLLhE2Ls0pQ5cUBJMnx2sm5nmSZDMpVUsGR5tJ1Df0ORM4
QzJ7y9MF0KtuJmtzm0n033XqJMnoOZPHRz86B5ZxYDEn/TCaiW0tMZtJwT3C
N8WX5sxYvSyzljxQe2tw+vHwvpcKLhG+Y030E+x3eu4rR5cUTz3NBDZxqs3k
n9LBpKFaApEkfW+OPmGSiZbAMs7knnlAl0ASUe+azeT8tom6ojy+PzrTBcdI
0s0EPpo4VdKxIFrksaklsImzaHgIvqKn3zsOnWT5SHTa8/z2tnJ0SeIe4dlP
ro5+NJ56J7OZlKZL8g6ZfGvKFNxaAss4o82kerZkam90IrT/wIiZSmBhx3zc
V40kWc3kz5W4mZgHSypV8RUOluhjJw/EzWTT+x/WCb3m/Zc7b2Cw+EIcaCZr
3zqYeY/w2rei82MXtl+GRZeY89wHv4TvZHEwKfBMCoKJmu+NNZOxPJLgXmET
B5rJ+rd/allLUs1kDHqt1F4fbH4hkE36BtfBMs4L4zUTOEmycHBdYh/HfObZ
g0fNv0U6mJRYxoFUMjO+Cif9+KnhvqYfF7dfbllL1AzF7mvmw3IZx9y+ST92
jxkm/weyyegXddkVQpcECL3W3UzQlnEEeqWrJS2lS9KjfRLdTEAvmTD524la
kv6JSzeTK8eayej2TaKZwDLOpBXza/WSfbqZmOhrMfQ6nmeSXUsym0kimKgP
VWq3cizpEnO+EV9hc+PK3oJgcluRZ/JCXi1JNBPdRjK41/hsSSU+FlKulqSb
CRwsAY0k0Una4oUd85HXTJb9y0/n1jYTOFiixdeEXtLecb2Bvo6ziVPgmQD0
WnAtTnEz6YzvI76me5Y99Jqeu4eeqkRbOTcWHC95+ETGf5XwmDW0Nq+WPJnf
TMAzSezgjHkmjR8vGRybKJIkmgnoJeqZRC2BhR3zkdNMooMliWYCB0u0+AoH
Sx5/5wAkEfV8PvqarCVL9r6Q949XfajuZpJxJ8701XAR8FxLuiTTKpm3Nfp9
prGVk1FLVud7JvO3/rggmGz4468zm4n2TEy6BJpJCbokUUvMZmK6JeqZAuh1
sDaSFDQT0yoxz5mYH104vCnvn1ijtWQ4dS0ONJN7nlxlLuN0LuiuRCrsG4la
cn7txb6Jh75EWF+L88x70Z9rZvev1pGkUm0miLUENnHg+/DDU++iLOPoWgKj
mwnkkWffj67cMtFXKB79Bw5kLuOkmsmfE80EzplcaGwAQTCBJALNJFN8LU2X
ZE73WDNJXogz9MHP4TtmT5dkWiWjP54/+GWdx0vqOVti0iWZzURzryZdMiMO
KSXokuQlwjk344w3fzHpkoLJvDgYZkL75bCP0wy6JPNanPxBXsZp7FqcUrUk
PSeS0/C1OEKX+Aq91tFMHKVLgoVe5zCsJfoe4UQz6a7egzNt1/ehlty+K/pF
7eLJ1+hIYp4z6RlrJs9lNhO4E8c8TJLYxNEJpcS1OOOeLclsJunVGzhDcsOK
BRZ0SXYtUXPjygjY/8a8O1Dokqw5DM0kfaRklHut0iVw5c3NKxeWqyWJZqKX
cabHGsktKxfrYAL/ovX1wYlIYr67LNlMxu7EOTdee4GHuYbTPpZQylyLUzx5
uGviHuGZQ9FvoS/ruAGLLjGvxel+M7pkSv2t61zGqfNsyZOFzaQmjxjzlbZL
1POWtSSzmTz1h/dnb4lqahV9jQ6WwL9ufYnwtNxzJqP3CD+edc7EvDfniZMH
dBiBcya4dEkm9FptJhnB5P6t0Qnqr3XejAK9JuaRfdGZ86+2XdrQMs64Z0tM
uiSzmVTzSA30+tW2ier5css4m1NjNhPQSyqRRrLB7CS98cKO+ai/mcDBkkpV
fNV6CZQQaCbF6GvCdK1kPToXdKehVzhVAs1EHym598lVleiam6FG6ZKxS4Tj
a3HgfmFzDacSN5O8NlLgmRTUEjUXxF9y3laOTS2BsyXQTMxTJVd3RffmxDfj
RJGkEm3r9MLb6UhivPtnmNdqmwkcLIHrg03oFWbT+1GMva23F5EuybwWp9pM
Mi4Rhn8RWz74OQr0mnkbDtyVYwO9ZtaSkfxm8szb0e8WZvQuNukS9cy1XbeV
oEtaVktMumRS17QJ7ZdnGiZNqCXJYNLiWlJPMLGhS+qoJclgwrGWnKKvJb7R
JcXNxLVaInSJO3RJ/bUkr5lMiyNJ9WacUdAVuBKzmeh7hHObSVUs+dLEi9Tn
6GtxEgNHR2bs/gEiXVLQTNLBBNxXuCvHHnpNXCIMt+Fc2nFdk2oJTGYzAZp1
/rEXNV1y88rIjrt3z7PlaonZTK4ebSZjkUTfjDM7DiAx6FrUTObu2bgs2UyW
6IMlarKuD47mjqHIgL1jqB+RLsm8GSfdTEB5nRe7r+pD2LXkhHkbDhZd8mTW
JJoJ5JFbV0XHXO8Z+r4OJgv2Rldv37r6Ectakmgm5sGSinEzDoCus43Vm5xm
sm5t9VRJopmoN85ru1Rfi5OYuVujoqK+RaRLsm7G+eXXYk4kHUweit1X9T1E
gV5Tt+Ecgh85WHRJopYUNJOZayK1u2frszqYPLrvNfXMzDXfs68lEEnMZgKF
pBL7JDqYTI5J2N7nNg5lRZJ0M0mcJFlbBU90JTA3caCZ5ImvjS7jJObp945D
TtmeaibLR95saBnHrCUwF+SfS5myoMfybIkOJnDt70PDzyEt49TUkperdwcn
mgncjKOVV0BizUtwsprJwKvVJPJa1jmTxGPptu06j9wWXy6sn9n1p7Pf7up6
oH/AvpYYdMl/dg88ldlMLoybxvffOoQCvSbmmq6p6sUf3/4CFl2SqCWQRzKb
yYGz/wNOlehNnGtjoHX7hx+XXsZpWS0xz5mYmziTuqL/7fjswaPo0GvdwaRh
uoSuluQGk3FrSVYwEbokULqkoJm0dBkn1FqCsoxjVUuaQJckakleM5lfVU2g
kEyOP+G6FfNNvaTaTMa4koJmcmX1L9EP86hJ7+9GZUgdTGYfif6kpr7FqiVw
tqSS1Uy6Ni3XzyeDiUUtgWBy957IJThn4gQU6DWzlkAeyWgm0amS6LcoehPn
3j3PVqLzIXfaBJNH/+UnC8aaSfJmnNl7Nqq3e+PLhds6JkEwgTtxKkYzmZzR
TEbFEvOcSeJhLuOAvLrw+Gu6llTG7g5GqCUFlwgvOT56VykW9Jq4Rxhe/OET
e+zpksxakmgm6VMlFWMTpxIHjRJ0STqY5DWT6+PrgEF5hcuFr+i8ySwklbFm
Mnotjnl3cOY5k8TDPGoC8mr8zGgtqeTcHVyqlowu46Sbyfp/++WKkwfh+9P4
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

    "], {{0, 412.5}, {1101., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association["Comments" -> Association["Software" -> "Greenshot"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{991., Automatic},
  ImageSizeRaw->{1101., 412.5},
  PlotRange->{{0, 1101.}, {
    0, 412.5}}]], \
"Input",ExpressionUUID->"aae3dbc4-92ef-409a-9dac-8043f427b7f5"]], "Text",
 CellChangeTimes->{
  3.823155279662193*^9},ExpressionUUID->"50c51568-3503-40ae-a5a3-\
387b5b27a56d"],

Cell[TextData[{
 "Let us assume that we could stabilize the process of ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 " with the help of Lean and Six Sigma. The result is a lower variance. We \
can (only) roll now a 4, 5, or 6. This action should allow us to increase the \
Throughput."
}], "Text",
 CellChangeTimes->{{3.8252376231843004`*^9, 3.8252377747256947`*^9}, {
  3.825238153518151*^9, 
  3.825238158314306*^9}},ExpressionUUID->"2ecea37e-759a-4a67-8369-\
1331cb098f38"],

Cell[CellGroupData[{

Cell["6.1 Calculation part", "Subsection",
 CellChangeTimes->{{3.821518460775728*^9, 3.8215184635711555`*^9}, {
   3.8237788275925064`*^9, 3.823778830345231*^9}, {3.824454866625008*^9, 
   3.824454867504202*^9}, 
   3.8252230431969337`*^9},ExpressionUUID->"063f7ec5-7d69-4bb1-8d07-\
e9372cf21b9c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dg", "=", "BL1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], " ", ";", "\n", 
    "                  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "=", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "=", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "11"}], "]"}], "]"}]}]}], "]"}], ";", 
    "\n", "                  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       "startWipLevel"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "4"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "6"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "3"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "7"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "9"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], "+", " ", 
        RowBox[{"startWipLevel", "*", "2"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "10"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "12"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "6"}], "}"}], ",", "1"}], "]"}], "]"}]}], ";", 
    "\n", "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "15"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "16"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "18"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "18"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "19"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "18"}], "]"}], "]"}]}]}], ",", "\[IndentingNewLine]",
    " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "timeUnits", ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.8214580617588253`*^9, {3.821458126102867*^9, 3.8214581867917557`*^9}, 
   3.8214582284850206`*^9, {3.821458275598774*^9, 3.821458276754862*^9}, 
   3.8214584242355423`*^9, 3.8214589529542866`*^9, {3.8214594870797987`*^9, 
   3.821459531381855*^9}, {3.8214595637179327`*^9, 3.82145962720304*^9}, {
   3.8214596785971575`*^9, 3.821459689000943*^9}, 3.821518653553316*^9, {
   3.821519043407174*^9, 3.821519068375793*^9}, {3.8217906798595533`*^9, 
   3.8217906810655594`*^9}, {3.821881768568928*^9, 3.8218817906383142`*^9}, {
   3.821884339708438*^9, 3.8218843543144207`*^9}, 3.823082634157542*^9, 
   3.8230866754308643`*^9, {3.823086763081937*^9, 3.8230867762689805`*^9}, {
   3.8230868778647184`*^9, 3.8230868784377546`*^9}, {3.823087178737348*^9, 
   3.8230871841378994`*^9}, 3.823149678201603*^9, {3.8252370122891817`*^9, 
   3.82523701230813*^9}, {3.8252450189746704`*^9, 3.825245019382736*^9}, 
   3.825248323931049*^9, {3.8252504131224456`*^9, 3.8252504175528135`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"fcb20f96-c5ed-4547-a822-d7b4a175247d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"totalWIPTLS", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.825244715604868*^9, 3.8252447157838693`*^9}, {
   3.825245103070345*^9, 3.825245129311*^9}, {3.825245307226243*^9, 
   3.8252453273757615`*^9}, {3.82524626984344*^9, 3.825246274675441*^9}, 
   3.8252463965185966`*^9, {3.825246506871379*^9, 3.8252465159207306`*^9}, {
   3.8252482090714817`*^9, 3.825248211433289*^9}, {3.825248422588925*^9, 
   3.825248423642988*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"958936a4-e6ed-4e33-89a3-13c4169e8227"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"finishedgoodsTLS", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"dg", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TLS", "=", "dg"}], ";"}]}], "Input",
 CellChangeTimes->{{3.825246532642315*^9, 3.8252465449979124`*^9}, {
  3.825248216527418*^9, 3.8252482218129225`*^9}, {3.825248402883749*^9, 
  3.8252484039154253`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"bb8dc752-3ffa-413c-b478-bea450af9c38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"availCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{
           RowBox[{"3", "*", "i"}], "-", "1"}]}], "]"}], "]"}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"utilCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"3", "*", "i"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[100]:=",ExpressionUUID->"adaf0ff6-2352-47aa-89a5-bb1217d3f7e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<station 1\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  2\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  3\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  4\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  5\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  6\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}]}], "|>"}]}]}], " ", "|>"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<available versus utilized capacity per workstation\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<available capacity\>\"", ",", "\"\<utilized capacity\>\""}], 
          "}"}], ",", "Below"}], "]"}]}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<station 1\>\"", ",", "\"\<station 2\>\"", ",", 
           "\"\<station 3\>\"", ",", "\"\<station 4\>\"", ",", 
           "\"\<station 5\>\"", ",", "\"\<station 6\>\""}], "}"}], ",", 
         "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}], ",", 
        RowBox[{"Total", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}], ",", "Blue"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<queue12\>\"", ",", "\"\<queue23\>\"", ",", "\"\<queue34\>\"", 
         ",", "\"\<queue45\>\"", ",", "\"\<queue56\>\"", ",", 
         "\"\<totalWIP\>\"", ",", "\"\<finalgoods\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<WIP per queue, total WIP of all queues and final goods\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TLSRollingStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "Pink"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TLSQueueStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "LightBlue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TLSQueueGraph", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue12\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue23\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "10"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue34\>\""}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "13"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue45\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "16"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue56\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "18"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<finalgoods\>\""}]}], "]"}]}],
          "}"}]}], "}"}], ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TTLS", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sp", "-", "tvc"}], ")"}], "*", "finishedgoodsTLS"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ITLS", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"totalWIPTLS", "*", "tvc"}], ")"}], "+", "invest"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npTLS", "=", 
   RowBox[{"TTLS", "-", "oe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roiTLS", "=", 
   RowBox[{"PercentForm", "[", 
    RowBox[{
     RowBox[{"npTLS", "/", "ITLS"}], " ", "/", " ", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"csTLS", "=", 
   RowBox[{"PercentForm", "[", "1.", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ltTLS", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"totalWIPTLS", " ", "/", " ", "finishedgoodsTLS"}], " ", "/", 
     " ", "timeUnits"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pTLS", "=", 
   RowBox[{"TTLS", "/", "oe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"itTLS", "=", 
    RowBox[{"finishedgoodsTLS", " ", "/", " ", "totalWIPTLS"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"financeTLS", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", " ", 
        RowBox[{
         RowBox[{"\"\<Throughput\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "TBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "TCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "TDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "TTLS", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Inventory\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "IBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "ICL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "IDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "ITLS", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Operating Expenses\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "oe", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "oe", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "oe", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "oe", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Net Profit\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "npBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "npCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "npDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "npTLS", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ROI\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "roiBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "roiCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "roiDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "roiTLS", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Customer Service\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "csBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "csCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "csDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "csTLS", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Productivity\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "pBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "pCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "pDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "pTLS", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Inventory Turnover\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "itBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "itCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "itDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "itTLS", "]"}]}]}], "|>"}]}]}], 
        "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "LightGreen"}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.821457715262518*^9, 3.821457729134305*^9}, 
   3.8217904865515285`*^9, {3.8230826341805425`*^9, 3.823082634201543*^9}, {
   3.823086352114561*^9, 3.82308638013153*^9}, {3.8231585169524994`*^9, 
   3.8231585546367135`*^9}, {3.823774846113164*^9, 3.823775133427304*^9}, {
   3.823775477703473*^9, 3.8237754825755386`*^9}, {3.823775528931969*^9, 
   3.823775529799982*^9}, {3.8251583840738754`*^9, 3.825158699062357*^9}, {
   3.8251588265745034`*^9, 3.8251588276953225`*^9}, {3.825237012329181*^9, 
   3.825237012355181*^9}, 3.825328433271449*^9, 3.825328587387865*^9, {
   3.8253288152712812`*^9, 3.8253288201541643`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"eab073c0-c1f9-4213-ab51-a6b440b251f2"]
}, Closed]],

Cell[CellGroupData[{

Cell["6.2 Rolling dice statistics", "Subsection",
 CellChangeTimes->{{3.8218823188106346`*^9, 3.8218823215530763`*^9}, {
   3.8230863952017813`*^9, 3.82308639873883*^9}, {3.824454870883767*^9, 
   3.82445487179314*^9}, 3.8251590196720886`*^9, 
   3.8252230449442863`*^9},ExpressionUUID->"dbe905fa-828c-4ac5-b270-\
3ba9032a0026"],

Cell[CellGroupData[{

Cell[BoxData["TLSRollingStat"], "Input",
 CellChangeTimes->{
  3.8252236396006765`*^9, {3.8253286134751596`*^9, 3.8253286154703317`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"d22cbe94-2dac-41f7-ae6a-045ef7f3a9c2"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "station 1" -> 2., "station 2" -> 2., "station 3" -> 2., "station 4" -> 
          4., "station 5" -> 2., "station 6" -> 2.], "Mean" -> 
        Association[
         "station 1" -> 6.91, "station 2" -> 6.95, "station 3" -> 6.73, 
          "station 4" -> 4.93, "station 5" -> 6.91, "station 6" -> 6.96], 
        "Median" -> 
        Association[
         "station 1" -> 7., "station 2" -> 7., "station 3" -> 7., "station 4" -> 
          5., "station 5" -> 7., "station 6" -> 7.], "StandardDeviation" -> 
        Association[
         "station 1" -> 2.530999722631276, "station 2" -> 2.4510356500009864`,
           "station 3" -> 2.4323368652928457`, "station 4" -> 
          0.807227453457922, "station 5" -> 2.781958470087742, "station 6" -> 
          2.5972790735418836`], "Variance" -> 
        Association[
         "station 1" -> 6.405959595959596, "station 2" -> 6.007575757575758, 
          "station 3" -> 5.916262626262626, "station 4" -> 0.6516161616161616,
           "station 5" -> 7.73929292929293, "station 6" -> 6.745858585858586],
         "Max" -> Association[
         "station 1" -> 12., "station 2" -> 11., "station 3" -> 12., 
          "station 4" -> 6., "station 5" -> 12., "station 6" -> 12.]]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[1, 0.5, 0.5]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[9]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 1", 
                  Style[
                  "station 1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 2", 
                  Style[
                  "station 2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 3", 
                  Style[
                  "station 3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 4", 
                  Style[
                  "station 4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 4"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 4"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 5", 
                  Style[
                  "station 5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 5"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 5"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 6", 
                  Style[
                  "station 6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 6"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 6"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.93"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.531"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.45104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.43234"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.807227"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.78196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.59728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.40596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.00758"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.91626"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.651616"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.73929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.74586"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{601., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{601., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825223931713488*^9, 3.825225736375205*^9, 
  3.8252282031906424`*^9, 3.825241081101158*^9, 3.8252483462175226`*^9, 
  3.825248441399327*^9, 3.825250550381221*^9, 3.8252508211612315`*^9, 
  3.8253175194009733`*^9, 3.825319622263445*^9, 3.8253214354740143`*^9, 
  3.825324286016477*^9, 3.82532434317342*^9, 3.8253288780496073`*^9, 
  3.825397080164216*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"722ef305-d9be-486a-a543-6fb2cc519eef"]
}, Open  ]],

Cell[TextData[{
 "The Rolling Dice Statistics shows a higher mean, median, and much lower \
variance for ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 "."
}], "Text",
 CellChangeTimes->{{3.8252378037560215`*^9, 3.8252378505193653`*^9}, {
  3.825237888815028*^9, 
  3.825237908008049*^9}},ExpressionUUID->"a514a6e0-03f0-449c-929d-\
58b9985c5651"]
}, Open  ]],

Cell[CellGroupData[{

Cell["6.3 Queue statistics", "Subsection",
 CellChangeTimes->{{3.823086415235679*^9, 3.823086428028554*^9}, {
   3.823778816183541*^9, 3.8237788186849484`*^9}, {3.824454876872693*^9, 
   3.8244548779748993`*^9}, 3.8252230484727163`*^9, 
   3.8252239808392954`*^9},ExpressionUUID->"1834e62f-a378-4f8a-8d6d-\
8460312e81a9"],

Cell[CellGroupData[{

Cell[BoxData["TLSQueueGraph"], "Input",
 CellChangeTimes->{{3.825158716025488*^9, 3.825158719583213*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"2489999d-0870-4913-b285-70c48aa7c44a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdkDsOwjAQRFe0NBQUFBRgIYQQQkAg/MkPwq/jCEjUXMFH42hAtFv4WYpG
z+OdsdN9vh+vmojEv++vUbXqqVTLqTZUW6pNKPfb4A5yHPweuA8eYG6InhHO
j8ET8BT3meEdEfrm6Fuo2rti5C+Rv4K/Rt8GvEX+DrxH/gH5CfLSkD1YMlV9
n8/g52Gfz+EXyC/C83KED5ZTeH9vbPMl+svwvJyRD5YLfGObv6Lf2P73DfPG
dr87fGOd/xi79Aug+jWc
          "]], 
         LineBox[{{56.2, 9.}, {57., 5.}, {58., 5.}, {59., 8.}, {59.5, 9.}}], 
         LineBox[CompressedData["
1:eJxdjzsOwkAMBS1OQEFBQQF03GJPACQkEFokaq7go/lofOJB8osUvYyeJ97d
PV79c2Fmh8/7zd+zPbb5Yz+nw+vMU2WHl5nn2jdhFw4Yv8tcpS/sXZ0PmPP1
tW/CDuf/Qtgush/Glz6EbZD9Q+1dOGDOP2Zu0h/rvMPcH8a/yn4YX/qA8W/i
w/jSB4w/iT/V3mHuL2z3//wbLiw1oA==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue12\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 9.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJx1k8lKQ0EQRQtXLgVdZOFCHyIiIs6zsZ3iPL0Yh6WCa3+hP60/TaP3CH3B
B+FyqKpbVd2d6ffP9mMkIt6+f0Md/HzjKYZfXvrVmJDCHemCdFI6K50ybqQz
ph3LC+mc+c4be9/Ff+aEl6Vj0hXpqHTV/NYsf13KXhvGm9JGumXxbfPfMf9d
m3fP6vct3jW/A+ufpDrfDON3WNdn4ziq58sw93Vs/jD+J+ZvHKf1PhnmPHrW
v1fnx5n1h+l/LtW7yjDv6sLmgxvppcVh+l/ZfDDv6br2yzD730j13jPM/rdW
D7PfXb1PhvG/rznB+MH6HxbjeJDqfBPMfcGat1h+tHV+auv8bPFiHH3rD+t8
c7/OL8bxaP2Ns3GBub+BlPMb1PkZZn+Y/Z9qvwRTD+v+C0z9c+2fYOotXmDe
x4vVw/xfYPa3eLz+8Retl23n
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue23\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 16.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdkktKA0EURQtnDgUHDhyoiIiI+Dd+U4nfpG3NR2OcCAqOXYCTtwLdjsPa
g0vI2D34e7ehTqC5HO67t153avbppfc8FkJ4/Hl+9fOh+Tr+NRHfR7W30cdF
DH+/yX+1lvOUa+E67X7beQb+nGvpOu965brg+UvnRcwvwV92lr+CvlXwGnjd
VX0b4E3wFs7fdtb77YBrmN/F+Xuu2n8f8wfO8g8xf4T5Ovpjvr+JlW/k/dZA
vpmzgcMx+sXqP8n3M7H8U/SDwxl8cDjPzzPn6vv7vdV9NN1jfa8W9hNrP91j
9bfhF/ALnK9eaLV/Cb/Mc9V7y1dO/dfwxerp5H7sYC+x9yXNK9/N94hgA6cu
8j3kwQZOPeT7yPdz3+An+OEGebCBk3P1P90iDzZwAodBvk8cIC92P8EPdzgf
bGLl4Ych8mAb5vsl+OG+4m+SUJeG
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 49.44444444444445},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue34\"", TraditionalForm],
      PlotRange->{{0., 100.}, {49.44444444444445, 60.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdkrsKwkAURBcbLS0sLCw0iBERMcb3c9X4qP0Ewdpf2E/2E9Rwp9izEIbD
7J25JOk8349XxTmX/Z6/5uWpelee1LRm2jOtmyamDWgT3IK24StHuV346lVu
H/4APETeCPNj7JOhdwLOkTcFz9A/h7+Av4S/wn5r8Aa8xfwO+XvcP4B9zEGs
+SN8sd7XyTQxX6zvdI73C2L1F3FfKOL77oJ5sLtiXqz8G/YHu7up/YcB/BGn
/gtFQC+6
          "]], LineBox[CompressedData["
1:eJxd0rENwjAQBdATNQUFBQUF0DAAC7iFQAIJSaBFomYFj3YDwE4E+B/pvqXo
9PTt81nK8vao7yMz2wzfp76ewxpvk33X+lczPUfdoU6Q01PUAnWGvJB8H53p
BeohOtPoZ6WcLyWvZL5K8mN0Emca/V1sp+hE8z4a/Vxyq6MTzfeIXWyNnG9i
nsUutrPMT/P9Yqc5fxvz1MY8S+6SWyfzd3F/FrvYetQVztN8fx/3O837LzI/
zfM0/neX/Xb993sDpKxFFA==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue45\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 11.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlMsug1EURk+MDA0MDAxopBERcWvVtce1KC0txVQYe4X9aOeRPALSb0nO
16RZWf8+Z+99Lv+//P41+pxJKX38/v84/X13p+xkPRBb4qzYFufM58UtcUFc
ExfFprgkNozkXbE8TfNVq7tmvm75Nmwdm+be97b1sWO+K7KulsXbFt+z/jrm
+yL7cmD9HFr+I5F9ObbxJ1a/KzbEXHvg9HMqan8CZz/Pag+cczmvPXDO4ULU
OQXO+i6tP5z6V3W/gbP+Xu3Rq8ena5uPk/9G1P4Grn7SbT0+cPL3Re1/9Ovx
6U7UexY48+9F3YfAWd/A8g8sPrT+hhZ/qD3j7Id5MU+PNh+nnsULzvxRPT6P
6niYF/M0FnU/87iOB678xeLpyerj3BfzgvO9eK7jGWf9Fi8WTxNR558ndTzM
i41PL6LuR8ZZP059nPqv1j/O+47rfhWc79Pbf74f2W9uOA==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue56\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 24.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlE0vg0EUhW+sLC0sLCxoREREfH/TUR8tRfUtxVZY+wvz0+Yn+QlIzyOZ
06Q5eXrunHtn5n27+P7VfE5FxMfv908nn+/2RFeSfpDOSqelLemMdMnq5kyp
nzddMB+lD7nkLBszJ31Xba4143XL3zDetPwtW79t8+9IOadd8/eM9y3vwPof
Wv2R5R9b/YmUczqVch5n1q8tZX9J2ppohll/XvfLMHkd8zvmX5gP0/9Squcg
w/S/svlg8q/r+gyT363rc7euj57N16vr48b6G8et5RtHX6r7zH3z76S63wwz
372U84FZ/2D5MPsf2HwD8x9rTjDnaVxg+g9t/bD2M8x642jq+tTUfjYuxjGS
6v7SqPYzrPxifjxZf1j7ycYF5v17rv0Es3/zi/kxlur+07j2s3Gx+niR6vlI
MPuH6Q/T/9Xmh3kfYM4f5n/77T/vB0GXbGA=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"finalgoods\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 1]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAmLeiL2FX6vfOH4q39cEoheFmXaD6DabK9NBdMSMR0tA
tNwN1XMg2kn94BMQrfJ6ccM3IJ2jaDsRRFdue+EnUvPGkSWXfakEkC5aLLoH
RHcp32ByrH3jKOYkruICpLturDngCqQnn183wx1Ia1/1Xv6s/o3j+jn394Lo
Zd+utj8H0jMiNl0B0Ze4M36BaMlXSqkvgLSK6Iw2EO3TcXQKiJ7W+EHwJZCW
aXXzAdH+/A7hINopNHLtayA9WaZBnrPhjWPnazFGLiCt9D7PlBtI+7V6cosC
act8fXEQfU3vnJwYkA7IWOcAovfVfbtoBqQdii7dMAfSyZWVuy2AtJfaaXkr
IM2k9l4NRPMonI61AdKLWvhXxwJpAE3XrNU=
  "],
 CellLabel->
  "Out[117]//TableForm=",ExpressionUUID->"0ecd32d9-72e9-4a22-abca-\
b23e91ae9392"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["TLSQueueStat"], "Input",
 CellChangeTimes->{
  3.8252237074112024`*^9, {3.825328621489294*^9, 3.825328625926999*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"f674c1b3-43d9-467f-b64d-23a5e49d37a7"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "queue 12" -> 4., "queue 23" -> 2., "queue 34" -> 37., "queue 45" -> 
          4., "queue 56" -> 2., "final goods" -> 2.], "Mean" -> 
        Association[
         "queue 12" -> 5.76, "queue 23" -> 6.95, "queue 34" -> 57.52, 
          "queue 45" -> 5.96, "queue 56" -> 6.88, "final goods" -> 5.23], 
        "Median" -> 
        Association[
         "queue 12" -> 5., "queue 23" -> 6., "queue 34" -> 59., "queue 45" -> 
          5., "queue 56" -> 6., "final goods" -> 5.], "StandardDeviation" -> 
        Association[
         "queue 12" -> 1.912848634625829, "queue 23" -> 3.87004815567878, 
          "queue 34" -> 3.825697269251658, "queue 45" -> 2.4242878783617505`, 
          "queue 56" -> 4.252818435633556, "final goods" -> 
          2.0243717069947427`], "Variance" -> 
        Association[
         "queue 12" -> 3.658989898989899, "queue 23" -> 14.977272727272727`, 
          "queue 34" -> 14.635959595959596`, "queue 45" -> 5.877171717171717, 
          "queue 56" -> 18.086464646464645`, "final goods" -> 
          4.098080808080808], "Max" -> 
        Association[
         "queue 12" -> 15., "queue 23" -> 23., "queue 34" -> 60., "queue 45" -> 
          20., "queue 56" -> 24., "final goods" -> 12.]]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.87, 0.94, 1]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[10]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 12", 
                  Style[
                  "queue 12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 12"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 12"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 23", 
                  Style[
                  "queue 23", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 23"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 23"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 34", 
                  Style[
                  "queue 34", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 34"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 34"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 45", 
                  Style[
                  "queue 45", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 45"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 45"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 56", 
                  Style[
                  "queue 56", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 56"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 56"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["final goods", 
                  Style[
                  "final goods", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "final goods"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "final goods"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["37.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.76"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["57.52"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.88"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["59.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.91285"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.87005"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.8257"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.42429"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.25282"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.02437"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.65899"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14.9773"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14.636"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.87717"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.0865"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.09808"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["20.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{610., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{610., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8252239321354933`*^9, 3.8252257368331995`*^9, 
  3.8252282035736375`*^9, 3.8252483464135227`*^9, 3.8252484416093364`*^9, 
  3.8252505505672703`*^9, 3.8252508215601807`*^9, 3.8253175198259773`*^9, 
  3.8253196226884985`*^9, 3.8253214359140673`*^9, 3.8253242864844236`*^9, 
  3.825324343612342*^9, 3.8253288784746075`*^9, 3.8253970805979414`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"9064fae4-ea57-4717-a2f6-7250889a28d7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
6.4 Comparison of a) available and utilized capacities and b) last run WIP \
plus Final goods\
\>", "Subsection",
 CellChangeTimes->{{3.821518805549862*^9, 3.821518808269321*^9}, 
   3.823778809879298*^9, {3.8244548850720463`*^9, 3.8244548908881454`*^9}, 
   3.825223054699696*^9, 
   3.8252370124081297`*^9},ExpressionUUID->"7439154a-12b8-4159-9a3b-\
537aa9acb561"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\"\<*        *\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821456255721122*^9, 3.8214562940870533`*^9}, 
   3.8215185548592567`*^9, 3.8218816572998486`*^9, 3.821882342070235*^9, {
   3.8231586036570826`*^9, 3.8231586136763773`*^9}, 3.825226156179596*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"5867c2ee-6db6-422a-9628-ff5098aa87a7"],

Cell[BoxData[
 TemplateBox[{"*        *", "\"*        *\"", 
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5611439176649233, 0.}, {14.738231820482538`, 
         0.}}]}, {{}, {{{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.8391260334064451, 0.}, {1.703475620043867, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.839126033406445, 0.}, {2.703475620043867, 
                 497.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.246077273494179, 0.}, {4.110426860131601, 
                 695.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.246077273494179, 0.}, {5.110426860131601, 
                 504.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.653028513581913, 0.}, {6.517378100219335, 
                 673.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.653028513581913, 0.}, {7.517378100219335, 
                 519.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.059979753669648, 0.}, {8.92432934030707, 
                 493.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.059979753669648, 0.}, {9.92432934030707, 
                 493.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{10.466930993757382`, 0.}, {11.331280580394804`, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{11.466930993757382`, 0.}, {12.331280580394804`, 
                 508.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{12.873882233845116`, 0.}, {13.738231820482538`, 
                 696.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{13.873882233845116`, 0.}, {14.738231820482538`, 
                 523.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}}, {}, {}}, {}, {
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {1.271300826725156, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["497.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {2.271300826725156, 497.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["695.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {3.67825206681289, 695.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["504.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {4.67825206681289, 504.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["673.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {6.085203306900624, 673.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["519.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {7.085203306900624, 519.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["493.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {8.49215454698836, 493.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["493.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {9.49215454698836, 493.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {10.899105787076092`, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["508.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {11.899105787076092`, 508.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["696.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {13.306057027163828`, 696.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["523.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {14.306057027163828`, 523.}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, {
        StyleBox[{Antialiasing -> False, {
           Directive[
            Thickness[Tiny]], {
            LineBox[{{0.5611439176649233, 0.}, {15.021773578538888`, 0.}}]}, 
           StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
          StyleBox[{{
             Directive[
              Thickness[Tiny]], 
             LineBox[{{0.839126033406445, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {0.839126033406445, 
                0.}]}], 
             LineBox[{{14.738231820482536`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.738231820482536`, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
               LineBox[{{2.703475620043867, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {2.703475620043867, 
                  0.}]}], 
               LineBox[{{3.2460772734941785`, 0.}, 
                 Offset[{-1.102182119232618*^-15, -6.}, {3.2460772734941785`, 
                  0.}]}], 
               LineBox[{{5.1104268601316, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.1104268601316, 
                  0.}]}], 
               LineBox[{{5.653028513581912, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.653028513581912, 
                  0.}]}], 
               LineBox[{{7.517378100219334, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {7.517378100219334, 
                  0.}]}], 
               LineBox[{{8.059979753669646, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {8.059979753669646, 
                  0.}]}], 
               LineBox[{{9.924329340307068, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {9.924329340307068, 
                  0.}]}], 
               LineBox[{{10.46693099375738, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {10.46693099375738, 
                  0.}]}], 
               LineBox[{{12.3312805803948, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.3312805803948, 
                  0.}]}], 
               LineBox[{{12.873882233845112`, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.873882233845112`, 
                  0.}]}]}}}, 
            StyleBox[{
              Directive[
               Thickness[Tiny]], 
              Directive[
               Thickness[Tiny]], 
              StyleBox[{
                InsetBox[
                 FormBox["\"station 1\"", TraditionalForm], 
                 Offset[{0, -2}, {1.771300826725156, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 2\"", TraditionalForm], 
                 Offset[{0, -2}, {4.17825206681289, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 3\"", TraditionalForm], 
                 Offset[{0, -2}, {6.585203306900623, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 4\"", TraditionalForm], 
                 Offset[{0, -2}, {8.992154546988356, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 5\"", TraditionalForm], 
                 Offset[{0, -2}, {11.399105787076092`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 6\"", TraditionalForm], 
                 Offset[{0, -2}, {13.806057027163824`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}]}, {{}}, 
               StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
             False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
         "GraphicsAxes"}, StripOnInput -> False]}}, {
      DisplayFunction -> Identity, AspectRatio -> 0.5, Axes -> {False, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.5611439176649233, 0.}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
       FormBox["\"available versus utilized capacity per workstation\"", 
         TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"available capacity\"", "\"utilized capacity\""}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5079726666666667, 0.313888, 
                    0.6270646666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.761959`", ",", "0.470832`", ",", "0.940597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2875306666666667, 0.473182, 
                    0.6180513333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.431296`", ",", "0.709773`", ",", "0.927077`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}],
              ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.651]]], 
         RGBColor[0.976, 0.6848, 0.26480000000000004`]], {{
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 6.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 6.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 60.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 4.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 4.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 80.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 523.}, 
           "RoundingRadius" -> 0]}}}, {}, {}}, {}, {
       InsetBox[
        FormBox[
         StyleBox["6", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {1., 6.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["6", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {2., 6.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["60", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {3., 60.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["4", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {4., 4.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["4", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {5., 4.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["80", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {6., 80.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["523", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {7., 523.}], 
        ImageScaled[{0.5, 0}]]}, {}, {}, {}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.4107501820830298, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["\"queue12\"", TraditionalForm], 0}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox["\"queue23\"", TraditionalForm], 0}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox["\"queue34\"", TraditionalForm], 0}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox["\"queue45\"", TraditionalForm], 0}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox["\"queue56\"", TraditionalForm], 0}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox["\"totalWIP\"", TraditionalForm], 0}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox["\"finalgoods\"", TraditionalForm], 0}}, None}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"WIP per queue, total WIP of all queues and final goods\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{
  3.821456225821967*^9, 3.8214562956960487`*^9, 3.821456459016817*^9, 
   3.821457748098464*^9, 3.8214585677641163`*^9, 3.8214590091753983`*^9, 
   3.821459105295044*^9, 3.8214596950306435`*^9, {3.821518513015794*^9, 
   3.8215185220508595`*^9}, 3.8215185566626835`*^9, 3.8215186587520895`*^9, {
   3.821519098743548*^9, 3.8215191042444963`*^9}, 3.8217906873115025`*^9, 
   3.82179083151563*^9, {3.821790937181072*^9, 3.8217909455519304`*^9}, 
   3.821792653756541*^9, 3.821792782062765*^9, 3.8217930610535917`*^9, {
   3.8217931015032444`*^9, 3.8217931094823976`*^9}, 3.821793347849378*^9, 
   3.8217933896422524`*^9, 3.8218715507467923`*^9, 3.821873654175861*^9, 
   3.821875313452216*^9, 3.8218772081784782`*^9, 3.82188234377446*^9, 
   3.8218824862341146`*^9, 3.821884363990446*^9, 3.82188443159155*^9, 
   3.821884652606244*^9, 3.8223051102250004`*^9, 3.8229216202404346`*^9, 
   3.8229218724460535`*^9, 3.8229223436479454`*^9, 3.8230826764929624`*^9, 
   3.823083183864007*^9, 3.823086478117999*^9, 3.823086537695612*^9, 
   3.823086614129196*^9, 3.8230866818678265`*^9, 3.8230867828143883`*^9, 
   3.8230868872800455`*^9, 3.8230872173875504`*^9, 3.8230873982390947`*^9, 
   3.823088645347455*^9, 3.8230887781023345`*^9, 3.823149687478222*^9, 
   3.8231586146098146`*^9, 3.8231587528872023`*^9, 3.8237655269592905`*^9, 
   3.8237719369307685`*^9, 3.823775237593435*^9, 3.8237790136308393`*^9, 
   3.8251533386447725`*^9, 3.8251535192238817`*^9, 3.8251551349404106`*^9, 
   3.825155749801283*^9, 3.825156051462434*^9, 3.82515690534709*^9, 
   3.825157172982579*^9, 3.825157286458894*^9, 3.8251582877509117`*^9, 
   3.825158754760748*^9, 3.825158842619393*^9, 3.8251636272546573`*^9, 
   3.8252239325104694`*^9, 3.8252257371891985`*^9, 3.825228203949636*^9, 
   3.8252483466164694`*^9, 3.8252484417843266`*^9, 3.8252505506672726`*^9, 
   3.8252508219481792`*^9, 3.8253175202389717`*^9, 3.8253196230574465`*^9, 
   3.825321436290021*^9, 3.8253242868864765`*^9, 3.8253243439735465`*^9, 
   3.82532887887061*^9, 3.8253970809509425`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"df029b63-f17b-4254-b604-2f3fb3c61430"]
}, Open  ]],

Cell[TextData[StyleBox["6.5 Comparison of Throughput Accounting figures", \
"Subsection"]], "Text",
 CellChangeTimes->{{3.8237787498846292`*^9, 3.823778758841248*^9}, {
   3.824454896419323*^9, 3.8244548976259375`*^9}, {3.8251587808789597`*^9, 
   3.8251587851594625`*^9}, 
   3.825223057464142*^9},ExpressionUUID->"164c0424-54cf-4dcd-bc4d-\
4af3aea4f3eb"],

Cell[CellGroupData[{

Cell[BoxData["financeTLS"], "Input",
 CellChangeTimes->{
  3.8252238969800386`*^9, {3.825328630224645*^9, 3.825328632897991*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"f4276ab4-0076-448c-a5ab-77b20ecb627d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Throughput" -> 
        Association[
         "Balanced Line" -> 132800., "Constrained Line" -> 74200., "TOC-DBR" -> 
          74200., "TLS" -> 104600.], "Inventory" -> 
        Association[
         "Balanced Line" -> 48600., "Constrained Line" -> 104400., "TOC-DBR" -> 
          33600., "TLS" -> 36000.], "Operating Expenses" -> 
        Association[
         "Balanced Line" -> 30000., "Constrained Line" -> 30000., "TOC-DBR" -> 
          30000., "TLS" -> 30000.], "Net Profit" -> 
        Association[
         "Balanced Line" -> 102800., "Constrained Line" -> 44200., "TOC-DBR" -> 
          44200., "TLS" -> 74600.], "ROI" -> 
        Association[
         "Balanced Line" -> PercentForm[0.021152263374485596`], 
          "Constrained Line" -> PercentForm[0.009846743295019156], "TOC-DBR" -> 
          PercentForm[0.013154761904761905`], "TLS" -> 
          PercentForm[0.020722222222222222`]], "Customer Service" -> 
        Association[
         "Balanced Line" -> PercentForm[1.], "Constrained Line" -> 
          PercentForm[1.], "TOC-DBR" -> PercentForm[1.], "TLS" -> 
          PercentForm[1.]], "Productivity" -> 
        Association[
         "Balanced Line" -> 4.426666666666667, "Constrained Line" -> 
          2.473333333333333, "TOC-DBR" -> 2.473333333333333, "TLS" -> 
          3.486666666666667], "Inventory Turnover" -> 
        Association[
         "Balanced Line" -> 4.643356643356643, "Constrained Line" -> 
          0.8791469194312796, "TOC-DBR" -> 5.455882352941177, "TLS" -> 
          6.5375]]}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1, {All, All, "TOC-DBR"} -> 1, {All, All, "TLS"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TOC-DBR" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TLS" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 4, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "Balanced Line", "Constrained Line", "TOC-DBR", "TLS"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`AnyType}], 8], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.88, 1, 0.88]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[11]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1, {All, All, "TOC-DBR"} -> 1, {All, All, "TLS"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TOC-DBR" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TLS" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 4, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "Balanced Line", "Constrained Line", "TOC-DBR", "TLS"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`AnyType}], 8], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     1, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Balanced Line", 
                  Style[
                  "Balanced Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Balanced Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Balanced Line"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Constrained Line", 
                  Style[
                  "Constrained Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Constrained Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Constrained Line"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TOC-DBR", 
                  Style[
                  "TOC-DBR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "TOC-DBR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "TOC-DBR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TLS", 
                  Style[
                  "TLS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "TLS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "TLS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Throughput", 
                  Style[
                  "Throughput", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Throughput"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["132800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104600."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory", 
                  Style[
                  "Inventory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104400."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Operating Expenses", 
                  Style[
                  "Operating Expenses", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Operating Expenses"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Net Profit", 
                  Style[
                  "Net Profit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Net Profit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["102800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ROI", 
                  Style[
                  "ROI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ROI"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.115%\"", ShowStringCharacters -> False], 
                  0.021152263374485596`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"0.9847%\"", ShowStringCharacters -> False], 
                  0.009846743295019156, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"1.315%\"", ShowStringCharacters -> False], 
                  0.013154761904761905`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.072%\"", ShowStringCharacters -> False], 
                  0.020722222222222222`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Customer Service", 
                  Style[
                  "Customer Service", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Customer Service"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Productivity", 
                  Style[
                  "Productivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Productivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.42667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.48667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory Turnover", 
                  Style[
                  "Inventory Turnover", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory Turnover"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.879147"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.45588"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.5375"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{548., {119., 125.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{548., {119., 125.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8252239326364703`*^9, 3.825225737320199*^9, 
  3.825228204101637*^9, 3.8252483467804694`*^9, 3.8252484419613256`*^9, 
  3.8252505508242235`*^9, 3.825250822094179*^9, 3.825317520406977*^9, 
  3.825319623207445*^9, 3.8253214364490147`*^9, 3.8253242870624247`*^9, 
  3.825324344132493*^9, 3.825328879035661*^9, 3.825397081107994*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"3a565537-b1a0-4282-9090-268ec11d3f02"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7. Full TOC", "Section",
 CellChangeTimes->{{3.8214561974537773`*^9, 3.8214562194485636`*^9}, {
   3.821458872285861*^9, 3.82145887737852*^9}, 3.8215184681349063`*^9, {
   3.8215188731756945`*^9, 3.821518874082848*^9}, {3.8244548605710354`*^9, 
   3.824454861120075*^9}, 3.8252230373679757`*^9, {3.825238977369733*^9, 
   3.8252389866684313`*^9}},ExpressionUUID->"bdacaf37-d980-4fdc-8225-\
47bee7316098"],

Cell[TextData[{
 "The term Full TOC is invented by the author to describe the next step of \
the ",
 StyleBox["Five Focusing Steps",
  FontSlant->"Italic"],
 ": ",
 StyleBox["4. Elevate the Constraint",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". After all these improvement steps the moment has come to invest some \
money to enlarge the capacity of ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 ", but not earlier.\nWith a further focus on Lean and Six Sigma improvement \
opportunities and the investment in one new dice, we can further improve the \
Throughput of our system.\nOur invest goes into four-sided dice that allows \
us to roll either a 5, 6, 7, or 8. "
}], "Text",
 CellChangeTimes->{{3.8252371017555857`*^9, 3.8252371567213917`*^9}, {
  3.8252372045571537`*^9, 3.825237336593275*^9}, {3.825237385287176*^9, 
  3.8252374730229197`*^9}, {3.8253186533267508`*^9, 3.8253187193915157`*^9}, {
  3.825318751733681*^9, 3.825318831382388*^9}, {3.825318863507391*^9, 
  3.8253190193613243`*^9}, {3.825319061891204*^9, 3.825319154249617*^9}, {
  3.825319203939736*^9, 3.8253192546799817`*^9}, {3.8253228249550133`*^9, 
  3.8253229151254044`*^9}},ExpressionUUID->"d60f9793-8242-4554-8fd7-\
cfc7b33be0a1"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qm0VdWV73//1aUzjb2iEmOLgh2C2AJKo4j0AtJLjyAgiHQqAgE7sEHp
G1GiGBWjgohGYzTBvkln8l4qJvWq/kmlxsuLNWq8909ejVFj7P9Z+9y1z27W
bs9a+8y51++OMXPvaS9cj+TeD8vv/NakuUOn/c0hhxxyyxdr/zN04qIr5s+f
uGTYN2oXhs+55cbpc6ZO6TdnwdTpU+dfNOlva1d2r9331b8/5JC/q338/7ww
xMk6fxOYoYnzt/550T/DUufvlHOdcv4+0wx35x9yzhdeHJF5vhiYkY3Zmz5f
2nt95vlyYEalzleUM1o5h2aaMd58Nc/sG+vN13LM1/eNyzXfCMz4xDksMBNS
53Dl3KCcI/zzUtxMjMyRmWaSN0flmKNfmpxrjgnMlMQ5Nm72T02d4wIzLXHa
xc505RyfOjO8OSHnnLj/xuzzcmPavzwz83wzMLNS5yTl3KScb8XObOWcnDpz
vDnFPweyzFx3Ts05px24OfOcHph5qXNG7MyPTIe4ecU/tyjnTOUsUM5ZmeZW
bzrmmE6vLMw8ZwdmkXpebcw5sbM4cc6NnSXKOS91lnpzfqa5zZvOOeaCV29v
zPezT5fv35FrugZmWeJcGDt3Kqdb6iz35qK4eS1uVnhzceqs9OaSnHPpa9/O
PJcFZlXiXB47qxvzemO6Z5q7ItMj09ztTc8cc8Xr9+SaK1+/N/P08s8P7ss8
vQOzJnX6xM7ayPTNNPd7c1WOufoHD6jnjfTp98aDmeeaNx7KNf29WZc618bO
w5EZkGV++Ig3A3PNem8G5ZzBP9yQeYYEZmPqDPVmU+oMezNuNifOdbGzRTnD
U2erNyNyzsg3t2We6wOzvTFvpc8ob3akzujAPJo4Y2Jnp3LGZprH3BmXZX7U
mPE/erzQTPjRrlxzQ2C+kzgTY+cJ5UxSzpPKmfzjLLM7MlMyzVPeTM0x0378
3VwzPTBPJ86MuDn4jHJuTJ1nlTMzdvZEZlamec6bm3LM7IPfS5+3GzMnMM9n
nrmBeSF1blbOi8qZl2n2ejM/dfZ5c8s7eeYlbxbknFvf2Z95Fgbm5dRZpJwD
ylnsn3fj5hVvluSaV71Zmmm+785tbWODbef17Ty2/QVWtq32bYq2nde3y7dt
tW8Xte1svl3MtvP6dh7bjvVt2HZTtt1ei22rfZuibef17Ty2fZpB24717cK2
rfZtKradybdJ2vYS0rad17fz2Ha8bxe17Qy+XVHbjvdt2HYztt3LoG1n8+2q
2na6b+ex7Uy+Xdi2HyFu2+m+XdS24327qG0X9+3ybTvdt/PYdrxvN2/bmXzb
CttW+3ZR287m27DtLLadzbeL2XYm3yZj22rfpmPbxX27fNtW+zZF2/b7dppx
57HteN8uattq36Zp2/l8O49tf8mgbWfz7erYdl7fzmPbhxu17Yl8bDuDb+ex
7XjfLmrb0xnZdrpv57HteN8uatsxvk3SttN9m6JtZ/NtIrb9SvO2He/bzdt2
Nt8uZtsB3yZv22rfpmPbxX27fNtepdW2s/l2MdvO69t5bPtKLbad7ttUbDvW
t2HbTdl2Xt/OY9uDWdm22rep2Hasb5O0bbVvU7TtvL6dx7bjfbuatp3Xt/PY
dqxvF7ZttW/bZttzDNp2Nt/OY9t7Sdt2Xt/OY9uLjNr2K1psO8m49dh2um/n
se1svl3MtsvqkhS37XTfJmPbJXVJSNp2rG83b9vldUmo27bat/PYdl7fzmXb
JXVJ9Ni22rcL23Ym3y5m263pkuSw7Qy+TcW2W9MlKWrbat8maduldUkI2nas
b9Oz7dZ3SYra9l20bbslXZKitr1Wr21n8O08tp3Xt/PYdrxvF7TtFnRJitt2
um/nse1439Zr2ya7JFpsO4Nv57Ht1ndJcth2C85uU7HtbL5d1LZ387HtGN8u
atvxvl3Utsvpkuix7XTfpmLbZXVJSNp2rG83b9vZfDvZtuOMG7aN5jZl20Zz
m3tzG7ZtZ3PbXts22dymb9tobtve3IZt67PtKnRJqNh2WV0S+raN5rY+20Zz
G7ZdVpekqG2rfVu/bXNqbuu1bTS3udj2i6RtG83t4rYdNm40t2Hb2CeJ5jb2
SXLbJ4nmNvZJmuySwLY5NLf12/adTds2mttobpfV3KZo21z3SZrtktCz7bK6
JPptewtp20Zzm3tz2wbbRnObg23z3Se5j5Ft821uJ03hLokW22ba3CZp29gn
GfVtvbZttrlNz7b57pPk1NzWa9smm9sUbbsKzW2atm1unyTX5jZF2+a7T3IF
I9vm09ymb9tobqO5bZdtc90nOZKVbaO5beM+STS3+TW3sU/SVJcEth2e2999
jdQ+SZNdEvr7JHk2t2naNprbtu+TLKtLQn+fJJ/mNnnbPqDXtrk2t/XbNprb
LPZJsm1ua7Dt12jbdhWa2+RtuxJdkuab2xRtuwrNbZq2XVaXhLhtv0Xbtvk2
t+21bZPNbe22jeY2YdtGc1tl23LQ3IZt0+6SULdtNLexT5JPc5uibVehuW2D
bZe1T9Jkl4Sibbe+S4LmNqXmtm22jeY2D9vGPkk0t9Hc5mLbZTW3m98nybW5
TdG2y+uSwLY5NLf12/YB0rYd9u0k46bY3KZo22huc29uw7bR3K6+bZfV3KZv
22huY58kbFuXbXNtbuu3bTS39dk2mtvYJ2mySwLbNtPcpm7bO0nbNprbaG7T
t200tznYNt99kq9qs+0446Zo2+V1SajbNprb2CeJ5jYH2zbZ3KZo2+V1SfTa
NprbXGx7CWnbRnObh21jnyS/fZImuyQUbbsKzW2ato3mNvZJwra5Nbdts200
t9Hcxj7J5m1bZdxlNLdp2nZZXRK9tm20S0LQtkvrkmi37Yl8bJtRc5u+bZfV
3G5+n+TJ5G2b5z5Jk10S7bZttLlNe59kwLfJ27bB5rbmfZImuyS27ZMsrUuC
fZKwbfJdEuq2zbS5TdK2sU/SdHObom1Xobltm23PMWjbJrskFG27tC6Jdtt+
hYRt+40bzW00t8vukpC0bab7JI9mZdt8mtv0bRvNbTS3eTa3Sdp2aV0SgrbN
dp8kp+Y2cdtm2tzGPkk0t6nvkzTZJaG/TxLNbaq2XVZzm7xto7mNfZK22TbT
fZJ5fFsMbJtql6T55jZF20Zzm3tzu/q2jeY2bLus5jZ920Zz2/bmNmxb3z7J
KnRJqNg29kmiuY19krBtTrY9QYttl7VPklNzW69to7nNxbZfJG3baG63zrbv
aBsbmtu22Tb2SaK5jX2SXGwbzW3skzTZJYFtc2hu67ftO5u2bTS30dwuq7lN
0bbL65LotW2zXRJ6tl1Wl0S/bW8hbdtcm9v0bRv7JNHctsu2+e6T3MfItu1t
bqtsuz6v29ncJmnb2CcZ9W3Ytp37JDk1t/XatsnmNkXbrkJzm6Ztm9snybW5
TdG2+e6TXMHItvk0t+nbNprbaG7bZdtc90mOZGXbaG7buE8SzW1+zW3skzTV
JYFtN2PbKt+uGzePLgn9fZI8m9s0bRvNbdv3SaK5za+5Td62D+i1ba7Nbf22
jeY2i32SbJvbGmz7Ndq2jX2SJdh2JbokzTe3Kdp2FZrbNG27rC4Jcdt+i7Zt
821u22vbJpvb2m0bzW3Cts2zuU3dttOMm4ptY58kv32SX2dl22hu27hPkmtz
m6JtV6G5bYNtl7VP0mSXhKJtt75LguY2peY2SdtGc9t628Y+STS30dzmYttl
Nbeb3yfJtblN0bbL65LAtjk0t/Xb9oGmbZtic1tl20nGbaq5TdG20dzm3tyG
baO5XX3bLqu5Td+20dzGPknYti7b5trc1m/baG7rs200t7FP0mSXBLZtprlN
3bY5Nbf12jaa2/ya2zRtG81tDrbNd5/kq2Rs+4736sN9n+QXWNk2mtvYJ4nm
NgfbNtncpmjb5XVJ9No2mttcbHsJadvm2ty2zbaxT5LfPkmTXRKKtl2F5jZN
20Zz2/Z9kmU1t+nvk+TT3LbNttHcRnMb+yTL6JIk27aYZW3GXal9kka7JHpt
22iXhKBtl9Yl0W7bE/nYNqPmNn3bLqu53fw+yZPJ2zbPfZImuyTabdtoc5v2
PsmAb5O3bYPNbc37JE12SWzbJ4nmNvZJUrft8rok1G2baXObpG1jn6Tp5jZF
265Cc9s2255j0LZNdkko2nZpXRLtts2vua2ybTlobqO5XRnbZrpP8mhWts2n
uU3fttHcRnObZ3ObpG2X1iUhaNts90lyam4Tt22mzW3sk0RzG/sk0dy2r7lN
fZ/kbj62jeY29knaZtsG90lya26rbFtt3NW0bZNdEv22PZq0baO5zb25XX3b
RnMbtl1Wc5u+baO5bXtzG7atb59kFbokVGwb+yTR3MY+Sdg2J9s22dymaNtc
90miuc3Ftl8kbdtobvOw7TjfXvbeD1g0tynaNvZJorldVpcE+yQp2zaa29gn
abJLAtvm0NzWb9tobqO5zae5TdG2y+uS6LVts10SerZdVpdEv21vIW3bXJvb
9G27rOY29klStW2TXRKKts13n+Q+RraN5rY+2677dt246dp2rG+TtG3sk4z6
Nmzbzn2SnJrbem3bZHObom1XoblN07bN7ZPk2tymaNsm90mW1dymb9t8mtv0
bRvNbTS37bJtrvskR7KybTS3bdwnieY2v+Y29kma6pLAtlvV3FbZdpxxk7Zt
NLcjvk3TttHctn2fJJrbhvZJGuySkLftA3ptm2tzW79to7nNYp8k2+a2Btt+
jbZtY59kCbZdiS5J881tiraN5ja/fZKjONn2W7Rtm29z217bNtnc1m7baG4T
tm2eze2q23bYuLk3t22z7fK6JNRtG81tG/dJcm1uU7TtKjS3bbBtvvskl5K2
7dZ3SdDcptTcJmnbaG5bb9vYJ4nmNprbXGwbzW3skzTZJYFtc2hu67ftA03b
dhWb20mTp0tC0bZNdEle+uNHjv/t/c9/E7Htl/74ceQ+FLsk9JvbsG00t6tv
22U1t+nbNprb2CcJ29Zl21yb2xRtuwpdEj22jeY29kma7JLAts00t6nbNqfm
tl7bRnObX3Obpm2juc3Btvnuk3yVkW2n+/adqcZddpeExj7J3/yfPzrht/DZ
7c8U96Fk2ya7JNgnieY2dds22dymaNvldUn02jaa21xsewlp2+ba3LbNtrFP
kt8+SZNdEoq2XYXmNk3bRnPb9n2SZTW36e+T5NPcts220dxGcxv7JMvokpi1
7TsTjbtc277r13siXpz2Nu6jdQV8O9s+SZVfh3sk2Y07attbfvf93L9f1dsN
H6+Pte1Fn37HefNPn7q/zr/8138GHvfn//zfzqf/8S/Od3//ttPv7VWFuyRb
/+k158PPP3P+8Nc/B55fXBbXL/70iWJnt7Xb9kQ+ts2ouU3ftpk2t0naNs99
kia7JNpt22hzm/Y+yYBvk7dtg81tzfskTXZJbNsnieY29klSt+3yuiTUbRvN
beyT5NPcpmjbVWhu22bbcwzatskuCUXbLq1Lot227Wtux/l21Lhb09xWnZtO
exM9EVPNbT3GHX9ue3+oc1L0beGnu5S2LQw7z5vw6LNfn5/Ztp/+/dsRN497
E949+eONld4neTQr2+bT3KZv22huo7mN5jaHfZJdqNs2232SnLokxG2baXMb
+yTR3MY+STS37WtuU98nuZuPbaO5jX2Sttm2wX2SXJvbOm07aNyt3Sep27ib
3SeZZNzSsJONO7lJotu4ZW9EnNsu+ibMetLHG1K7JMLD87794a+fo7mtrbld
fdtGcxu2XVZzm75to7lte3Mbto3mNkXbxj5JNLexTxK2zcm2TTa3Kdp2eV0S
vbaN5jYX236RtG1zbW7bZttF90km2fad773hThldkrR9kkWMW9UqyWPbcb6d
tUOivk+25vatv9iV+/erepv48Xotvi3fxPlveZ5b1dwu4tvyzebmNvZJUrZt
NLexT9JklwS2zaG5rd+20dxGc5tPc5uibZfXJdFr22a7JPRsu6wuiX7b3kLa
trk2t+nbdlnNbeyTpGrbJrskFG2b7z7JfYxsG83tsvdJJtm237jL2Sc5Inaf
pMq4Te2TjLftfPsk44y72X2S4TfxedL2SYo+iepNnM0ON7f7vb3a7WjH9UyE
Y6v2SYo+iepNPM+22vP1rz2v7G2LNslbf/ploGdio23z3SfJqbmt17ZNNrcp
2nYVmts0bdvcPkmuzW2Ktm1yn2RZzW36ts2nuU3fttHcRnPbLtvmuk9yJCvb
5tPcpm/baG6juU3dtrFPMurbsG0Oze2sti2nVNtW+Hazxt1sl8Rv280adxHf
Dtt1mnH7bVuOyqtFB/vs1+cl7pOMO5d9zdurA759zuvzlf1t8TnOrd0Wt0/y
3NdvcXdbiuHe3LZtnySa24b2SRrskpC37QN6bZtrc1u/baO5zWKfJNvmtgbb
fo22bWOfZAm2XYkuSfPNbYq2jeY2v32SozjZ9lvN2zaa27DtsprbFG279V0S
NLcpNbdts+1431bb9vK2KbtLosu4/bY9/qOHnf/vv/6v91jxsbhOZdubf/dq
4L7Ch4vskyxs3Iqz21mMW2XbYkSvJPwmPLpxdjt+j6Tokqh8XJzZ9hu3OPcd
fhOPC/p20X2SaG7buE+Sa3Obom1Xobltg23z3Se5lLRtt75LguY2peY2SdtG
c9t628Y+STS30dzmYttobmOfpMkuCWybQ3Nbv22juW2iua2y7SzGbdq2ixi3
6tz2gl88Hnm8uE51dlvsqgy/Fdknmdu4U2w7ybjjfDuuwy2uS/Nt2dx++d8+
iTxenLv2G/dn/+ffIvcRfRLYtr3Nbdtsu6zmNn3bRnMb+yRh27psm2tzm6Jt
V6FLose20dzGPkmTXRLYtpnmNnXb5tTc1mvbaG7za27TtG00tznYtsl9kmV1
Sejbtv4uSdi344y7eJckn21Lt85i3ElNkjjjVnVJXvrjxwl+nX2fZGbjzmjb
RY1b9esQfe4025az+NMnIo8XZ7T9xq16q5/h1mfbaG7zsO0qNLcp2nZ5XRK9
to3mNhfbXkLatnV3SUbeuM65+bzHlDNlwBZn6KIHsE8S+yTJ2LbJfZImuyQU
bbsKzW2ato3mtu37JNHcNmPbJrskttk2mttobmOfZBldEtq2rTJuk81tlW1n
Ne603nY2466f1W7GuP12nWrcOW27qHGr3kSDJItvJxn2Yb79keG3P/z182Tf
1m7bE/nYNqPmNn3bZtrcJmnbPPdJmuySaLdto81t2vskA75NYJ+kcOw445Yz
vc825/LvriK9T9Jkl8S2fZJobmOfJHXbLq9LQt220dy2cZ8k1+Y2RduuQnPb
Ntuew8q295K27dK6JNptG81tHbYdNu5W2HaScSe9iftnN+5ga7uocYfPZyfe
p6Bvq8w6zrjlLknVW1bbTjJu2dlWnfP+7f/5t5xnt2nvkzyalW3zaW7Tt200
t9HcRnObwz7JLhltO2zc4r2/S9Jr213O+DEbPecWH9u9T5JTl4S4bTNtbmOf
JJrb2CeJ5rZ9zW3q+yR387FtNLexT9I22za4T5Jrc5uSbS9/74fulNXcTtof
mde4xZt/n2S8cY+OzH6Txt2Ebcedy1YZ9zdyGHeSbTdr3GhuF+mSVN+20dyG
bZfV3KZv22hut6K5HTXuYI9E3j6726PYJ0netsvpkthm29gnieY29knCtjnZ
tsnmNkXbLq9Lote20dzmYtsvkrZtrs1t22y7Vfskk2xbzIqMxm3Ktps17q/k
MG7p18nGnX2fZJxxF7XtLMb9jcDUDVv1ltW2sxn3k5HbhHHb1Ny2bZ9kWV0S
PbaN5jb2SZrsksC2qTa3k/ZJBo072ty+/saHvbPcaG6juc29uU3Rtsvrkui1
bbNdEnq2XVaXRL9tbyFt21yb2/Rtm2dzm6Zto7nNwbb57pPcx8i20dzmtk8y
ybZXZDRupW9rsu2ixi3c9ysZjTt8Rltt3Pn3Saru06xvxxm3yraTjDurbYsR
uyNVb7JDEmvcFtg2332SnJrbem3bZHObom1XoblN07bN7ZPk2tymaNsq304y
bunXyca93Ln2njXOxOs2O7O77fTuN6PPdvdxPZ5eFXHtfuvude8zdcBW17av
WXefM6n2ePnYWd13OKNmPqL0bWnWQ5Y/UHtMoyM++6Kd7uWB996P5nZlbBvN
bTS37bJtrvskR7KybT7Nbfq2jeY2mtvUbRv7JKO+Ddvm0Nwuy7bTjFt3cztu
vhxj3Krdkl+JmTjjDvt2knHn2ifZhHEn7Y9MNm71Dsk//+f/jjxm8affSbXt
rL3t/m/fFbldvGGfJO19kmhuG9onabBLQt62D+i1ba7Nbf22jea2LtuWXZKw
cYcdW94u9k6Gz237e92qEfYsTNt/bnvAvWs9475u8UOxj50wdqPy7PaEsZsa
lt53u/s8wsXldeI5i3dJNNj2a7RtG/skS7DtSnRJmm9uU7RtNLf57ZMcxcm2
32rettHchm2X1dymaNut75KguU2puW2bbZtsbsf5tsq4y7TtL2c07jjblh0S
lXHfmsO4i+yTzGvcabYdb9z/FuvbYj79j3+JPObp37+datty3vrTLyOPF9f5
90n+5b/+M3Kfbf/0OprbFu+T5NrcpmjbVWhu22DbfPdJLiVt2812Sfy2He5t
i/d+2776oXvd89nSjsV5bX9ze8TN67zbxkza4PTedrfbJRFnt4ctftD1benQ
/i6JNG7/7eI6cV6759OrXdv2e7X/XPbIeQ97jw2f2Za3iblq271WNLdJ2jaa
29bbNvZJormN5jYX20ZzG/skTXZJYNscmtv6bRvNbYrN7aQpq7mtsm1p2EnG
nWTbScZ9z6+/p9e4Q/sksxp3VtsuYtyiRyI8O/wmznaf8/r8VN/u//ZqpV9P
/nhjYJ/kh//+WeQ+f/jr57BtEl0S2Dal5jZ920ZzG/skq2vbYeOOG3FGetCd
90ea27JNMmHMRmVze8C9a7znGLb4Ia+5LY1bjGiUCNcON0mEe0v/9ju2dPGw
fcsuiTjTLW4fN2ljpW27Cl0SPbaN5jb2SZrsksC2zTS3qds2p+a2XttGc5tf
c5umbaO5zcG2Te6TLKtLQt+26XVJ4oy7VbadZNxpZ7f9c6vCuD/4/Dch3x7j
9D240vn9X/8c9esC+ySzGHce25a97fCbyrj9+ySveXt15DHi7cPPP4u17cPb
OtzCqZV2HdonuUTR5HY/x79/lujb5/9ggXsmXJg7mts0bLsKzW2Ktl1el0Sv
baO5zcW2l5C27dZ0SaK2fWGoRRI34jx3eJ/kgHsafu2e347ZJykbIvXuSNS4
G74dbJL4z2RLwxbntsPXhZvbo2c+4nVQsE+Spm2b3CdpsktC0bar0Nymadto
btu+TxLNbTO2bbJLYptto7mN5jb2SZbRJam2bcspt0sSbWxnN+6obcudkn0P
rlAa7FP/749d2z7rtbm1jw8qzyyLtyKt7aT7FLFt2dwOv4WN+7DA1A1beLbq
7Q9//bOz7Z9ecz3bf3b76d+/E/u1EJ6t2iUpGt3qz/G52y259p27Pdue8skm
58C//STwOWy1bZPNbfq2zbS5TdK2ee6TNNkl0W7bRpvbtPdJBnybvG2rfVvV
2/a3SoRrT+9TP0stzmv3q132G7fcQynOVatsW47cJSnMWWXcqn2SYc/uu+0e
97pRbX4tn0810tTDxm3bPkk0t7FPkrptl9cloW7baG7buE+Sa3Obom1Xoblt
m23PYWXbe0nbdmldEu22jea2ieZ2Xtte+d6b7pTV3I7z7XTjjrdt/6h2L2Z9
02Xczdi2nPCbNG6VbcsRXZI4s87zJs5cq3xbnNHu/87dTX2O8rok1PdJ8mlu
07dtNLfN7JNEc5tfc5v2PskuJdl2vHHXmyTdv7sqYMYB4575cON6hW1Lzx7l
O1etNu6ob4eNW3a3/cadNpOu28K8S0Lctpk2t7FPEs1t7JNEc9u+5jb1fZK7
+dg2mtvYJ2mbbRvcJ8m1uU3RtvP6trTtgHGX2CUJj3BslRdntW05m3/3aiZr
FU4b9vAi+ySbMe44344z7jjb9s+kjzc2ZdBJvi1HnM8u8jk+r329q9Pcrr5t
o7nNw7bL2idpsrlN37bR3Kba3I7z7aBxb400t4ctetBzY/csd5tnS+NunOMO
2rYc9TludXMkzrh7Pn2Xe91on3HbsE/SZJfENtvGPkk0t7FPErbNybZNNrcp
2nZ5XRK9to3mNhfbfpG0bXNtbttm21z3SSbZtmfcLbJt/z7JLMYdZ9v+EQ3u
pDfxea46uDLy+Yrskyxi3Em2nWzc8bbtb26LJklctyTuTXi/uk8S3ScpRjRJ
4rolqjfRMpn6yeaWdkls2ydZVpdEj22juY19kia7JLBtDs1tXbatMu6LQt1t
Mf6mtjTuwcsbBt172z1K377Y1+MWZ7Dlme0sxi3PbAtDl83tocsb3n7F03dr
sW00t/k1tynadnldEr22bbZLQs+2y+qS6LftLaRtm2tzm75t82xu07RtNLc5
2DbffZL7GNk2mtu27ZNM8+0k4y7DtuW89MePAi4q9kLmsW3R3JZzz6+fd37x
H//sPZc4dywub/nd973z2n4LF8Yb3ie5/98+Dvx6Pv2Pf4kY98uK+zRj23I+
C/nxm3/6Zapth0c2t4VFqxou4npxbjuPbYf3SYoz3eI5xHOFz3aL6370p185
Sz/dbUVz2zbbNrlP0mRzm6JtV6G5TdO2ze2T5NrcpmjbRfZJps9y17ZVPRJ3
XlvujJm0wfPmHk+vcq/r8fRqz5vrfh317SHLH/Duc826NV6TxH9Ge8LYTRHf
Fue2pY37myPCteXjhi9ex8K2TXZJ6Ns2mttobttl21z3SY5kZdt8mtv0bRvN
bTS3qds29klGfRu2zaG5zcW244zbVHM7bNsXv7nYOfrliV5ze8LHj9QuT/Js
W1w+pnZZOvYNysuTPdue+PF659jaZenYmS4fmOKZtbh8XIbL0q0nfbzBaXdg
auzlrj9cmMu205rbWWy7Pjco5wj/pDRJkmxbPUz2SZbW3G5+nySa24b2SRrs
kpC37QN6bZtrc1u/baO5XeY+ySTbljM1zrjbzmz33taw5WGLH/K6JGPb7Fs6
d59t97i23fPp1c6IeQ+7Ji6d+uKYDomYGX23e81tsV9S3N/f4vY79rhJGz1v
F+e6w7597bq1zg1jN7nvdXRJKNo29kmWYNuMuiTabdvn2xRtG81tfvskR3Gy
7beat200t2HbZTW3Kdp267skaG5Tam7bZtuUm9tZjLss25Yzfvsk5we/e8d1
7YWf7nLe27DCu7zId/kY5eXv1C6vrF1+13VrefmNLJcPTKldfsJ5b2P9snDr
xTkuC8fOcnn9/geZ2Lbat/PYdnn7JM11SWzbJ8m1uU3RtqvQ3LbBtvnuk1xK
2rZb3SXx27a07IhxvxYdeR9xvlqe0xaWLXw6afejuF32tFXGLc5xxz1WeHb4
rLY4yy1/LfLXIy6LkaYuZtC9D7BobpO0bTS3Wdg29kmiuY3mNu/mth7bRnMb
+yRNdklg2xya2/ptG83tKja34+bb779VepdEntu++KF+zgfdTnV+8YdfOj++
fZrz7OXfdD7Mffm07Je7n+R8eJG4/Kva5enOnrbLn2a4fLDA5eUTztdq2/G+
Ddu2sbltm22X1dymb9tobmOfJGw7zrblTGzbCyneq3xbnNke7OuOyPPacq5b
/FDAnaWXi+vT9kmKy6Jp4rdy8Vj/GW3ViFZJ+HOK5xBnuMO+TdG2q9Al0WPb
aG5jn6TJLgls20xzm7ptc2pu67VtNLf5Nbdp2jaa2xxs2+Q+ybK6JPRtm0+X
pIhtyynXtkcF9kj2vqeP899PPcpZP7CD2x/pk3h5TO1y39rlo50NtcuiN9I3
6+VBHdzm9lX3Ni5/LdPlq9zLGwed6fZHki6LM9tX1y7/2rts2rbVvl3UtrP5
djHbRnObX3Mb+yRNdUn02jaa21xsewlp2+bY3FbZdrhJorJtOarednBWehO3
RzLOuJMsm0Nz2zbbNrlP0mSXhKJtt7xLoqG5TdO20dy2fZ8kmttmbNtkl8Q2
20ZzG81t7JMso0tSfdvO69t+285j3Lpt2z/nbBkQ2B8ZvTzQa24Ltz63dlk2
tRMv7xvrzrlbBwV2RZ6X4bJ/X+T5WwcnXu5cu+xvbnfeOqT1XRLtts2oua3Z
tk02tynadiWa2yRtm+c+SZNdEu22bbS5TXufZMC3ydu2nua2Odtekdm2VcZd
rm2v0mrbaG7zsG3sk+S3T3IwK9tGc9vGfZJcm9sUbbsKzW3bbHsOK9veS9q2
S+uSaLdtNLdNNLfLtu0sxt1sczvJtg9NnTEB2841bb79VZ9dZxm/XaeNbfsk
y+uSUN8nyae5Td+20dw2s08SzW1+zW3a+yS7ULftWN8uZtt5fLuIcefxbTpd
EuK2zbS5bds+STS3sU9Su22juW2lbZfV3CZv22huY5+kbbZtcJ8k1+Y2Rdsu
s0uS1bhba9ujSdt2Xt9Gc5tac7v6to3mNg/bLmufpMnmNn3bRnO7qs3trGe3
Tdq2NOusxs3Ttsvpkthm29gnieY29knCtjntkzTZ3KZo2+V1SfTaNprbXGz7
RdK2zbW5bZtt27pPMsuY2CfZrG3n9u3K2jaa2zbuk0Rzm19zG/skTXVJYNsc
mtv6bZteczvOt8X0X7cm0bjR3G59cxv7JE11SfTattkuCT3bLqtLot+2t5C2
ba7Nbfq2zbO5TdO20dzmYNt890nuY2TbfJrb9G3bruZ2mnGb2CdJ2bbL65LA
tjk0t22z7fYGbdtkc5uibVehuU3Tts3tk+Ta3KZo2yb3SVJrbqtsm+M+SZNd
Eoq2jeY2mttldUko2jbXfZIjWdk2n+Y2fdtGcxvNbeq2jX2SUd+uvm1Xoblt
i23L4d7cpmnbPJvb5G27tOZ28/sk0dw2tE/SYJeEvG0f0GvbXJvb+m0bzW0W
+yRb3NzOY9uXarFttW9TtG3skyzBthl1SbTbts+3Kdo2mtv89kmO4mTbaG7D
tjXbtsnmNkXbbn2XBM1tSs1t22yba3O7qG2LWfX+j9jadnldEuq2zam5Td22
0dw23dymaNtVaG7bYNt890kuJW3bre+SVNW2eTa3Sdo2mtssbBv7JNHcRnOb
d3Nbj22juY19kia7JLBtDs1t/baN5jaa29lsWw6a261ubttg22hu227bZTW3
6ds2mtvYJwnb1rVPsszmdtVtuwpdEjS3qdk29klGfRu2baa5Td22OTW39do2
mtv8mts0bRvNbQ62bXKfJJrbZmzbZJekFbadZtxobmOfJJrbfJvb2Cdpqkui
17bR3OZi20tI2zbX5rZtto19kmU0t/XatskuCUXbbnmXRENzm6Zt82xu07dt
Pvsk0dw2Y9smuyS22Taa22hu27xPsrwuCfZJmrTtOOOGbRPokmi3bUbNbc22
bbK5TdG2K9HcJmnbPPdJmuySULRtrvskA75N3rYNNret2ye5Sqtto7nNw7ax
T5LfPsnBrGwbzW0b90lybW5TtO0qNLdts+05rGx7L2nbLq1Lot220dw20dym
aNtpvu03btua2yRt2+A+STS3sU9Sv22juW1mnySa2/ya27T3SXahbttsm9t6
90ma7ZIQt22mzW3b9kmiuY19ktptG81tK227rOY2edtGcxv7JG2zbYP7JLk2
tynaNqcuiWr02/Zo0raN5jb35jb2SdrZ3KZn22XtkzTZ3KZv22hu297cpmnb
aG7bbtvYJ4nmNvZJwrY57ZM02dymaNvldUn02jaa21xs+0XSts21uW2bbWOf
pH7bjjdu7JNEc5uibaO5jeY2ddvGPsmob8O2OTS39ds2mttoblO0beyTjPq2
Xts22yWhZ9tldUn02zan5rZe2zbZ3KZv2zyb2zRtG81tDrbNd5/kPka2zae5
Td+20dxu1rZXtw2a20m+Ddvm0Ny2zbbbG7RtHc3tPb8/s9D0/dG4wra95teX
Os/9/qzAXPWj8YV9e+2vL6s9R8fIfK/gXPOjGwrb9gO/vtz3XJ3c6f/jSYVt
+8Ffd3eerz1Hlnkhwwz48eTCze2H/rGH88Ifzg7MoINTCze31/1jT+fFP5yj
bYYcnF7Yth/+xyucvbXnaMy5zrCDNxa27fX/eKWzr/Ycumb42zML75Pc8I+9
nJf+cF5gRrw9q3Bze+Nvetee4/xCs18xo96ZU9i2N/2mj/c8L7fNmNrzFbXt
zb/pW3uOzvX51+Zn7LvzCtv21s+ucg786wWBGf/u/MK2ve2zfs4r/9pF29zw
7oLCvr39s2ucV2vP4Z9J795a+Oz2Dvf5ugbm+03M1HcXF7btnb+91vn+Hy8M
zLT3lhS27cdqz/da7Tle+2O3xHk948x477bCtv34bwdGnm/m+7cX9u1dtef7
wR8v0jY3vb+ssG1/57eDnTf+eHFg5nxwZ+EuyRO/G+z8sPYc9bmk6bn5g5Ul
dUmo75Pk09ymb9tobpuxbTS3sU/SZJek+rZdhea2bbad17dXB+bHLW9u07Rt
ns1t8raN5rYV+yQd55BCM/r9oYXPbb/35xMizzf2/esKn91+X/F8zcz494eH
fDv7ue33/3xi5PkmfDCycHP7A8XzNTMTP7g+V5fEf1b7wz+3jzzfpA9HFz67
rXq+Zmbqh2MKn9v+6M/fjDzftA/HFT63/dHn0edrZmZ8OL5wc/vjz0+KPN+N
H95QuLmter5mZtZHEwuf2/7k829Fnm/2R5MLd0lUz9fMzP14SuFz2z/5/OTI
89388dTCXZKfKp6vmZn/yfTCZ7d/+vkpkedb8MmMwl2Snymer5lZ+MnMwue2
f/bvp0aeb9Enswp3SX6ueL5mZuknszP7dtiuf/Hvp0Wf7ydzCp/dVj1fM3PH
T24ufG77038/PfJ8y346r3BzW/V8zczyn97Cdp/kKE62jea2NbZd1j5Jk81t
irbd+i4JmtuUmtu22TbX5narbFtOFfdJfp2VbXNqblO3bTS3TTe3s+yTLPrz
1uj3hxVubucx7ixdEu3G/cHwwvsk44y7aJNEt3FP8ow7f5ckq3Fn7ZKYM+78
TZJmjFvVHjFv3Nm7JHHGXXSfpEnjztvczmPcWZrb5Rl3epNEZdzzPp5WuEli
yriLdEnUxn1j4S5Jmcad1iFRG/dNhZvbpRp3Spck3riLdUlMGnfe5na8cRfr
krTCuNHc5tXc1mPbaG5jn6TJLglsm0NzW79to7mN5nY5tq0ybopdEvrNbRts
G81t2207T3O76M9bwriL7pPMYtx5mttmjLtYczu/cSc3t/Ub96jCze00487b
3NZv3GMLN7eLGHdSX9uccedvbqtMeqbKuF/L1tw2ZdxFmttZjDvPPknzxp29
ud2Mcava2rqN+5ZPphdubqcZd97mdlnGnaW1XcS4k/ZJlmLcGZvbauOeW7i5
bcq4i+yTVBv3/MLN7TKNm3tz2zbbNrlPEs1tfs1tmraN5jYH2za5TxLNbTO2
bbJLQtG2s/i2NG6Ktm2yS4J9kmhuU29uc94nWfTnrTE5jDt8NjvNuPPuk9Rv
3CNynd0uZtzZ9kkaN+4c+yTjjLvoPkkTxl10n6TKpJOMO22HpH7jnlB4n2Sq
cb+Wb5+kbuO+6aNJhfdJphl33n2SPzFm3Pn3SRYx7qT9kWaMu9g+ySTjLrJP
0rRx59knqTLpJONO8m3jxp1zn6TKpG/7ydzC+yRNGHfRfZJ5jDvLPskyjLt8
2y6rud38Pkk0t83YtskuiW22jeY2mts275Msr0uCfZKUbVuOTbZdWpdEu20z
am5rtm2TzW2Kts2luR3n23HGvfDnfVLn4jem5rZtOZM/HOws+nnfwFxSe748
Z7fP8M2UD4c4i2vPUZ+rlLNENb/wz9XeXPbDGbltW860j4Y5S2vP4Z/uP7wx
t23Lmf7Rdc5tv+hXm2tyze0xc8UPb8pt23Ju/HiEc8cv+gem15uzc9u2nJkf
j3SW1Z4jONd6c2fqDAhMnzfn5vftNrOe/fEoZ/mnAwLT982bc9u2nNkfj3ZW
fDrQN4NSZ2XC9Hvzlty2LXvbcz8e63z708GB6f/mgty2LWfeJ+OcVb8c7Jsh
hWb1L4e6M+CtRbltW84tn0zwnkfOwLcWp5/dDtm2nAU/meDc/cthirmu0Az5
0dLcti1n0U8mOff+cnhghv3otty2LUc+333++dWIwjPix8ty27bcJ7n0p1Oc
Nb8aGZiRP74zt23Lue2nU521v7o+du7/1ahcM+rgity2Lc36jp9Odx741ejA
jDm4Mrdty1n20xnOg7XnUM8Y5TyUMOMPrspt23KW/+xGZ91/GxuYG96+K7dt
y1nxs1nOw/9tnHIe8WZ85pn09j25bVvOqp/Pdtb/9wmBmfzOfbnObvtn9c/n
OBtqz5E8N3izMWWmvbOWdHPbtn2SXJvbFG27Cs1t22x7Divb3kvatkvrklhn
2zyb2xRtW3eXJDx3JRo37eY2Sds2uE8SzW0m+yT3c7Lt4s1tlW27c0Bt3PVd
ksX2Sab5dtHmtsq2gzNfOR3i5pXknZJ5bbvIPsms0+mVhZknzz7JeN9W75As
0txW2bZ6lnpzfurk2ycZd3a76D7JLNPVm2Wpo94lmW2fZJJtF9knmWTb0Vnp
TXhnZNLkbW6rbLvIPsk031bPXcqJ3yOZv0kSniL7JLNOL//49kWmTZHmtsq2
i+yT9Pt22LbT5uofPKCegvsk03y7aHM7aa5VzsPKSd0lWeDsdtF9kkm2nTRD
ArMxcfI2t9W+nX+fZJJtD880W73JskdSq22juW2lbZfV3CZv22huY5+kbbZt
cJ8k1+Y2RduuQpekiG3flWjcdG0bzW3uzW3sk6xCc1tl23LUxk3PtuN9m7pt
L2Bk2+m+XbRLose2i/t2+bad7tt5bDubbxe17eXEbTvdt+nYdnHfhm3nO7tt
p22rfZuibef17fJtO92389h2Nt8uZtvYJ8mvuY19kqa6JHptG81tLrb9Imnb
5trcts22sU+yjC5JPttWGzf2SXJtbtO3bTS3q9TcVtl2FuOmbdtq3y5q21n2
SRa17by+nce2O8G2jdh2Xt/mbtvZfLuYbRfdJ9nc2e2itq32bSq2nde3W2vb
at+maNtFuyT5fVuvbWfy7QrZdl7fpmPbW0jbtsl9kiab2xRtuwrNbZq2jeY2
B9vmu09yHyPb5tPcpm/baG6X2dxW2XZ9Dla8uV19265Cc9s2225v0LZNNrfT
bDvJuE3Zdku6JIVtW+3bNG07xrc12Ha8bxe17SXW2na8bxe17Qy+rcW2V1hr
2ya7JBRtO69v57Htovskm/JtMrad7tt0bLucLglF2866T5J2l4T6Pkk+zW36
to3mthnbRnMb+yRNdkmqb9vYJ8nPtsvskvhtW06zXRKats2zuU3ettHctn6f
ZJpvN2Pc5G37gF7b5trc1m/baG7rs200t003tynadmldEpttm1GXRLtt+3yb
om2juV1Cc1uzbY/iZNtobltj22XtkzTZ3KZo263vkqC5Tam5TdO2ee6TNNkl
4Wrbcug3t6nbNqfmNnXbRnPbdHPbpG3LHkmPNydGhl6XhHpzm55t890nuZS0
bfPtklC3bZ7NbZK2jeY2C9vGPkk0t9HcRnMbzW3skzTbJYFtc2hu67dtNLfR
3KZo22rfvjuPcVe2uW2DbaO5bbtt625ux/k2/X2SaG5jnyRsm0Nz2zbbrkKX
BM1taraNfZJR34Ztc2hu22bbEwzaNprb/JrbNG2bZ3PbNts2uU8SzW0ztm2y
S0LRtnU2t+N8O5NxE2xu27ZPEs1tfs3tqu6TjLNtk/skTzNo22huc7FtNLdN
NLcp2nYVmtu22XYvg7ZtsktC0bZb3iXR0Nymads8m9v0bbus5nbz+yTR3DZj
2ya7JLbZNprbaG7bvE8SzW1+zW2Ktp1q3ARtu7QuiXbbZtTc1mzbJpvbFG27
Es1tkrbNc5+kyS4JRds2uU+ytOY2eds22Ny2bp/kKq22zbW5jX2SsG3q+yQH
s7JtTs1t6rbNZ58k1+Y2RduuQnPbNtuew8q295K27dK6JNbZNs/mNkXbptLc
Vtl2onGX0CUhadsG90miuc1kn+R+TrbduuY2pS6J/n2SaG7za27T3ifZhbpt
s21u690nabZLQs+2W98lab65bds+STS3sU9S+z5JNLettO2ymtvkbRvNbeyT
tM22De6T5NrcpmjbVeiSmG5uJw2a22hu5zu7jX2Sdja36dk2332SCxjZNprb
tje3ado2mtu22zb2SaK5jX2SsG1OzW3skzTVJdFr22huc7FtNLexT5JPc9s2
215l0Laz+Pbd779dcdvm09ymb9tobqO5Td22sU8y6tuwbQ7NbYq2jeY2mtvY
J1lGlwS2zaG5rd+2W9fcfvyzkc6e/zEwMJPefri0fZImm9sUbbsKzW2ato3m
NgfbNrlPsqzmNn3b5tPcpm/baG5zam6rbFsO7eZ29W27Cs1t22y7vUHbNtnc
pmjbVWhu07Rtns1t22zb5D5JNLfN2LbJLglF20ZzG83tsrokFG3b5D7JVjW3
/+dfj3Qc55DAzH7/HuyTrIRto7ltxrbR3MY+SZNdkurbNvZJ8rNtDs1tlW/f
0zY0bZtnc5u8baO5jX2SBrsk5G37gF7b5trc1m/bjJrb5G0bzW3TzW2Ktl1a
l8Rm22bUJdFu2z7fpmjbaG6X0Nz2nc+OM+7iXRLi+yTR3LbGtvnuk9xD2rZb
3yVBc5tSc5umbfPcJ2myS2Kbbft9O49xF++SULdtTs1t6raN5rbp5jZF20Zz
m4dt890nubR520Zzm6Ft82xuk7RtNLdZ2Db2SaK5XUZzW2XcczzjRnO79baN
5jb2SZrsksC2OTS3Kdo2mttoblPZJ5lk2/d8UB/+zW0bbJvnPkmTXRLbbLus
5jZ920ZzG/skYdscmtu22XYVuiRoblOzbTS3o74N2252n6TauO+FbWvrkui1
bTS3+TW3ado2z+a2bbZtcp8kmttmbNtkl4SibVNqbqtsO4tx07ZtNLfR3KZu
29gnGfVt6raN5rYZ20Zz20Rzm6JtV6G5bZtt9zJo2ya7JBRtu+VdEg3NbZq2
zbO5Tcm25ah2Tk5++xE0t9k0t/XatskuiW22jeY2mts275NEc5tfc7uKtp1k
3Oyb29ptm1FzW7Ntm2xuU7TtSjS3Sdo2z32SJrskFG3b5D5JNLexT1K/ba/S
attcm9vYJwnbpr5PcjAr2+bU3M5u263ZJ1lSc1uDbXNtblO0bTS3+dn2HFa2
vZe0bZfWJbHOtnk2tynadiWa2zG2rTJu9rZtcJ8kmttM9knu52TbaG6b2SeJ
5ja/5rYG2y6tS4J9klT3SZrtktCz7dZ3SZpvbtu2TxLNbeyT1L5PMoNvF98n
yadLYpttl9XcJm/baG5jn6Rtts20ua3dtt+lbdtV6JJQb27Hzb0fvIPmNhnb
5tncpmjbaG7zsG2++yQXMLJtNLdtb27TtG00t223beyTRHMb+yRh25ya29gn
aapLote20dzmYttobptoblO07So0t22z7VUGbdtEl8Rv23Jo2zaf5jZ920Zz
G83tcmz793/5WmRoNbdp75PsBNtm19ymaNtobqO5jX2SZXRJYNscmtv6bZt2
c/t6g7ZtsrlN0bar0NymadtobnOwbZP7JMtqbtO3bT7Nbfq2jea2Tc3tON/O
atzFuyTVt+0qNLdts+32Bm3bZHObom2rzm47ziGRodzcpmnbPJvbttk2mtv8
bNtkl4SibaO5jeZ2WV0SirZtcp8kmtvYJ6nfttHcNmPbaG5jn6TJLkn1bRv7
JPnZNtfmdrO2ncW4bWtuk7dtNLexT9Jgl0TXPkmVcetvbtPeJ2myS6Lfthk1
t8nbNprbppvbFG27tC6JzbbNqEui3bZ9vk3RttHcLqG5rdm2R2mx7ZL2SaK5
bY1t890nuYe0bbe+S4LmNqXmNk3b5rlP0mSXxDbbbqZLkse4+dg2p+Y2ddtG
cxv7JJtvbmczburNbXq2zXef5NLmbRvNbYa2zbO5TdK20dxmYdvYJ4nmNprb
aG6juY19kma7JLBtDs1tiraN5jaa21XZJ5llWt/ctsG2ee6TNNkloWjbfPdJ
ziFh29mNG81t7JOEbVNvbttm21XokqC5Tc220dyO+jZsm0Nz2zbbnmDQttHc
5tfcpmnbPJvbttm2yX2SaG6bsW2TXRKKtl2l5nYW48Y+SWJdEjS3Cdg29klG
fTvetuVc+ebkyJRn22hum7FtNLdNNLcp2nYVmtu22XYvg7ZtsktC0bZb3iXR
0Nymads8m9v0bRvNbX7Nbb22bbJLYptto7mN5rbN+yTR3ObX3IZtxw/J5jZs
m0Vzm6JtV6K5TdK2032b4j5Jk10SirZtcp8kmtvYJ6nftldptW2uzW3sk4Rt
U98nOZiVbXNqblO37ZKa2xpsm2tzm6Jto7nNz7bnsLLtvaRtu7QuiXW2zbO5
TdG2K9HcNmTbYu774F1atm1wnySa20z2Se7nZNv2Nre12zaa28yb2xpsu7Qu
CfZJUt0nabZLQs+2y+qS6LfttXptG81tNLets200t7FPspzmNnnbRnMb+yRt
s22mzW3ttv0ubduuQpek6s3tON+uGzea2zY3tynaNprbPGw73rep2/YCRraN
5rbtzW2ato3mNgfbxj5JNLfL6pJgnyRsm3pzG/skTXVJ9No2mttcbBvNbRPN
bYq2XYXmtm22vcqgbZvskuiw7TTjtq25Td+20dxGc5u6bWOfZNS3YdscmtsU
bRvNbTS3sU+yjC4JbJtDc1u/bXNqbuu1bZPNbYq2XYXmNk3bRnObg22b3CdZ
VnObvm3zaW7Tt200t9Hcbs62k4zbJtuuQnPbNttub9C2TTa3Kdp2FZrbNG2b
Z3PbNtvm29y217ZNdkko2nbruyRobtvS3KZo2yb3SaK5jX2S+m0bzW0zto3m
NvZJmuySVN+2sU+Sn21zbW632rZVxs29uU3ettHcxj5Jg10S8rZ9QK9tc21u
67dtRs1t8raN5rbp5jZF2y6tSwLbZtEl0W7bPt+maNtobpfQ3NZs26OasO3v
fDbKee5/DArM1Lc3mLNtNLetsW2++yT3kLbt1ndJ0Nym1Nymads890ma7JLY
ZttldUnSbNtv3K21bU7Nbeq2jeY29kmiuU3Vtvnuk1zavG2juc3Qtnk2t0na
NprbLGwb+yTR3LZhn+T//OuRjuMcEpib31+D5jaa29gnWUqXBLbNoblN0bbR
3EZzG/sks/m2GOyTpNTc1mvbJrskFG2b7z7JOYxsG81t7JOEbXNobttm21Xo
kqC5Tc220dyO+nb1bbsKze2kfZJxxs3ZticYtG00t/k1t2naNs/mtm22bXKf
JJrbZmzbZJeEom2juZ08az54zx00t9Hcptjcxj5JU10S6raN5rYZ20Zz20Rz
m6JtV6G5bZtt9zJo2ya7JBRtu+VdEg3NbZq2zbO5Td+2y29u5zduNLdN2rbJ
Loltto3mNr/mNn3bRnMbzW3YNgfb9vt2mnEX7pLAtlk0tynadiWa2yRtG/sk
Odi2yX2SaG5z2Se5gpFtr9Jq21yb29gnCdumvk9yMCvb5tTcpm7b0Z2S2Y27
XNvm2tymaNtobvOz7TmsbHtv07Zdiea2dbbNs7lN0bYr0dwmattJxk1xnySa
20z2Se7nZNtobpvZJ4nmNr/mtgbbLq1Lgn2SVPdJmu2S0LPtsrok+m17rV7b
RnMbzW3rbLus5rY+25bzp1Tjxj5JSs1t8raN5jb2Sdpm20yb29pt+13atl2F
Lgma2/ltO8640dzm1dymaNtobvOwbb77JBcwsm0+zW36ts2zuU3TttHc5mDb
2CeJ5nZZXRLb9kmW1SUpe59kkm1Lw443btrNbeyTNNUloW7baG6bsW00t000
tynadhWa27bZ9iqDtm2yS0LBtsPGzb25Td+20dxGc5u6bWOfZNS3q2/bVWhu
U7RtNLfR3MY+yTK6JLBtDs1t/bbNqbmt17azNLdVtp1s3GvJ2nYVmts0bRvN
bQ62bXKfJJrb2Cep37bR3EZzu7W2LYe7bVehuW2bbbc3aNsmm9sUbRvNbTS3
sU+SY3PbXts22SWhaNut75KguU2puW2bbZvcJ4nmdj7bTjNu2Daa2+ZsG81t
G/dJltclwT5J7JOkZ9smuyT6bfsgadvO69trlcbduuY2edtGcxv7JA12Scjb
9oFstv37v3wtMlVqbuu3bUbNbfK2jea26eY2RdsurUsC22bRJdFu2z7fpr9P
Es1tI81tzbZtsrkdZ9tJxj0vybgt3idptktCz7b57pPcQ9q2W98lQXObUnOb
pm3z3CdpsktC0bZL2ydpsEti2rbXRowb+yRbb9tobmOfJP/mdvhnJzFVsG2+
+yQ5Nbf12rbZLgl12+bZ3CZp22hus7Bt7JNEc5vXPklzze34eSyfcaO5zba5
jX2SproksG0OzW2Kto3mNprb2CdpxraDvv2+O9gnSXefpMkuCUXb5rtPcg4j
2zbf3E4ybipdEtv2SZbVJbFtn6TJLolttl2FLgma29RsG83tqG9X37ar0Nw2
YdtyMhl3S7skem0bzW1+zW2ats2zuW2bbfNtbttr2ya7JBRtu/Vdkuo0t8Nn
t6Vvq4wbzW00t+nYNvZJRn2brm0nGTcV2y6rua3fttHcNtHcpmjbVWhu22bb
vQzatskuCUXbbnmXBM1tUs1t+rZNs7kd59vj0ozbiua2Xts22SWxzbbR3ObX
3KZv22huo7kN2+Zg2810Sfy2rTJu2LZ+2zbZ3KZo25VobpO0bT77JPMbd3Vs
2+Q+STS3ueyTXMHItldptW2uzW3sk4Rt67Dt8rok1G2bU3Obum0Xa26rbHtc
knF/sJZ0cxv7JNHcpm7bc1jZ9t6mbbsSzW3rbJtnc5uibVeiuV1R2/YbN/fm
NvZJmumS0LdtNLfN7JNMb26rbDu/caO5Tcq2mTa3sU+SS5eEnm2X1SXRb9tr
9do2mttobltn22U1t/Xadt4uiaqxHWfcFG2b7z7J3XxsG81t7JO0zbaZNre1
2/a7tG27Cl0SNLfLt205aG63trlN0bbR3OZh263YJ5lk2/mMm4tt82lu07dt
ns1tmraN5jYH28Y+STS3y+qS2LZPsqwuCbd9kkm2nWTc8z+4n4ltY59k1Lep
2zaa22ZsG81tE81tirZdhea2bba9yqBtm+ySULTtvL59f9tQ6ZLQt200t9Hc
pm7bZTW31bYt/TrZuMvuklTftqvQ3KZo22huo7mNfZJldElg2xya27bZtsl9
kiab20m2rdO4bWtu07RtNLc52LbJfZJobnPZJ/kqI9tGcxvNbd62HW/caG7D
tvP4tl7bNtncpmjbXJvbKttONm40t7FPskrNbXtt22SXhKJtt75LguY2pea2
bbZtcp8kmtv690kmTltvuxnjpm/baG6bsW00t23cJ1lelwT7JLFPkp5tm+yS
6Lftg6Rt23SXJOzbQeNuvrlN3rbR3MY+SYNdEvK2fUCvbat8O8m4qXRJ9Ns2
o+Y2edtGc9vIPsnXaNt2aV0S2DaLLol22/b5Nv19kmhuG2lua7Ztk81tU7Yt
90kWNW40t+nbNt99kntI23bruyTYJ0mpuU3TtnnukzTZJaFo26XtkzTYJaFu
2/X5gPw+yaNZ2Taa29gnaUdzW71DMt64Kdg2332SnJrbem3bbJeEnm1XoblN
0rbR3GZh29gnieY2r32SdJvbcb5dxLjR3G5NlwT7JE11Sapv21VoblO0bTS3
0dzGPskyuiTN2bYcHrbNc5+kyS4JRdvmu09yDiPbptHcNmHc2CfZ+i6Jbfsk
TXZJbLPtKnRJ0NymZttobkd9u/q2jX2SZmxbzpO/He08/8+DAzPjnU0auyR6
bRvNbX7NbZq2zbO5bZtt821u22vbJrskFG279V0SNLeTbPv+D+uD5jaa29gn
WWaXhLptZ2tuq6fe285r3BSb27bZNtfmNkXbrkJz2zbb7mXQtk12SSjadsu7
JGhuk2puU7RtG5rbKtvGPsnyuyS22Taa2/ya2/RtG81tNLdh2xxs22SXJI9t
i3mgzbhh261pblO07Uo0t0nadjX2SSbZtmxuZzVuirZtcp8kmttc9kmuYGTb
q7TaNtfmNvZJwrZ12HZ5XZKgY0+etc2Z3X2nc/N5jzlzLnrMvey37cmztodu
327Ytjk1t6nbdmua22X4NvZJEuuSkG9u07btOaxsm1NzW69tL7Latnk2tyna
diWa2xbYdrxvx9u2HApdEuyTNNMloW/baG6b2Sdpvrmtsu2OOYwbzW0Dts20
uW3bPslLddt2aV0SerZdVpdEv22v1WvbaG43ZdtD92x07VgYcniELU8bt90Z
sXOjkeb21Ck7vM81c+Cjzk19d7rv5bnt+NuxT7KcLole2zbZJaFo23z3Se7m
Y9toblu5T7KsLolt+yRNdkm02/a7tG27Cl0SNLep2bbatx9QDJrb2CdpR3Ob
nm1z3CcZ9m3V+ewk40Zzm/M+SZ7NbZq2jeY2B9vGPkk7mttj1mxW+nZ4xq3c
orVLMnxP4/PesHRbpEkSvR3NbTS3W9clwT5JU10S6raN5rYZ20Zz20Rzm6Jt
V6G5bZttrzJo2ya7JBRtu4wuSTbjrqpto7mN5jZ126a/TzLu7HaacRfvklTf
trFPkt8+STS3+TW3sU/SVJeEr20PUhi3+Nh/m3BtecZbnOnW2dweu2aL93lV
ze1xa7b6bodtF++S6LVtk81tirZdheY2Tdvm2dy2zbZN7pNEc5vLPslXGdk2
mttobttt21Hjtre5bZtttzdo2yab2xRt29bmdtI0Y9zcm9sUbRvNbdh2WV0S
irbd+i4JmtuUmtuqrnaScQuzHr+yYdHCpXXtkxwXMO7oDkm/cVPcJ4nmNvZJ
ornNxbbR3LZxnyTX5jZF28Y+SX62bbJLot+2D5K2barN7fj5MODb5G0bzW3s
kzTYJSFv2wf02nYzzW3dxp2nS6Lfthk1t8nbNprbRvZJvkbbtkvrksC2WXRJ
tNu2huZ20j5JlXGH/VrePnH+tlz7JFUjz2w3Z9yWNbc127bJ5jZF20Zzm4dt
890nuYe0bbe+S1LVfZI8m9s0bZvnPkmTXRKKto19kiU3twvYtpxyuyTUbRvN
beyTRHO7qG0XMW479klyam7rtW2zXRJ6tl2F5jZJ20Zzm4Vtm9wnqatLkmbc
cee05e3jQ01uYd7i+hnDH1V69phHGo4tPha2PantMXHj3zOpmlE7t3iOPeK5
Le79Z/fY6d0u9lJOuWm7M/K5LRHbnnxL/bmnj3u0dvtWZ9qUR73HiY/J2Taa
22huM21uY5+kqS5J9W27Cs1tiraN5jaa29gnWUaXxPw+ySTbllOt5rZe2zbZ
JaFo23z3Sc5hZNvVaG6rRrp137emR8b2fZJobvNrbttm21XokqC5Tc226TS3
mzFuf6tk5M5NgXPbk2fVvXrmQLVx+5vb4ty2OJ89YeVW9/7CouVt4rKciUu3
xdy+0x3h2sK3x67f6rXCxXt5u9+6687dmCk37fBu8z+/mFm1x3JqbsO2TXVJ
9No2mttobtvc3LbNtvk2t+21bZNdEoq23fouCZrb+rokUdsW82AO40Zzm1dz
G/skTXVJqNt2Oc1tlW1Tam7bZttcm9sUbbsKzW3bbLsXbBvN7ZTmdtL4HTps
3MK0Z7VZ8JQp2yPN7TTjHhcw7q2JOyXDPZLxa/2tkmCHRDi3PLtdP5PdOLM9
eucWz6/FbSrjljOjdvv1z211Z9z6bRHfpmjbaG5zb27rtW2TXRLbbBvNbX7N
bfq2jeY29knCtjnYtskuiX7bVvv2g76pum2bbG5TtO1KNLdJ2jb2SXKwbZP7
JNHc5rJPcgUj216l1ba5NrexTxK2rcO28/q2dGy/cQvP9p+p9joe43Yom9tx
xq1qbicZt2qf5Pi122KNe9It2+vnt3vsVPa2/Y8VTRLZ3PYbt/Dt1ndJqNs2
mtvYJ4nmNgfbnsPKtjk1t/Xa9iLLbLsKzW2Kto3mNg/bNrVPMsm204wb+yRb
3yWhb9tobpvZJ0m/ua3VtivR3NZg20yb27btk7xUt22X1iWhZ9tldUn02/Za
vbaN5nZLbFtl3EkjnHv4ns2Jxj00MEHHzm7cdcdOMm7ZJBHd7bh9kvKxE9Y2
zmdL457T4zH37Hb1m9t6bdtkl4SibfPdJ7mbj22juW3lPsmyuiS27ZM02SXR
btvv0rbtKnRJ0NymZtt6m9txvq0ybtua2xRtG81tHrbNd5/kAka2zadLQt+2
eTa3ado2mtscbBv7JNHcTvPtsHH7WyXizPb1Oze5ji271+Hz2n7j9tu2yrH9
xh1tkQR9O864pWXL68U5btnhDk+ScTfa22hut9q2sU+S3z7JaaxsG81tG22b
a3Obom1Xobltm22vMmjbJrskFG279V2SfLYdNm76to3mNprb1G27+vsk8/t2
9W0b+yT57ZNEc5tfcxv7JE11Sey17TjjDje3xdywtOHNYx7ZkmDcmxKNO2tv
O2zc4R5JlnPn3uddH2fcdG37eoO2bbK5TdG2q9DcpmnbPJvbttm2yX2SaG5z
2Sf5KiPbRnMbzW3YdjO2XZ+PKtHcts2227Oy7dmkbRvNbTS3/b5N0bbR3IZt
l9UloWjbre+SoLlNqbmt07aTjTu6P1LeR7i27JIEjXtTonEL09Zt3MKs/X2S
aF87OGHjpm3b2CdpwrZ3/3aM88I/DwnMzHe2oLlN2rbR3LZxnyTX5jZF2y6v
SwLb5tDc1m/bB0nbdlWb2yrbloPmdgu6JDbvkzTYJSFv2wf02jbX5jZF28Y+
STS3je6TfI22bZfWJYFts+iSaLdtAs3tfMYd9e2wcQ/1jLu++3F29505jTu5
t51s3Fucm/rWWyTTpjyaybZll8Rv3KU2tzXbtsnmNkXb1tkl+dNfj3Qc55DA
3PrBgwyb2/Rsm+8+yT2kbZtrl4S+bfNsbtO0bZ77JE12SSjaNvZJltzc1mDb
2Xy7YdsPtU0+36Zu22huY58kmttUbZvvPklOzW29tm22S0LPtqvQ3CZp22hu
s7Btk/sky+qS5LFt2dzOYtz++0xY2ehqi4/l9dfv3BLwbWHZ08ftUBh38k5J
adlR426c1xa2LXdHZrFtOVNzGDf9fZJobhdpkmQzbsq2XU6XBPskTXVJqm/b
2CfJb58kmtv8mtvYJ2mqS0J/n2SSbWcxbu77JE12SSjaNt99knMY2Taa2zbu
k0Rzm19z2zbbrkKXBM1tarZdnea2yraHZDDu4Xs2uy1uuXMyfF5b3C4fK85W
C+eWHRJ51rph3NsSd0qGeyRB494SmNE7t3q/phtH1D7vc1sDri0uT1q6w7Vw
f5Mkq3HDtnnZ9oQMtp3NuNHcbn2XBM1tSs1tiraN5jZsu6wuCUXbbn2XBM1t
Ks1tlW0nGTea263vkmCfpKkuCXXbRnPbRtvm2tymaNtVaG7bZtu9YNtobhtu
bqtsW3VGO2mEb4t9k+EeieyVqGbKTdszGXfYt5OMWzr2pKXbPeeWbi3Gb+th
y04zbjS3W98lMb1PMt64W2PbJrskttk2mtv8mtv0bRvNbeyThG1zsG2TXRL9
tq2nuR3n22HjpmjbJpvbFG27Es1tkraNfZIcbJtrc9s22za7T3IFI9tepdW2
uTa3sU8Stq3Dtsvokqj2SYqz2H4rDo/YJzlp/nb3fqrmtji3PXHptoAtzxjx
qGfa8rnHrt8aMG5x2e2NXBTtbYsZt36b73Z1h2TMzq3OjHGPus0S+bnF/YVh
T7llhzPquW0BwxbXqYy7eJeEum3b2dxW2bac4M7Joe7Memcr9klWvrlN27bn
sLJtTs1tvba9yDLbrkJzm6Jto7nNw7ap7pNMsm2/cWOfpJkuCX3bRnPbzD5J
NLf5Nbc17JNk2ty2bZ/kpbptu7QuCT3bLqtLot+21+q1bTS3mdh21LfDMzQw
Uc9W+XZ0ovsjw6M6tx1ubofPbWdtbmfdJcmjua3Xtk12SSjadti3+eyT3M3H
ttHctnKfJJrb/Jrb2m37Xdq2XYUuCZrb1GybVnM7acpobmOfJJrbFG2b7z7J
BYxsm0+XhL5t82xu07RtNLc52Db2SaK5rbtLYta20307j21n8+1ito3mNr/m
th7bxj7JqG9Tt200t220ba7NbYq2XYXmtm22vQq2jeZ2huZ23Kz78OMS90mi
uY3mNnXbxj7JqG9X37axT5LfPkk0t/k1t7FP0lSXBLbdjG3n9W3YdpEuiV7b
NtncpmjbzXRJip/dxj5Jqs1t22zb5D5JNLe57JN8lZFto7mN5jZsW5dt5/Vt
YdtyKDS3bbPt9qxsezZp20Zzm15z+w9/+XpkympuU7RtNLdh22V1SSjaduu7
JGhuU2pu22bb8b5d1LbL6ZJgn6Stto3mthnbRnPbxn2SXJvbFG27vC4JbJtD
c1u/bR8kbdtobme37TTjRnMb+yTL7pKQt+0Dem2ba3M77dy24xwSGc77JAO+
Td620dw2sk/yNdq2XVqXBLbNokui3bZZNbf12jaa22Zs22Rzm6Jto7nNw7b5
7pPcQ9q2uXZJ6Ns2z+Y2TdvmuU/SZJeEom1jn2TJzW0Ntm2yuR3n2yrjRnO7
9V0S7JNEc5uibWfdJ6ky7tbuk+TU3NZr22a7JPRsuwrNbZK2jeY2C9s2uU+y
rC4J/X2SfLok9PdJormN5jZx28Y+SYVvV9+2sU+S3z5JNLf5NbexT9JUl6T6
+ySTbDts3Hqa23pt22SXhKJt890nOYeRbfNpbtO3bXVzO5txo7mN5jZsu2pd
EjS3qdk2mttR366+bWOfJD/bnmDQttHcRnPb5uY2RdtGcxu2XVaXhKJtt75L
guY2pea2btv2Gzea21RtG/sko75N3bbtaG4n7ZJMNu5q2jbX5jZF265Cc9s2
2+4F20ZzG81tI81tiraN5jb35rZe2zbZJbHNttHc5tfcpm/baG5jnyRsm4Nt
m+yS6LdtGs3tpDFt2yab2xRtuxLNbZK2jX2S1G1bTr8f3RgZ6s1t22zb7D7J
FYxse5VW2+ba3MY+Sdi2Dtvm2tymaNvldUmo2zaa29gnieY2B9uew8q2OTW3
9dr2IstsuwrNbYq2jeY2D9uu6j7JpHm4bbBPMt636ds2mttm9kmiuV3Etlvb
3NawTzLk22c8MME5asAFzhfaHeYccsgh7vztoV90vtblFKf93Guc8/YsINHc
prBPsutzi5xjBnR1v0Z/d+iXEn278655zilzBzjf6HKq93UVjzmy59nO2Q9O
yenbevdJmu2S0LDtzg/d6Bw/4CLnS+2OaHz9v/ol54gupzsd5g11uj+/nIFt
r9Vr2z7f7v7kbU7HecOdI7t28L4+f1/7+hx3xfnORetmx3p2jydrf2ZMGxB4
nBjxuIvXzWHR3KZv2+m+3ePhW5yTB3V3vtLuKN8/vy87x3Q9yzl//mjn2hfX
Wr1PcsjeB51LltW+R+/a0fmH2tdFfo0OP+Mk9/qstj103zr3MfLxHcf2L2Wf
pMkuCUXbbvU+ybEvbXUuXTDZOeHCcwJ/rh3Z4WTnzMG9nWs33Jnq2+RtW3Nz
u8/ym72v0xe++hVn7DPrI7bdZ/m8wNdTNaf1urTULgmlfZIzXn7C6XVr7Wfp
bucHvibHdDjVOXdIP2fEprutbm4PWLko9fVzZu/uiWe3Z+zZ6Zw/tL/zjeOP
8x4jPj6zdw9n0q6NJJvb2m37Xdq2XYUuCZrb1Gy7Gvskk2y7Pp9gnySZLgn1
5jY92+a7T5JTc1uvbZvskuiy7XP33OI6dtr3j8K+z9o8rfLN7bQz2x1Wj3WN
2v+1ifPtc7fMjNw3PGcsHYHmtgHbvvx7dzqHdzk99XUt7Lvb1nlW7pO8dNsC
17OTvj7n3T4+4tuXbbvVddS0x9ne3DZp29e+uMZ17LTXt7DvXttvs7a5fajP
/lVz6qCemc5tnzfjuuDf5VzYCc3tiu2TvGL5bNdo0/6dOm/coBZ3SWjYtphJ
+x+NfM2GbPx25Mz2xTeOTf26dhpyVaWa21nPbfdbsaD2NTw09etz4fjhpG3b
ZJekx8xJqV8f4ddxXZKesxqP/2Lta/2tbhe488W2r/sVsyaTsu0qNLdts+1V
sG00t0tobqtsWw6a2622bTS3bdwnWV6XRO8+SYq2rbNLInz7y6c3zjSIc9xn
bZ7qNUnOfvwm54Qpvdzz3OJ28T7Oubnbdpaz20f07NT4Prnd4anG3enBye79
xDnu87bM8uxauLbfvi/YNR/Nbc2+/dXTT/C+vicMuMjptuVmz60veWKxc+q0
a9zz3OJ28T7s3Dbsk+y2brbz5XZHuOe4hXdLwxY+7TdscWbbb9wXuY870uk0
b4Tr3dKww4/r/cJqhW9X37ZNN7eFbx92xje9r7M4xy0cW57Vvmr3t51O04d4
/yzE+eXeO8LOXW3bll0S8Xs/a2x/p9f6RZ5ji4/9Z7K73zs35NvBBsmAp+5x
n0fMoe2O9oybQnObom1zbG4L35avh68df4x7edxLWz3Hvuq+hYGz3eJMN5rb
zzoXjB/qfj2O7tA4JzFk46pIk0Qat3iPfZJB326cKT7WuaZ2+caXn/DObA9e
uyxwtluc6baxud2zzbjF+7z7JK9e1Ph3W3wc7pJM3rXRuXHPTmNdEvq2jeY2
mtuwbV22XVaXxG/bacYN287q29RtezZp20Zzm2dzW69tL2m5bcs5dtSl3vd+
31o6JLa5LVxbOrc4821fc3ul880pfes/h3Q51T2fLS8nGXdSc1s4t3z8KXMH
krVtk10SU/skTxp9ZeNs2G2jY89oC9eWzn1E19OJdEloNLeFV3tfw3nDMze3
/Y/revc09s1tSrYte9tnjLm6cbbvjsmxzW3h2rLPIc58V7m5nXef5LVP3e19
DevdkfjmdvsrL6yf351xnWvbDePGPsnW23bzze0RTz/knUUWTRK/bYdH2LZ8
3Vy7YTmZLol+205vbo94bI37dRBfu/5rliqNe1aqcdNubpvcJznp2S3eOWLR
JPHbdrhLImxbfn1HbrrHmG1TbW4HjTv7PknRJ5Ff40Erl1S0uQ3b5tDc1m/b
B0nbNprbpmxb7dsq47aiuY19knba9gG9ts21uU3Rtktrbifsjuz0+Czve+bj
p/RK3Sd58tKh3v07PHCDJtum29wO75M8belw58zVYz27TjPutMZ2t+eWeI8/
qfZcpprbFG3b5D7Ji7/T6DaKs9ppne1Ot4/27t9l3UzrbVtO7xdWeV8X0d3O
ulNSnN32/pyoPa4lts2quZ1vn6Q4o+393cP0Iak7JS9cNrlxHv+RBZVsbit9
O8M+SXmW+7gLO8bukey9frF7H3F+e9i+dZmNG/sk6Ta3w3skpVsLq03ybXlm
W5zzdv/7oAvPabltt3KfZPtu59X/XLl1uuvafuMOn9NWGzdd2zbVJfHvlJRu
LQw26tvR5rY45+1+v9itM+N9kum+rdolmWTccb7tb5Qce+bpBWz7FeK2zXOf
pMkuCUXbxj5JNLdNdEmSjBvNbWq2jX2SvJvb9Gyb7z5J/c1t1Yg9kvJnEtEk
Setsi52T8v7HjbosYNsnze3vXn94j45K2+60eXrDZWofq2z7pLnXOl85vZ2v
BXKYc8yALs55j8+J2PbZm2fUGxOHfinWtmUL5Fu151XZtuhq+9sj4v7isuiL
+G07bp9knHFn2SEZb9z8mttUbFtMr9p0uLnxdzGiSZJm3GLnpPffMoy+MuDY
x/Q8t/7fpc8bpvRtcb24XTStVa7d8/mVtefs5fZAvP8O/owTndOn9XeuqN0W
9u2z5tWbv8f2PE9p2ZdsvaXxe6t9rLJt0R35eu1zyPuJz91+4CXubskstq0y
bmHVWXxbzOXbbvWd457esn2SVWhuDw1M3a/FHkn59RXenbZPcsDe+xv/HMf2
C5j2CVd2ca/vPH+M0rbF9bJ1EufbF9Tu4++miP71KYN6ONfsXh2x7b47lnnP
F2fb8tx5l/ljlZ7d/Z45Tvsru3qfT9xfXO71yKLMvi3PbMvPFd4f6R/p4D3v
net2SdKMG81tes3t7/52nPPiPw+tzTBvZr+73TNueYa73h9J9m0x540b7L3+
xr20zXPsoTvv8aw8zrbl57p8wRSlbfe7b5FzSq+LvecX9z+l1yXOoA0rlLYt
n2/4zvuUvi0e6/59b+29yrPFWeyOQ/oGmtondjvP3SOZ5Nvy3LZolIjz2n7j
Hppq3GV3SWjZthx5vlhYd5Z9kt3GD/e+xjNfftKz7XGPP+xZeZxly8/VZ+Es
pW0PvX+506H35Y3vv2v3F5dHbbpPadvy+SbsWq807Q69u9f/P6f2XmXbN9Qe
J/rZ8nnc77+6XeAMXLlIYdwHlMadZNv1ecW1bfG4qxfNIbdPEs1tfs1t7JM0
1SXRYNsf2GvbYh756JOQb+u1bZNdEoq2zXef5BxGts2nuU3ftu1sbsfNYT3q
+8q+cvpxqb4t5+ttuynFe79jnzCld+R6/1ntMx+4wfs+9swHJgZsu/OehQHb
Fs8h5u/a2ijivTBt/7ntjg809sfEnduWt7ef0ifi28cMaBjJobXPLfoj/r62
OLMdZ9txxp3VtuWc8+CUxjnZpSPY2TaVLom0bTnSpb92xgmpvi3PbItOiXjM
EV3PCFi2uOy+Hqb1V57dFtfLf4Zh375463xvn6N4L55LPp+07rpzN85unz7t
Wve2I2v3Uxn3hetu8h4vWtp+2+71/LcDtn1k1w7u+H8N/uZ22ojmtnwu1f7I
uH2SwsO9r8kLd6G53WSXJHxG+4Qr6i4tXDnJtv1dErmbst4r2Ry5/uzpQ5Xn
tsX18p9l2LYH7X0gYNvHdu3ojnRj8V6Ytt+wr3xkoXf/uLPb8vZzpw+L+LbY
DylvF/Z8XO3z+XdKXrJsWibbFiPPZ4vpce9cpW9fumx6xLPjjNs2257AwLbl
/OmvRzmOc0hgFn24zrXroTsbzRrR3E6ybenWAzY0vr8Y4OuV+K+PO6Pt/fl9
4+iIb581uI93+1EdTnZOvPBc78y4mF7L50bObcvbBm9YoTy3fWK3c9vc+tyI
b/epPZ/3/0e1zyNs+yhfV7vTkL5K3xam/fW2M8WySzI0s3GPs665HbZtMWMf
f6jxz27tsoBvx3W2RaNEPmbkpnu9s9vX1z6W18cZt7y9+8yJkXPb5w1tnHc5
tsNp7jnxbxzf2NNz7cqFkbPb8jZh4Crj/lbtOepu3TlyTnvAysZ/ayc+j7Bt
8XnldfXdkcHmtt+40237gNck8f4uavP9sG0mXRKKtt36Lgma25Sa29RsWw6a
29gnWW6XhLpto7ltm23L+VqbV4f72kn7JI8ecEH9bFG7wxKNO9wjSTLuI3p0
bLP2doEz2xfsWeie43bPlLQ7PNAkiRi3okkSNm7ZHjl57oA2O/+S78x2/dy2
vE1M513zMht3HtuWTZLjBlzY+D08txT7JJu0benWDa8+PZNvC7s+YWD93NyX
2h0Ra9yqLonKuMW5bGHX8uz2iQMvCZzZvvyJJa5vy9v8hp1m3N187hww7jce
cI67ov7fjQvn9p/Z7vXCt91z3OI2sScyi28Ls24/sNHq9++OTPLts+c1GvPi
YzS3m7HtqG+LCXp1sm3LOXlQj/qfse2OCnRJosYd7JH4jTvcITnxyoa1yzPb
YgbvfdA9xy1uE/6cZtxhx44zbnGuW9p54Mx2bbrcMq7hMU/dncm3pcWL1nbY
tsV5bdElkffpt2NFonGjuU17n2SScV+74c7Ga6f2cZJty7n+6XXeY65cPrsp
45ZNEnGu2/3e6qtfiZzZvnzBVO9xo59+WG3cG1cquyRxxi1b2u7f8dw6LdAl
GbLx2965bnGe22/bM31efWqvS73mdrJxP+fatvv/T8cf6zZO5HQacpVz1fJ5
FWhuZ7NtOSM2Nf5uZcSme1J9W8zkZ7d6j+m/4lbPr/Mat/9ctjjX7X6P/dVD
I2e25W1ipu7Zkcm45ZnthnFfEDm/LR/bd+FNgfPaYzat8c51D1y5WGnc0sTl
CA8fVLtv2LbFCNeWn0vslbxkwvXOcW3nuuXvufPQa93bKDa3sU8Stk3dtk12
SfTbNqfmdj7bfuSjn7jTyuY2RdtGc5t5cxu2bWVzuxnblm4td0ieMKVXqm3L
Lom0bDFxxq3qbQvXDhu3cGzZHBETbZLUnVs2RzqsGqM27pjmtrz9m1P6BPra
8vlOW3pdpLkt7Fqc6Xa/LqO6azVu/z7J87c0zuOeOKpHsbPbxPdJmuySqGxb
jtwhGdfiVu2T9Ft1NuOue3bYuKVjn9XWMBHOrWpu+89jX/n8ykzGLSw7Ytxt
ji3OZ3s/w/p8W3ZJRHfk72UD4u5pibYt5jJfb+SUMX1ibbvdFec7R3Xt4I58
/q+f0V7ZKKFo21Sb2yrbliO/zmdPH5Jq23KC57Eb57WDxh1tbp8TY9x9dtzh
Xe/3benWwrmlD19+z2ylcce1teOMWz6fe1Zb0SQRTW1x+1lj+0dsu74rsqPr
0qKrXff3o93rw7Ytp+PY+r+L4r3/vLbfuNHcpr9PMs24L1vQ6NWn2bZ/5GMu
vHG0d93AnMbtb25LU5ZntcMjznSL2zuPGxJokqiM22/ZccZ9alvDRHRKVE0S
6diyRSJn7DMb3F+r2y6vfTwr0bgbTZKetzZ6daoR9n39Y/e3sLmtd59knG3L
6XXrTO/3nmbb/uZ2w6pvyGHcL8UatzRleVY73CWRVn3RhJGpxu1vkgh/Vhm3
bJg0zmqru9viXLffuK9eODvx9SPse9KujYHmtt+45RxWu9/JtV/TyW2/Pmnd
4r5UbLus5rZ+236DtG2juc3DtrFPMr9tZzFulvsk93OybTS3zeyTRHObX3Nb
wz7JnL4d9us041btk4wz7hNjjfvOiHGfVftYGnZ73+Pi9klKc3bPY6cad6NJ
ojJucW5bXh/X3JZ2LT5vnG8Lsz4ph3H790mKM9uHnn58/XvrdodHznDT6ZLQ
s+00304ybpVtxxm3tOyocQd7JP7H+S1bPk50t8O+Lc3aM5J1NyUat79HEmfc
Z3iP6xDb3Ba3ifvI/ZFxvi3ObMvmiTj3rTrDLc9tS28NjzDvi9fNNd7cpm/b
xZrbSfMPSuOO3yNZxLilZccZt7xetEni9kmK28R9zpk+rCnjFnskxblteX1c
c/vcGde12XPHyLltcVZb9ToVzn3Jsukh337UGfhU3Yz+4atfcYbteziHcZfb
JaFo29T2SeYz7nTbVhm39Ov8xl33a3FuW14ft0/yohvrbXxh3f7mtt+4Vb3t
qHHXPbvxuG8rm9viLLe8j9+4xblr9/unwO5IlXFHm9vDatf7z2iPf2aje4b7
C23OKt6Pf2ZTZt+mvE8yefYGjDuLbcvJZ9yN5rbKuIVPy+vj9kn2mDmxzao7
xxq3ap9knHHLx4kz2+Hmtpgxm9Z69wk3t8duXhvokczYs9MZtHKJ5/Tu7s7a
dSrjbpzXbhj4jXse8851C/tmYdvvNm/bXPdJornNr7mNfZKmuiQ/UQ72SdrS
3KZn23z3SXJqbuu1bZNdklbZtpy4Vkn47LZ/jm5rh4SbJFHjDu6TjDNu2fcW
ze16h/tUb77RNvLctWfcry13Oj6oMu4VgSaJyrjFx965D9/n8I/scquM2+/W
WYz7spBvi5GNEvH7Eue56dl2OV0S3bYd1ypJsm05slUibLpPrHFHd0qeHmPc
8jpxjlt2uMUc6Zs041btk4wzbunXorktO9zhkR4dNu6wX8tGibi/OM+tsu36
BM9pi/b2+bdPcF3c+73dPZ11c5uSbUvPjrZKkn1bWLZsh4jH+Jvbx7Q5tN+4
VZYdNO6GXwtvlx3u8EiL9xu336qzGPf1bcZ97vTrvOvr57GjI7vc4uOGb6v3
SIr+trRqMWLnpPRtv2NfeMv4SHNbbdzVbG5z2CeZZNuT27oj/ytzq2R5Jt/2
t0qEa2c17ukB4x7jOXa3Nr+Whq0a2eUWVu3vkWQ37vM83x7s82txTtvfDpFz
tK/LLX1bOrY4cz15/85U487a2xbnt+Vju4wfRqZLYsK25QTb2vek2rYw6yl7
Gn8+CteON+6XIs1tlXF3n9n4vlw0uMV8KzSyyx1n3KM94w42t1XGLVxbPk6c
0/Y3R+T4u9xZm9vCruVjRI9EZdxxze2R9zf+XZiyaxOa2xbb9irYNprbDJrb
cb4dNm40t9Hcxj5Jal0S7JM0bdtxxp1k23KkSR/eo2PgvHbQuO+MzFkpxp1l
vjX3Ws+zg8a9IuLb8cbdN/PnO7Jnp1jfTjNulW37fdu1xrY9k/ptu/rN7azG
nWbb4SbJsT3PzWTc0rLTjDvLXLL1FoVxd4ga9xvpxp1lOs0brrTtcIM7vGcy
zrZV1i2dWzg5R9tudXNbZdtq40627fB5bdHQ9p/X9ht3uLcdNe6t3kjjzjIX
zB/r+XV+466f2fYbd9q0v7JrrG2HuyTf9J3vls3tPuuX1P8/7oyTlDslg8bd
fHObom1zbG6rbHtKqnE/5bq2fA0MyGjcfssetvPeVOOe7hvvz+8Y406bU3pd
ktO463sa4ow7bUSTRDp2+7bnunbN0shOSb9xh89rZ9knKZ9bvG+1betqbsf5
dnR/ZNi4g7atsuzxux6OMe6gbWc17rQRjRF/k0ReP3rTmohvh43b39vO+vnE
mew02/Z3SWR7RLxXGXd952S0uT3vlWcD91H5Nn3bRnMbzW3Yti7bpt7cTjNu
22y7PSvbnk3attHcRnPb79sUbTuLb4sRjRL5vd35exYk2raY8/c0Gr0nze2f
ybilZacZtzi37d8pGRhFbzts3BcrRt5eN+56j8Rv3Emt7STbTjLuONsWc+rc
Qd79k31br22b7JJQsm05olEiv849nl+e6ts9n2+8Vs6cNyzQ3FYZd99U4278
XCXMWrU7Mm7OUBm3r62dZtzifZZ9kqrp5NsX6fftpLPbcc3tM6cNbPx7tm4u
9klqsG05/u7IgL33p/r2wL2+/157/hilcZ+Tw7j9HRLxXtUpidsnmWTc8sy2
vF24tmySyA6JmLR9kllsW470bPc1P2O4a9nifVaHkXPdvkfINrfp27ae5nac
b8cb98Nel8R7DYwbnOrbwqzPr91P+q/fssPGPT0wdc/2/vyOMW7/Pkl/k0S1
T/LGVON+NmLc4Q6J+Ni/TzI8fsfO+++FOJOdxbdjjZuMbRdrbqts2z/ea2H8
8ETbltNtwgjPf+PsW+XbWYzbf0Y7aRZqMm7RJPH3tv1Nkjy2nWTcolsSNm5V
hyRq3GV3SWDbHJrb+m37IGnbRnObZnM7aVg2t7FP0k7bPqDXtrk2tynadmnN
bQO2Lafj5mkBs07ybX9z2/WHx2cHmtvyti+0Oyxg28nGvdxpN+py97qvnN4u
s28L0+7o62qfv+vmFOPu6xn3mavHetdf+NziQratMu4k2xYjTNvv23nOblO0
7dK6JDlsW3ZJum2dFzDrONuWlu1val/2xOLAeW1p3CcMvCS0O1Jl3Pd787W2
nvXJo3tlsm3p2dK4RePEb9txxi3d+pQxbX/HVPu8RXxbmHbYt4vYttq4b654
c1uvbcf7dt2ve++4vfFn3/wxsbYtx2/i/XavDjRJpFWLlonauId5j/Xb9Zlj
63+PdPgZ38xk2yrj7r/7rohvB4x7xnWeYXe/d27D5PY91LRty7PZKuMWfZK8
ljd83yPkbNu25rbKtpOMe/GHD3tufXKveqtK9EDGvbQt1rbFjK/dLvdDnjW4
T6xxj3r64YBtJxn3Nfct9q6/4aXtmWw7bNx9ls8N2LacE312LFvbk/Y/2vj3
cM3SVNuWI3/fzRq3qkMi2yin9brUwD7J1nZJ4jrbZ/Sqf//7jeOPdWa+vDvW
tsXMPLDb606fO/SaQHP7el9Xe+qe7ZmMW3j1sPsbr9ebDnw3k23LLol83ICV
iyK+vSjGuOccaLz+r7t/ZQ7fjrdtObKrfWbvHoHr5dfsylmTlb7tP+s9Zddm
Gs1tDbbNtblN0baxTxLNbeq2LWa90rgJ23ZJXRLsk0Rzm6Jtc9kn+Ye/fD0y
VJrbcSObJMKWxfd2oofdcfN0pW0Lx+5Uu01+Hyia3OHm9umrRjes4PE5EeM+
pq3jXTfuSd4+yQ6rGueXzn98bqpty+n6XMNKTlt6XcS3xXV+45ZuLVxbXn/6
0uGFbDvZuKO+3XF1w0xOHNWDXHObpG3n9O1wc/trZ5zgfr1Fn1qYd5xvX+Tz
cOHY4d72t0b38sw57NtXPL/Ss2y/cQuzPtn3uCy2LeeCu6Y2fhZ98raIcbev
/Rrl7Rf5jLvL3Y2/r+rx5O2ZbVtMV99jTxnTJ5dtx+2TPKrrmY2vywt3k+6S
UGxuq2zbP4ed8U33ayua18K8VbYtps+OOxr/bAf1iDS3zxzbz71NtKyDvr3V
GbT3Qe/zhI378nsaf9fSf/fqVNuWM6T2nPJxFy+bFrBtcWb7kmWN16LfuIVr
e39nUrtPHtuO8+3wme2e994caJLE7ZMMt0rQ3KbR3E6aNOO++r7G9xPCrVW2
LeeUNg8Xc/3TDwdum/BS4+9oei2fG/FtcZ3fuOVZbeHa8vretftksW05R7XZ
cMchfQO2LWbEY2s8l/YbtxhpymKHZJptR0e9T1L+HuJaJXGd7QFrGn9vd9WK
+QrfrpZtyxmydlnjz7sh18T6tpgzel/esNg92wLN7VkHGv8twrUrF0Z8W1zn
fX8wc6Ln1sK1/VadxbblyG72+UP7B2xbzMRd6z1brht347y2/3E6bFvMCF9T
W+yg9De3hXmL6+N2Sp7l3d6OSZcEze3W2zaa21Hf1mDbH9C2bSrNbZVtr48Y
d7ldEoq2zXef5BxGts2nuU3ftmk2t8M/O4mh0tyOs23ZJenos2vh3CdM6e2c
8/jsgG37z2+Lc9qd9yyM9LbFdfI+ws2lc4sz29LR/cbtP6stbxfvz9kyI2Lb
HVaPcY7o2SnS3D7U8/kvOZ0enOxeJ850i/v6P5/fuMWcMKq79zhxrjts2+dt
meUcO+BC9312447athixU1LuzBQtbkq2XYUuSdw+Sf9ZbuHc4qz2pe4Z7YZt
+89vf6ndEU7P51dGmtud72r89wInDrzEdW1x/Tm3j3Wf1/8689t19yeWercf
2/M858ra4/y393r+2865t49zTh7dO2DcvV5o/KwmzmRL5xZntr/u8/SwcYuR
t4v3Yldk2LaFZR93xfmB68T95C7Kbw68NLNtH9W1Q+3+l7k7Ja98cpln2923
LXTaXdHZ+zWeOqYvWdsur0tS1Lbj90n6z3IL5xZntfvtXhWwbf/5bWHYA/c+
EDmnfZnPqoWBC9cWvn3RsqnezkiVcYs5vM2/xfu+O5ZFPLv7PXPcNnb4etG5
lr9uca5b2Pa1u+927+v/fH7jFnPW2P7e48TOyLBj99ux3Dlt0BXue3ndebXn
EBZ96bLpXm9bzMCn7g34tvg1pdl22Ljb1d5ztu0JrGw7vbkdP0+lGrf/LLf7
950XnuO6t//strh8VIeTvftcvmCKsrkt7yNsedCGFa5tizPdoqMd+PPbZ9xi
Oo8b4j3umjVLIr4tvFo4tnjvN+7O44c0/PLWaa5tT9z/aO35xwY+X9C497jn
t72/b6rdN+zY457Z4F7fd/m8RNvOYtzDNq5291RetXy+M/6ZTZ5ti48vvXFc
7fdc91Dh7q3vkjTf3E6zbX+XRJ7lFiN2Pg69/87A2W1x+RjfHsY+C2cpm9vS
joUtj9p0n3udONPdwWfjYeMWc9GEkd7jxLnusG3fsGu969Hivd+45ePE9F14
U9s57e86PWdOCny+sHGL89ve3yvW7ht27Rl7djo9Z01yrVr6tjhrLYxaXCf6
I/4WyRWzJnueLs5yh5vb/nPawrNn7nnMvV687zx0gHdbv0VzrbJtk10Sirbd
+i4JmtuUmttVs+31H/3Unao2t7FP0lSXhLpto7nd6n2SKuOm0tyOs23/nPnA
Da5v+78vTRqxb9Lv3PKsdnufhYen/ZQ+3scdQ8Z9zuYZzhfbHR4w8m90OdUd
/3OEz2p38vVKwiP2RR56+vFK4xZnuf3PLT63/HzSo8Wc/eCUgGmfMndg6tdG
WrY07iN7np356yrOe2OfZBHfVrdIuqybGXHopBEW3bPNsP0jeyXhEc8tz3mL
CZ/RDjv4kbXnEb1sv1V73W3fWW3ZK1HNGdMaP5OFjVt4tdz1KEZ8HmHRR4X2
UfqNW5h31q9P17une+e222V4nLBus81t6rZdvLmdtEtSTs9HFkQcOmnEvslB
CueO2x8pnls2ScSEjVu4trBz7/8XzjjJfa7w84Wb2/5eSeT/J67s6hl42LiH
7qu9Xi9sPPeh7Y52vVmM/+vQe/1i78x2lu6I+HyDnro31bbltMtk3Ghum7Tt
bL79lDdZjFs0SsQZ7qz/PgmLFu4dbm4L1457jHBuaeAB4z74jHPD/h3Oid3O
9e4ruinishh/IyTY3a57dlxDRJjxqW22XjfuYI/kgvFDA78fcR8xwqPl9XX/
jrftNOMWli2MO+3rKX6t015+nLVtZ/PtYHNbOLZoj2R93QnPHXr/8shZ7VG+
Xkl4xL5IaeBh4xZnub/VrfH30t84/jj3shhpx2LC3e3Ztcf5b/eP+Fxn9q6f
JfEbtzyzffGE6wO/H3EfMeJzy+t7zpqs3B0ZN8K3b37lWWVzu/PQ+O+pxFw6
YRRh20ZzG7bNs0ui37Y5NbfLte04487TJaFo22huM29uw7bZN7eLGDcF2w7v
kxRNbrkD0vu5p91hbpvkzAcmBs5zCxMXpn3BnoWBJsmpS4cFzm0f0aOT1yaR
fixMO9wk6fLcQtfBw2e+hTsfP6p7bHNbOLf/3LZwbdkgObLt+lPmDlA2ScT9
wo4uHi/OcId9W8ypOY1bnNMWH2f92aVTqnFXp7mtx7bjfdu/T1I0ucNOLc5t
izZJ13WzAue5hUmLxvYVPusWH4vrRHdE3kec6RZntS/Zeot3napFIu4j7isf
K+8rbLvjvOHuuW1Vd1uc8fZbuLBoadry3LU8q+2f3i+sdjpMGxA58y2cW3RI
ej55R8C4xdntrK9PcWZbntfu+8JdTufbJ7jW7Xd18WsTti0a3GXsk+Ta3G7G
tsP7JMUeyWNCrizsWZzLvuKRWwN7I4UFi8t+6xZnt0V3W3q1uI94rGiQCMeW
16ma26I9cm7tsdKlPeOo/XrOGntNTHN7u+vc/nPb4vGiQSIsW17f5ZZxyub2
Jcume2ep/Y8XZ7j7+HxbntkWDRJxW/jXKJ7jstpzZTm77W+SfPPK+p/pp9ee
s9W2bbJLwmWfZJJtS7/OYtyySyKa2sK6hTH7Xy8nXHiue3Zb3O4/z31i7Xp5
XluOuOw/ty3u7zZIarfJ67svmKpskoj7+a27/vhT3DPcYd+WM+aZ9e7t0rq/
Xvu1C5sW3W1xtltcd2qvS5XN7aEbV7kNbL+TC+MW19XPcCfbtpzrH2s45Phn
Nip7JGcPuTrg5+L8tvg8V6+Yr6FLQmufZJJvq1okYm+ksG6/84oRZ7vF2W3R
3Paf5xbXy/Pafuf2n9sW1iwbJB3azFmcuVY1ScT9/NYtHy/OcKv2Sopz29P3
POreLq1b/NrF2WzR3b5qYf2/ERLWvUjRJBm7ea17m9/JxeNFW6TRGwn2SIRV
H+b7+ojHNu6v3icpZ2Tt8Sd36xJ4rDjXPX7zA2yb2/pt+w3Sto3mNg/bxj5J
s81tlW2HjZtic5u+baO5bWafJJrb1JvbSfsk8xp3GV2SrLbtb26rJ9gk6bR5
RsDBhXWH29tyn6Qc5S7JDM1tlWlHZ6U3Sfsjiza35ST1tsOTZ5+k2S4JPds2
0SVJ2icZnbXKuXjr/ICDC4eO7phs9LbzTLi57Y3Ctv2TtDsyzz5J1ehobof3
SFZzn2TrmttJth2cLZEJn9UW7RL/+Wph1qJJIke1NzJu0prb4Qk3t715K3mK
N7cfTZ2sXZKwb+vuklC0bW77JFW+HbbrNOMON7eTRp7Z7nbj6IALX75gaqS/
Pd3XIolMjuZ2cJ5VzkzlRHdJ5m1up9l21uZ2YCzYJ5l0djv7vBTpkoidkX4X
Fv4dPtOdtDsyT3NbNYti54BydDW31RPskiTP92nsk3y3edvmuk8SzW1+zW3b
9kmW1yUpatvxvi2Gom2juc3Dtvnuk+TU3NZr27q7JH7flmad1bhb1dzWYdvh
LonobB/Ro24memx7OXHbTvdtOrZdTpeEom3H+7batsOOfeG6WW6zxD3vFLLt
vL5dXdtW+zbF5jZ920737Ty2rfJt/4hz3Se2nZPOa9t5fbt82073bSq2jX2S
Zmxb5dtJxp3HtqeFmiRiJry03d0dKc58i/d0bFvt20X3Seq27bKa21Wybf+I
HZPCusW5Z/G+qG/nse143y5q2wdI23YVmtu22fYq2Daa2xY0t4sbN5rbrbft
croktu2TLK9LUq19knFntzvnMO4q2Xb8NG/b2Xy7mG3n9e3W2jaa2/psW+3b
0TPaqinXtvP6dh7bvsYy2+a8T9KEbden2Lntsmz7eoO2He/bRW17J2nbrkJz
W4dtJxn3kg8fKWDb31We1S5q29l8G7bNvbmty7aThqNt5/ftPLb9KiPbRnMb
zW3Yti7brnpzWzUb2oajbbdnZduzSds2mttobvt9uxnbTjNuas3tZN8uatsZ
fLuith3v23pt22SXhKJtm+6SmLLtWN8mY9vpvp3Hts3uk3yEuG2X19xu3raL
+3b5tp3u21RsG/skaTW3TRh3a21b7dt5bDubbxez7Uy+Tca2y2puF7Xt4r5d
vEtS1LbVvk3RtsvrksC2OTS39dv2QdK2jeZ2NZvbKtuON+4SuiTYJ2mnbR/Q
a9tcm9sUbTtvczupr60ybj62rfZtOrZdTpdEj22rfZuibZfWJYFts+iSaLdt
Vs1tvbbdquZ2q2w71rdJ2nbyPklKto3mdvO2XdS489h2rG+Tt22DzW0Ntm1y
n6TJLgl92+bZ3KZp2+b2SXJtblO0beyTRHObl22n+3bYtqPGXZ3mNvZJorlN
0barsE8yybZTjbuULole2zbbJaFn263vkjTf3CZp24Sb20m+jX2S+mwbzW0z
tm2yS0J/nySa22hu5/NtYdZZjVuLbTPaJ1lelwT7JGHbdjW39ds2mtvYJ2my
S6LBtj+gbdtVaG7H2faGj37mTpVsm+8+yTmMbJtPc5u+bfNtbuc2bjS3S++S
2GbbVeiSoLlNzbbR3EZzG7bNwbYnsLJt881tlW3LyWLcaG6juU3ZttHc5mHb
Ze2TNNkloWjbre+SoLlNqbltm23H+/bPAkO1uY19kqa6JNRtm1NzG7YdHnFe
u6hxc2xuU7TtKjS3bbPtXrBtNLfJ2zbP5jZF20Zzm3tzm6dty3n6t+Odff98
XWBufndHJWwbzW0u+yT3MbJtNLexTxK2zcG2TXZJ9Ns2p+Y2dduO+rYYaraN
5jbz5rYVts1zn6SJLonftuXkNW6Otl1Wc5u+ba/Sattcm9vYJwnb1rFPkmtz
m6Jtl9cloW7baG7btE8yzbftbm7Ttm2TzW2Kts11n+Qiy2y7rOa2ftt+g7Rt
o7nNw7axT5LmPskk2xazMaNxF+2S0LdtNLfN7JNEc7vqze043xZmndW4K7VP
km1zW+8+SbNdEnq2XVaXRL9to7lt5z5Jns1tmrZdVpdEr22b7JJQtG2++yR3
87FtRs1t7bZ9ULdto7mN5jYj2zba3Ka9TxLNbX7Nbdv2SZbXJSl/n2SSbW/M
YNy2Nbdts22++yQ5Nbf12rbJLkmzti0nzbhta27TtG00tznYtsl9kmV1Sejb
Np/mNn3bRnMbzW3qtl3tfZLFfJu6baO5baNtc21uU7TtKjS3bbPtVbBtNLfJ
23brm9sq204zbj62jea2jfsk0dxubXNbZdtpxm2bbXNtbuu3bTS3sU/SZJek
+raNfZL8bPt6g7ZtsrlN0bbR3DZl2zyb27bZNt/mtl22XVaXhL5to7mN5jZs
W9c+STS389t2nHGX39ymbtuzSds2mttobvt9u5W2nWTcaG7Tt23sk0RzG81t
881tmraN5jb2ScK20dw2adtobuuzbTS3sU/SZJcEts2hua3ftg+Stm00t9Hc
zmrbYePGPknsk8x3drt52+ba3KZo26U1txNsu1njJt/c1rxP0mSXRPs+ydfs
3Sd5JWzbiG2b7JJQtG2u+yTR3KZs29gnybu5Tc+2+e6TNNjcJr5P0mSXhKJt
V6G5TdO2ze2T5Nrcpmjb2CeJ5jYv2zbb3FbPz92h2NzGPkk0tynaNvZJmjNu
U7ZttktCz7Zb3yVpvrlN0raZNrexT1LfPkk0t83YtskuCf19kmhuo7lN3LYZ
7ZMsr0uCfZKwbbua2/ptG81t7JM02SXRYNsf0LZt2/dJJtm2mE15jJv5Psmy
mtv0bZtPc5u+bdvb3I4b4dV5jBvNbdh2lbokaG5Ts200t9Hchm1zsO0JrGwb
zW00t/k0tynaNprbPGy7rH2SJrskFG279V0SNLcpNbdp2jaP5nacb2cybuyT
JNYloW7bnJrbsG1dtu3fKTngx7MjQ7W5TdG20dzmZ9u9YNtobpO3bZ7NbYq2
jeY29+Y2bJuqbaO5zWWf5D5Gto3mNvZJwrY52LbJLol+2+bU3KZu28Wb2yrb
TjVuNLeJ2Tb2Sdq+T9Jkl0SHbWOfZNS36dv2Kq22zbW5jX2SsG3qzW3bbLu8
Lgl120ZzG/sk0dzmYNsmm9sUbbu8Lole215kmW2X1dzWb9tvkLZtrs1t22wb
+yT57ZMs0iVRTZJv07dtNLexTxLN7VY0t1tj2wb3SbJtbuvdJ2m2S0LPtsvq
kui3bTS3TTS3Kdp2FZrbNG27rC6JXts22SWhaNt890nu5mPbMb49+cBTzhXz
tldqprz0TKxv67FtNLfR3GZk20ab27T3SaK5za+5bds+STS3i9m20riZN7dt
s22++yQ5Nbf12rbJLglF265Cc1uXbV/6wl0t//lO93T/3n1kuiQUbdvkPsmy
uiRpln313nUtfx3qnv4vrLfUttHcDs/w/a1/PeqekXt3Yp8k832S0wzatv98
dt/bHm3561XX9F64A/skLW1uz311b8tff7pn3oH9rJrbttn2Ktg2mtvkbZtn
czvNtgPGjeZ2y7sktu2TRHObX3PbNts20dzuuXRLy78v1jYLt5KwbeyTbH1z
+8ql21r/etQ0Vy7cxri5Dds20dzuvbT1r0td02vhdjS30dzO3CUZ8tDj7utm
d9d+jnPIISznpU6Xu7+HQWt2obltmW37z21fddvOlv/5q2v6LHwUzW00t1k2
t+2wbTS3Te+TzGTcTXdJqNv2bNK2jeY2mtt+36Zo22hu62uS9Fj7cGV+Xrzi
3g1W2HbruyT0m9t9HthUmdd1n/u2JPo2TdtGc9vkPsn+D26vzOv7mjU7Km7b
aG7r3Cc56skn3dfNoiE3t/w1XHS+fc009/cw+rGniNg2mtut2Cc5Yt3uyvw5
ft3a3Qm+Ddvm0NzWb9tobqO5zae5bdK2N3/0C3foN7exT9LG5rZ2236Ftm2X
1twmb9sGm9ua90kWaW5f/tj9lfl5see2h/g1t2HbRprbfR/fUJnXdb8dm1rc
JdFr22huN79PctB3dlTm9T10505GXRLYtol9ks/8boLz0r8MD8z893YqjXvK
979b/7uRmzY4//U3f9Py13GRGTat/n3XtFeeJblP0mSXhKJtt6q5Pfmp5yrz
5/jkXd8rdZ8k1+Y2Rds2uU/ybtg2u+Y2fdum3dyO8+3NH2c3buyTpNYlod7c
xj5JUrZdWpdEr22b7ZKUv0/ysr13VebnxR4v3qv0bZK2zbS5zWWfZL/96yrz
ur523/qKN7f12rbJLgmVfZIjXtlRmdf3qJfzn+FGc7s1XRJT+yT/1/89yqm9
KAJz+4cbFMb9rDtXLas3Hn5ywhktfx3nnd8dcXz9v89ZsgPNbUttW878H+yv
zJ/jt3z/5Rbvk0RzG/skTXZJNNj2B7RtG/skDdl2m29nMW4q+yTLam7Tt20+
zW36to3mNprb5di2f3revoX9z4tXLN5ayS4Jmtv5bNs/ve7Yxv51feXibWhu
E7Dtsrokabbtnz537GD/+u69eHtJXRLqtm13czvduJ8NzJBHdrmvn8cuHtjy
13Le2dO5j/trH/LALrbNbYq2TbW5rbLt+rzizjXLHmf/5/hVS3ZinySa26S7
JLY1t2nath3NbZVtpxk39kma6pJQt21OzW3Ytu3NbYq2neTbYro/uI79z4tX
rFlfKdvuBdsubNtyej+0if3ruu/aLYRtm2dzm6Jt5/Xt0aLJ/fB29q/v/vc/
WpHmNmy7meZ2vHE/q5yx3613jOcNv7Xlr+W8c8fAWe6vfdzu77Kz7bKa2/Rt
O3tzO862xSypzcj1T7H/c3zEg0+huQ3bJmnbJrskFG0b+yRb39xW2XaScaO5
zbi5bYVt89wnabJLYpttl9Xc1mnbci7ftYb9z4s9HnuQVJcE+yRbZ9tyrnpi
PfvXdb9dm2DbDPZJjizRtuUM2b2D/et72BPpLW7ato3mdtbmdtI+SbVxb4zY
9sy2mf7DZ+rnR2dvcv7y919o+es564gehehSiF/7jO8/19LmNkXbLq9Lote2
FxWwbTnTnvke+z/Hpz31AhPbfoO0bXNtbttm29gnyW+fpMkuSRbbVhk3mtut
6ZLYtk8SzW1+zW3y+yQJNbdT5+XV7H9e7Ln3PhK2XVaXRL9t82tuJ01/8f7V
dexf1wP2b0Bzm41tm+uSBH37UXeuf/1R9q/v0a9Qam43b9tlNbfJ23aMb6t2
SIp5Vrlz8jGlb///7L0JdB3XeeeZ8bHHE3vipNNOOp5sjp204022bEuWrIUk
VhLcwH0VKYmiFq4SSQAkARIkQRIECQLEvjwAD/vOBdwAEuBOihIlSrItOY6d
TreddPtMz+icPuM+nng6fe7gVr37cFGvbq23qu6t+t45v0MJ68Or/6tX9av7
/h9hzkG1k/vtL34j8Exb5aMvfEl9zha1Qed2RDq3WW6bkHf7svT78byJMZ86
t8WeJwmd2/J1bkdtniR0bnvfuc2iKeG4RencjprblneepEyd23zdtpe9JCK6
7TB0bgvjtvHMyQQzixulPV+cVdgUGbft5TxJv3pJvHbbU1Sh9APN0uY6vTAW
ArcNndv83PaU3yZkHWiVNt+Zhfpd3DBPUoReEn/ctt48SdbabS1LG7uVHDU/
vSTwTFul97E56vsXqrvBbUvTS+K+c1vPbdPMO9gp7X58TlE7dG4H0ksCbjua
nduiu205O7e9dtuEKHVui++25ZknCZ3b8nVuR81tB9m5zXLbKofRs7VV0p4v
zqqslbJzG+ZJ8nPbORq3Tcisa5A219mnmgToJQG37U3ntju3TZjX0CptvudX
tUHntnBu27vObV5ue9PdYYV1p9Ue41dXFwWeaavgPgp8n9f1D0S0cztabtuK
38asaR6Udj++qmZA0F4S6NyOSud2NNy2P70kUXPbXvaSTPfbHyqI77a3unbb
0LkNndt+dW6L6Lahc1sct014pveEtOeLMzsrpHLbwfeShKdzW2/tNs3s/lpp
c53Trd/FDZ3bwfSS+DlP0sxtE5YMtUqb76W9cUncNnRue+O29f22mdsmvHpz
CKXtUPP/609/JvBcm/HbT35K6aPA93fTtTOc3TZ0bos4T9Iqr50dkXY//urg
CLhtQXpJ+Ltt6NyGzm15OrfFdNtTftvMccM8ScHctkSd29zd9pjYbtu3zm3h
3fZ+9F9+8wcpiOO2/eklYbntJKNH0KwdLVKeL868VBZcLwm4bWF6SfTIuVol
ba4XjNVx6iXh67ahczt4t41Zg/+91obSJM33mnE5O7ej5rbdzpPk7bYJmyeZ
e1jt5L7z5UcDz7YZ7//ZV9RuhwNxz+dJetlLIqLb9q1zm7PbVrmC8u+MSnu9
ZvfNK5Hq3BbRbXs5T7IU3LZ0ndviu21JO7dduG0jxw3zJKFzG+ZJCua2fesl
cT9PcvKgLIXIzJO04rcTzDxUL9354qz9jdC5HcF5kmZumyajpEm6XGcUxyTq
3Obrtr3sJRF/nqS5316jIbukRbp8ZxW3Qud2AL0kQcyTdN5LwnbbhOUxtZO7
In1t4Nk2o/UHuer7F+q7oXNbNrftcJ6kmdsm7J1k4ZEu6fbj8w52QOe2kG4b
OrdT/TYHt/1AbLcN8ySDnSdp5LZZjtsrtw2d2964bS87t8V329C5LWLnNrLs
uMXu3PbKbStdJZPMqD8l3fnizOpqoXtJota5LZLbnpcgu7Feulxn1zRC57aE
ndt+um3CgqZW6fK9oLbNpt8W3W1D57YXndsst014/my/kqf16w8Hnm0zNq/c
q9zX5wcHAu/cFtFth71zm+W2CetaBqXbj69pGAS3DZ3bgrttOTu3xXTb0Lnt
1G1rHbfs8yT96yURfZ6kTJ3b4LbD2LmNLDlucd02914SHb+Nebb/uHTnizO7
K4R02+kRc9tBdm6z3DZhzmCtdLme29sAndsMvy2i2/ajlySVuMLS023S5XtZ
f7tgndvgtkV12yy/jdl0exil56nXeD7+7O8Hnm8Wv/nUp1HG9malj2LrLadr
t0WfJ3lBIrftf+c2y20TNo+cl24/vmn4PHRug9uWtpdERLftXy+J6G5b3s5t
I6BzW7DO7Ui4bTnnSXrZSxIGt038NTJ03P52bovotpNcOYJm5cWkOV9UepbH
ygR229C5HaTbTjJRjdLyWqTK9cJxcNvB9ZKI7ran/DZm9Y24VPnG/eHrrut3
ccM8ScF6SQTo3DbmNJp/rEPJ/ujXnwo84yze/NIj6rXLkg6YJ8mll4Sv2/a2
c9vYbRN23xtDGXltEu3HW1Hh3XGf3fZ1od22rJ3bUXPbME9SvnmSXvaS+OG2
Mc26jhs6t2GepIi9JNC5Hbzb1vfb2jXauXe2pxDezm0HbjvJETTzaL0054uz
DjZK27nN321Hu3Nb329XJ8kobZIm15mHYqHv3BbTbfvVS8LHbdPMKW2VJt+z
S1J7SkSZJ+lX57bwblugzm0jv41Z2dqj5Kos64XAM86idsYK5T4ub+qFzu0I
d24bcxUtKuuRZj++8HB36OZJQud2VN22PPMkoXNb/M5tPbfdnOK4wW2L2rkN
bluOXhIR3bZXndssv+1F57aYbtta5zbLbRNmNFVKc744q7ZGOrft5TzJKHdu
s9w2Ibu5Xppcz65vEshtQ+e2CJ3bLLe9NkFurFWafC9siMM8Sc97SUR329Y7
t1luG7Nlkg0X1B7jVRuOBZ5xFhvXFiv3ccO5oUi7bVk7t71224Tn24ak2Y8/
1zwMnduueknC77ahc1tGty1n57aIblvrt5sffiRV57b4btuvzm338yShc1u+
zu2ouW1ZO7etuO1nJlSePX1cmvPFWQMnYZ5kKDu3nbptfb89f5KcM7XS5Hre
UGoXN8yTDN5trxTQbROWj8SlyfeK0+3QuQ2d267dNk1GvnqN55//4I8Dz7kW
3DuB71v6zha07c5ZyTu3o+W2veol0frtwgTbL12UZj++7fwl6NyGzm1w24L1
kkTNbfvXS+LObRO8d9tbXbtt6NyGzm2/OrdFdNsidm678tshddtsv53qthW/
nWBWfrPw54uzdsbQrKupXdzQuR3Rzm0dt038NiEtPyZ8rtN2tqCF16BzW1y3
7e88STO3TZOe3yJFvtffhM7tIHpJRHTbVju3WW6bsPCE2sl9/pGZgWddy7Wv
PK7ct/lHO6BzO6LzJI3WbhdqyMxvE34/nr6zFRW9ORFJt+1lLwl/tw2d29C5
LU/ntphu23kvCe229Rw3zJOEzm3P3PaY2G7bt85t4d22tc7t4Ny2P70kfNw2
Y+22hplldcKfL8463MCnlwTcthS9JG7cNiHzeJPwuc480qzjt/m6bejcFtlt
6/ttI7dNyDnRKny+5xxtC7xzO2puW955ksOmbpuwprNXyVdJzsuBZ11LRfpa
5b6tbukVopdERLftW+c2d7c9xs1tE5aW9wi/H19U2i1t57aIbtvLeZKl4Lal
69wW321L2rkdoNumHTd0bkPndpg6t4V02771kvB12972kojntr3sJdHz24rj
bq0U/nxxVmN1JDu3YZ6kfbdNmBOvFz7Xc5qapJ8n6WUvifjzJL3vJUmlXWFR
e1z4fC+KtUPndtBuW6J5klb8NmbjqNrJnfvqqcCzrgX3TuD7tvHCUCQ6t4V0
2wLMkzRz24SXus8Ivx9/oe00dG7DPEmfe0k4uO0HYrttmCcp3zzJJotumwCd
28G6bS87t8V329C5DZ3b0XXbSUaOCX++OGu4XCK3LU/ntvhum925bcbcC7XC
53r+mXro3IZ5krbcNua5SVZeiguf71XnOgR129C5HWTn9vA/Po8u/XL5NPLe
6rTktzFb755BmbvV9zH8/I/+PPC8E371uc+r3Q55rWj73bPcOrdFdNvQue3O
bRN2XL0k/H78jUuXwG0L10sCndsidW6L6bahc9vLeZJGxBKI4rb96yURfZ6k
TJ3b4LZl6Nzm77aLhXbbInZuG3MUzdrdLOz54qy8GEob97NzO/xuOyyd27rc
qEmStjsmbK7T8lrQouvh79wW0W3L0rnN8tuEjN0twuYbe771t1J7SmCeZLjd
tpW12//3v/wxmgzLNPa/02DJbRMWVXYpORv+TmbgmSeMfv0p5T4tPN4pwTzJ
CxK5bbk7t40ouj+OsvfEhd2PZ+S1of33J0LduQ1uW45eEhHdtn+9JKK77eh2
buu5bZWfwDxJmCcZmXmSXvaSiOi25Z0neVAit33YldsmzCyvFfZ8Ma20AeZJ
wjxJW257QYKsk03C5jrrWCzUbtu/XhLR3bbzzm2W2ybMq2gTNt9zy+IwTxI6
t3U7SZw4btpvY9b29Ck5K1j0euCZJxyd/ZJyn9a290vhtv3rJeHrtr3t3PbP
bRNWnOoTdj++9EQvl85tEd22rJ3bUXPbME9SvnmSXvaSiOi29fy26rihcztq
8yShc1u+zm3h50lK27nt7TxJM7dNmNFeKez5YlqsOvBeEv5uGzq3ubltym8v
0DCns0HYXOe0NknTuS2m2/arl4Sv23bSS8JicVdc2Hwvibd7Pk/Sr85t4d22
RJ3b2Fd/bMNxa9024ZUrw+p+dEsd+tdPfCLw3GOWvHxSuU+vXDoNndvQuW3q
tgkb+84Jux9/qfNc5HtJota5Lb7blmeeJHRuy9e5zcNt6znuqLltmCcpn9v2
spdERLcdfC+J+85tMd22z53bDLet+G3M+TJhzxfTzuh3ccs+TxI6t/m5bT2/
jZl3qU7YXC841+CB24bO7TB1bpuxaqxd2HyvPt8B8yQt+23R3bb9zm2jeZJW
HDfLbdNk71Ov8Xz0hS8Fnvtf/OGfqO/P2dMWGrcta+e2iG6b5bcxuybGhN2P
7xwdjazbPhwxtw2d2zK6bTk7t0V02257SfSAeZJBdG67nycJndvydW5HzW3L
2rnN320z1m5rmFXUJNz5Iu4JF8ttQ+d2qt/2f56kmdumSS+KCZfr9N0xmCfp
a+e26G47bsttP3d7isyiVuHyjXvCoXM7vJ3bTt22FcdtxW1vvaeyuEbt5G5/
ckHg2T/77TTlviyu6BKolyRabtuvXhJebpsmZ1+7cPtx3BMOndvQuR1Nt+1P
L0nU3LZ/vSTBum1CuDq3+bpt6NyWr3NbRLcNndtyuG2v5kmauW3CzFM1wp0v
pp2oi2zntvhuW4zObTOyqhqFy3V2eTN0bsM8Sftrtym3ve52h8K86jbh8j3v
ZBt0bofQbdvp3NZz22aO26rbxmybZF1/v5K3N5blBZ79fQs2K/dlXdeAAG7b
n14SmCfp3m0TVtX2C7cfX1HZL73b9rKXhL/bhs5t6NyWp3NbTLftVy+JsdvG
tJg6bp2120K6bejc9txtj4nttn3r3BbebXvYuc15nqSXvSTc50ly6Nw28tsK
nRXCnS+mtVZN99sRcNt+zZP0spdEBLed7OTubhAu1/PiTdC5bddvC+m2vZsn
aea2CUt748Lle2lHB7jtyM2THDZ120aOu/idRstum7Dpxmn1muHWBvTbT34q
0OzP31St3JfNV89y7SUR0W371rnN3W2PCee2MfsmeXXgnHD78Ve6RwLvJRHR
bXs5T7IU3LYnbtvLXhLx3bakndtCum1zv91CAZ3b0LktWue2kG7bt14Svm7b
214S8dx28L0kDtw24fIx4c4X08+XS925DfMkve/cZlOrMP9KrXC5zr1k7rX9
ctte9pKIP09S/M5tI7+NWTvRLly+nxuTp3NbeLct0TxJK37btuPW9dtnk+Qc
VPP/7l98LbDc434J5TlY1CZd57aQblvSeZJ2/fY+it03rwi3H9997WroO7ej
Nk/Sv14SDvMkH4jttmGepHzzJJt8ctv6jjsKndt83baXndviu23o3IbO7VSX
/V9+8wcpgNs2ojTJrOJGYc4XZxU2Qee29G7bn85tPbeNWZgg40BMmFynF8ag
cxvctmu3TZN9sFWYfGcWtvrgtqFzW/TObdeOm7F2m/bbmKX13Urump9eElj2
ex+bo75/4VS3rt8W0W1D57YYbnvf/Ykk8w92CrMfn1PUHmq3HXwvCXRui9S5
Labbhs5tkedJmvntlod/x81ty9q5zd9ty9S5DW5bhs5t/m672BO3TdCeO2Gg
c9vYbc8kVFcLc76YdrLOod8Ov9uWdZ6kt70kqW6bkF3TKEyuZ1c0S9W5LaLb
jlrnthnza9uEyfeCyjjMk5TYbfPq3NaD+GtDx23RbRNeOD2odoSs3BtY9gsW
va7ch/V9A4F0bovvtqFz28htE9bUDwqzH19VNSBN5za4bTl6SUR02/71koju
tqFzm5/bVv226rhlcds+dW5Hwm3LOU/Sy14SEd22rPMktedOyIbjDrRzm4Pb
tua3ddw2oe+kMOeLaZ2noHMb5km69tuYuQP1wuR6bleTFG7bv14S0d128J3b
Ziwbahcm38t6OqBzO7Sd287cNu23mY773UZbbpuw5dYZlLajFWVsb0a//vRn
fM897pXA/RI4+1uunQvNPMk8D922t53b4rltK35731sTaMu5C8Lsx18bGJnm
t0V027J2bkfNbcM8SfnmSXrZSyKi2+bRS0K7bdpxy965HbV5ktC5LV/ntvDz
JDl2bmvPnZAFx+28l0SSeZJmbpswdgzN2tEixPli+uVygd02dG570bnN220T
FozXCpPr3LFGmCfpay8JX7ftZS+JXbdNeO56O0oTJN/rx6FzO2i37WXnthu3
bea47bhtmrkl6jWeO19+1Pfsv/9nX1G7Hfa3C9tLAp3bArvthN/GFN69Ksz1
mr03J0LTSxK1zm3x3fbbXN02dG7L4bb96iURwW0TZHbbME9SPrftZS+JiG47
+F4S953bdudJas+dkIHjjlrnNtNtU8w62Bj4+WLavmbh50lC53bw8yTN3DZN
xqFY4LnO2NcCndvQuc1l7TZh/e1OhdklbYHnO2tfm1Bu279eEtHnSfrfua07
P9LAcR9IOm7rbhuzfZIVzT1K/mpnrPA9++1PLlDfv1DbI5zb9rKXhL/bHhXa
bfPuJaHdNmZ/goWHuwLfj8/d3xkKt304Ym4bOrdldNtydm6L6LaD6tzWozVB
uOZJ+tW57X6eJHRuy9e5HTW3bc1vT7lt4q21506I4bjlcducO7fNqKsO/Hxx
VlVt5OdJytq5LZrbJsxuaAw817Orm8FtO+olEd1txwNz24SFjfHA872wJg6d
2xJ0bgflts0dtz23Tdhwbkh9D8H6w75nf9vyAuV3vzg4FAm3Le88yStCu23C
uthQ4PvxtfVDwvWSQOc2uG0Re0mi5rb96yUR3W3r++1WDWJ1bvN129C5LV/n
tohuGzq3rbltq447svMkrazhnjiGZg2cDPx8Ma3nlEC9JGF123J2btt127k3
6hTmDTUEnuv5fU2R6dyGeZL+uG3CitPtged7RX8ndG4L7Lb97NzWJdG3re+4
m2y77e33zilsu3MWpe9sUTL48Wd/37fc/+ZTn1Z6JfDv3X5zRLrObZgn6VUv
iX23Tdh2/lLg+/GtwxeFcdte9pLwd9vQuQ2d2yK6bZgnmeq3+bptPb/Ndtwh
nScpUec2d7c9Jrbb9q1zW3i37WHnNhe3bey3jRx3oPMkRercNvLbmKtlaNbO
WKDni+ljJ6R1237Nk/Syl0REt23XbxO3TVh4rQ6lBexBFo83RrdzW0i3Lf48
SSt+G7PuZmfg+X7+GrjtqM+TNHLbZJ6kU8etdds0C451KBm89pXHfcv+21/8
hvI755V0MP22iG7bt14S7m57THC3zZ4naea29791TaHozQmUvrM10P34vtvX
Qu22vZwnWQpu2xO37WUviYhuOxSd20K6bf6d23puu/U9FejcFstth6FzW0i3
7VsvCV+37W0vCV+3beS45ekl8adzW9dt0xypD+x8Me1QozCd2zBPUq7ObT23
TZN5tDmwXGceinnitr3sJRF/nmS0OrfNmFPaGli+55S0wTzJQDu33c+T9KKX
ROu3nThuvbXbWla39io5LMt6wbfsNzy7TPmdK5v6YJ5kCOZJetlLYua2aRYf
6w5sP77wcLdUndtRmyfpXy8Jh3mSD8R22zBPUr55kk2iu23Kb0933OZu+5HW
A2pXKxA6vt98DDq3oXPbldt267hld9uOeklYNFUFdr6YVlcbmc5t8d22XJ3b
Rn4bM6e5MbBcz6lvlsZtwzxJudw2YXFLPLB85zZ0SN25/cq5PrT9iQ70+rfb
U8Af37awE23Z1Y1ePZfqu0XsJRHRbZOZklYdtxW3Tdh4Qe0xXrXhmG/Z37i2
WPmdL50ehs5tIXpJxHPbbL+d6rYJL8ZPB7YfX998Wgq3HXwvSVjdtpyd2166
7Z2D44E7MsAbdvVcczxP0shtt773UwVba7cvb0fPFNYH/pgAfJlR0Ii+Nbon
0m7by14S/m67WEi37dRxR7Jz24zhcuW5GcT5Ynr/qdC7bVnnSXrbS+Kd2052
cp+pDyzXCwabAuncFtFtQ+c2X7f9fIJV59oDy/fKoU4p3TZhU0WPrt/W892b
i7qFddte9pK4ddsEM8dtx21jXsf/3j2LMvLV9zH86nOf9zz3v/70Z9TjlZ2t
6PU75131kojvtqFzm5/bNvbbmDcuXQpsP7793CWYJynxPEkve0lEdNt+9JJU
PXgXzd/fFbgrA/iSs6cDNb3zoeN5kkZuG9OWcNx2Okm+1XpQuW8ZeR1odfOP
0ZrYR4CUfIgyC9T3Y30/Vip957aIblveeZIHHblt0rmtPXdCDMfNvXObg9v2
rXPbjPFJ8mO+ny/iHvCM8XLo3I7oPEmevSRaFmGu16G0AHKNe5IXXw/PPMkV
Urnt8HRus9y2Shdaf6sTpee3BJLvF2/J3blNO2783/Q67U31vWjL1q5p67y3
FHVD57ZNt004848votFfrphGwdvdjtw2TW55p5LHi994xvPs4x4J/LsWHO2U
oHObr9v2tnNbPLfNu3ObRXGC/ZM/L7Ogzff9OL5eU/zmdejchnmSME9S00tC
1nKDe5SdKfeY33uNS+e2ntsmOOncfnp/rXL/FpZeEeDxApyw6Ph1ZRs+W9iA
HhmDzm3p50n63Lmt57YJVhx3ZOdJWiBtokylrN7388W0w41yuu1Q9JK479wW
0W0n/XaCrOPNvuc660gs3PMkPe0l4eu2vewlCcpt08w90eZ7vnOOtknfuW3k
uJOdJOf60fbszuTXvdbZ54nb9rJzm7vbvmvdbVubJ2nut7Vum7C2vV/JY0nO
y55nvyJ9rfK7Vrf0Cey2oXNbBrdN+23CspO9vu/HF5X2CNlLErXObfHd9ttc
3bYsndu5h3rBPUoOcY8L9nej2Lsfcegl0Xfbdhy3dmbkNzv2q9ccd8XRqsYf
Bf6YAfbA18DwtTC8DR9rOypML4mIbjv4XhL3ndt+uW0rjlv2zm1f3DYhVu37
+WJ6Q41v8yShcztc8yTN3PaiG/UKOa1Nvuc6p6kZOrehc9tTt01YEm/3Pd+L
m9s9cdte9ZKkzpQcMHXcZK029tpkPfe2dV0+uW2ZOrf9d9uv3xtReHVM7TFe
8vJJz7O/fv1h5Xe9cv6MlJ3b/N32qNBuW7TObZbbJrzUec73/fiLrWeEctuH
I+a2ZZ0n6W0vSfBum7D7zHVwjxJDu8c9Qze5dW6z/LaZ49a6bZqnDtQk3ic2
FvjjBtgjt2xCXcNd1IC+NRa824Z5kvLMkzTz2yzHHazbFrRz28hvY0bKfT9f
TB+uhM7tgDu3RXTbjnpJNG6bsOBCve+5XnCmKXJue6VUbjsutNu26rcxay53
+J7vNee6pOjcTnXbU/MjWY5br28bu+3kWu6RqXXcW/J6ku4bf3zrxu7k1+H/
Jm572wr1+7dOfr2e296a+DnYpdNOe0tDv/rzZnQq/nprZR/avnDqvmxf0a18
jLjtrZX9qZ9vGPClc5un22b77ZEUsvao72P4x3/7p57lHvdHKMcrea1ox73z
UrlteedJXpHIbVvvJUnlukLe+Jjv+/EdF8cEdNvQuR31eZJe9pJYcds0S470
gXuUFOIeFxb3JtZwe+e2jRy3kdsmfKOnMNEDGEcrGz4I/LEDrIGvfeFrYHjb
fa+zhHvntohuGzq3/XHb5o4b5klactsUs3Y3+3a+OCuvBWVMiNNLIr7blrNz
Oyi3TZO+O+ZbrtMmc730hnyd2zBPUi63jXkhQcbuFl8934u3u6Xo3NZz2yzH
bTRPcnNlb/Jr8X+Ttdtbt6pOG/eZ0J0myscWdiV9NvHO+Ov11myTn6PcF9px
V/YlP75tI3tGJnbbzM8/0cH03PK4bX2//cYkiyvU2WDD38n0LPujX39KPVcu
6wq0lwTmSXrVSxKc26bJ3hP3bT+ekdeGDt5n93CL2LnN321D53aUO7eNqHlX
Zf+lW+AeJYR2j8Xn7nHt3LbquK247WlruUuqlPs7r+RS4I8fYA187UtZw11c
L808yWl+W3i37WHnNud5kjx6Saw7bujctuO2k5yo8+18Me1ogxBuG+ZJyjdP
Mtei2yZklzf7luvs0lg4OreFdNvRmSdp1W9j5p1s8y3fc4/FpXbbeo57s57j
prtIRgamfLKyFnu640566MR67tdGBtHmhj6LjntY13GTddvTvHl2Z3LdtrJm
m8zEJP9Ofn7b5Mexv8b/ko/j9dx+u+1tHrpt4rcx67oHlFzuW7DZs+yXZb2g
/I7n4gPh7tzm7rbHBHfb/nZus9w25sAkKyr7fduPLy3rlcZtezlPshTctidu
28teEj/ctsr7CsuPDYB7lAziHheX9PnitrWO247b/vcJvtG/R3UjO1rRyvr3
A38MAWPo6yjf7T0E8yR1/TZft+1tL4lYbtuJ445857YZbad8O1/MaK7h3rkN
8ySj2bnNYnGCue2NvuV6XktzYL0k4s+ThM5tnm6bsLSz3bd8L23tEH6epJHb
tuS4dTq3k457a7eu41b8NqNzW99xT63Xpn8O3a1NO27stzePDE3r3N66lVq7
Pfn5LSPD01z2NurzsnZus9w2YfPVs+oMhC116F8/8QlPsr984wnld7x2+Uw4
3bak8yS97CXh77b1/fYBild6z/m2H9/Yfg7mSULnNtNvi+i2ve4l0bptwsGx
uwn32AbuUQJo91hy8S1HvSR23Xbbe3+v4MRtq7yh8GRphbqW5MBI4I8jYAy+
5oW31TMlNdC5DZ3b3N026du24rhFdNtB95LQpBPOl/t2vphxpkK6zm3x3XY0
O7dZblulAeVeavQt17kj4e3cBrftVS+JM7et0o2eG+vyLd9rL3QL3rlt7LZJ
5/ZmPcet47ZJL4mh457RoazdZs2TTHXcw7Ydt+q3p8+TVNZqE4et8dvaz8vT
S2LNbdNkF6nvY/joC1/invtf/OGfqMcr+a3QuR0Bt+3FPEkzt03Yfe2qb/vx
/NEr0LkdCrctZ+e2mG471W8T1lQMg3uUBOIeVx4b8qRzW89tY+I2HLfWbRO+
Pqiu5Z71RitaUfcw8McS0Af3FuFrXsoa7r5DoXPbXvaS8HfbxUK7bbt+WztP
0sxxQ+e2BbeNuXZcYVZhk+fni7PyY1K5bVnnSXrbSyKe29bz24T0wpjnuU7L
b3HdSyKi24bO7eA7t/XcNk1mYavn+U6fzLe4btvcb9Nrtac57kTHtp7bfk3T
VbLlSGpXCd29rZ0nmeq4h505bspt6zlsvb7tbZUD5o5bYrdNWFrdo+Sz97E5
3LN//pGZ6izAim6J3DZ0bos0T9KK3ybMKWr3fD+eWdAGbjsCvSQium3/ekn4
uG1Cyfg9cI8SQLvHo5ff8s1txy06br2121qeOH4SrqcIztxDF5Rt9PTRaiF7
SUR02/LOkzzom9uu/vs5qO0/zJokLcnl//ydFOjPYxp/npXqtzm4bSk7txlu
m5BWWef5+WL6iXro3IbObV/cNmH2qWbPcz27PCZB57bobhs6t+24bcKCqrjn
+Z5/Mi5V5zbLb5s57tc0bKFmTuL/Vj8+lOK49eZJGjnupMtmOm4zh83+PPbX
ho5bGLfNnidpznmF5/uHlHy+sSyPe/YPzHtN+dnru4Z87CXh67a97dwWz237
1bnN020TVtcMer4fXzm5X5CnlwTmSYrauS2m23bWuW2F9dVnwT0KDnGPz5Wf
8axzW89tmzluK26b8LXTBWjWDnWO/PKaB4E/psB08DUufK0Lb5/vDBUL5bb9
6iURfp6kZJ3bZN029tVIZ922GYO/+AHMk7TgtxXH3XXK8/PFjLaaYN12KHpJ
3Hdui+i23faSsJjX3eR5rue3xwR22371kgjutm+J7bbZflvfbb+YYHlvh+f5
Xt7RKVXntp7bJp0kmylvTRy31m0n12tvTLjsJzqmrdemHbe+31ZdttZxb9ag
77hPO3LctMdmOm6u8yS979xmuW3Mjkm2XlN7jLO3NqDffvJTXLM/f1O18rO3
XDkHndsB9JKI6LadzJM054bCpsELnu/HX+s5L4HblqdzW3y3/TZXty1r57ZT
t42pneTYjbeUeYDgHsWEdo8nxt9l+G33bpvlt/Uctx23jflKgidOJHpji88E
/rgC08HXuJQ13MeqPO0lEdFtB99L4r5zW0S3TXpJZt8oQr/+H/+bLb/92//5
SbTw1u7Iz5M0c9tJLpd7fr6YMVIhbC9JFNx2mOZJmrltwqIrjZ7netFF6NyG
zm3eblvfb7+oYf14t+f5Xne5W5BeEodum+rc3qy7NluHkQHFbatzJbstOu7p
XSTEcW+f/H6t30513FOd2+ZdJMZ92ymOW7J5kmZumybngNrx8P6ffYVb7n/+
R3+uvj+nKB54Lwl/tz0qtNsOa+c2y21jDk5SeHPC8/347vFxH3pJwu+2ZZ0n
6W0viXhu243frp3GB+iFmrPgHgWFuMd1FWd86SUxctxO3TbhqyN5aOZOtV9z
WfVbgT+2gMrymnfU6yg7WtB3zu6XunM7am5b5M5tGrtruZU13NC5be626bXc
xU2enS+mFTYL6bZl7dwW0W3710ti7raX3JwiozjmWa4zCmNSu+2VUrntuNBu
2+teEq3fVulB2cWtnuU7q7BVALdtr3Nbz23bctzYb2d3Jtdwb+rsn9a5re+4
U/u2t21M9KLM6Ex13CNDyd9BHLf1vm0bjluIXhLnndtGfhuzvF7t5G79QS63
7OO+COUcs6pHwM5t0edJXpHIbQfRSzLdbdPMO9jp2X4c931D57a/a7ejNk/S
y16SoNw2ofzuOyhjZxu4R8HA7jHtjVZlnf2pm+/77rZpx+3GbU+xAz1WWZa4
xj4Y+OMLqOBrW3ibPFVeaclvi+i2oXNbTLdNsLOWW1nDfXs3uG2LbjvpuKtr
PTtfTD9ZH1G3LWfntphu29xv026bMLumybNcz6kwctze95LAPMmoum3Vb2MW
1sY9y/fCyrjQndtW3TZBv2NbZXNDH9qa14Nen9Ex9TVFvSmd29Mdd6rbJr0k
W49M/S5lLffIkPrxyZ9J1ojruWy3MyXpz8veuc1y24QXB9VO7s0r93LLfsGi
15Wf+XzvkEBuG+ZJpvrtcLhtwnMNQ57tx1dXDwbWSxI1tw2d2/J1brPcNs3G
pvPgHgWDuMeXas8H4rYJVv22kdsmfHUkH83MU+dILT11P/DHOOrgfiJl7uzO
mMEabp87t4V32x52bnOeJ+llL4kVt+1kLffgL38Q7c5tm247I0F6zynPzhcz
OqphnqQEbtu/XhK+bpvlt5fcbETz+5o8y/X8rmaxOreFdNswT9JN5zbLbRNW
9Hd6lu/lPV1Cum2jzm099OZIGoEd9JYjvbp920aOW7tem/SV6P385Dpvi47b
ct92iuN22kvC12277SXR4/Vb55U1XBnbm9FvPvVp17n/1098AuVsUedvb5sY
kaNzm7vbHhPcbcvZuc1y24Stwxc9249v6r8gUOe2+3mSpeC2PXHbXvaSiOi2
rfptspY7Mz8O7lEQiHvE6+tP3Xrf885tPdrf+5mC87XbO3R5rLZU7a7a2xf4
4xx1Zhep156fPFUevNv2rZdEQLct6TxJK377mQRzLKzlxmu4c2/vhs5tG25b
5QTKuHJC6Rvy4nwx82IF02/DPEno3PbCbRMWTzR6luslo4K4bejcDm3nNstt
E1640Y3SPMr381d75XDbDL9t1LOdwowOtG1Fl7p2e2SQOU9ya15viuPW69sm
nSSKE58x1X2C13Rv6RxEWxsSLhr7dNplNwxMc9wp67QbdBw31UmyvZF23MF1
bp/9xw1o7Jcrp7H37V4ubnvHvQtJ5pWoc1ff/NIjrrOPeyKU9+fsbxffbUs6
T9LLXhL+bptf57YZ++9e8+x6TdGNawK4bejc9rpzW0S37V8viTduG1OXYHP8
MrhHQSDu8bWmS4G5bSuO247b/tsEX72Qh2bmqWuzFp+8E/hjHVXwtSyyhvvR
C/ugczuCndt+uG0as7Xcxmu43bvtMPSSpLhtirRDTdzPF9P2abu4YZ4kdG57
5ban+21C5qEY91xn7GuRonMb3LZXvSTBuu0Nd6aYU9LGPd/Z+9ukmidp6rdT
GNJF323rd24z3fY0puZJ6nWPsNDrIUlBd56kGJ3bH//LH6ccn5W8G2P6bbtu
e+ebKiub+pS81s5Y4Tr77U8uUDtXa3ugc1sity3yPEmrHHrrJso93M19Pz6v
uDNyndviu205O7fFdNv8e0n0/Dbm1JsPUVZBHNyjIO4Rr+GuffPHvvWSaN22
keO20kuidds036s/os7E2QPXU4IC9xIpa7hryqVw2172kvB328VCu22ve0n0
/PYz40dQ+rWD6OPf/p6DNdzgttMN3HbScdfVcj9fTD9VF/LObb5u29teEvHc
No/ObZbbJsypj3HP9Zwqsd02dG7L3rlt7rYJixo7uOd7YU27VPMk/XTb1vx2
NN026SQxd9x21m6num3CxrOnlbxuXFvsOvtvLMtTftaGwWHo3A6olySM8ySt
+G3M+ubT3Pfja+qGIuO2YZ6kfPMkqyRw2zTbOsbAPQriHre0XvGtc5vlt7WO
247bZvntvx3bgb56eSeaUdCo/J2Lym8G/phHDXwNCz/2M/Ob0aMXC33pJRHR
bcs7T/KgRG5b9dsKE0dQ9d/PtbGGOzyd23zcNttvY9IHTnE/X8zorobO7cDd
tj+9JKK5bcLCoSbuuV7Q62cviehuGzq3vZgnaea2CatPd3HP96r+LjF7SRy7
bX2/LYrbtuS3hXHb5vMk2Y6bj9smvHH3PErf2aJk9uPP/r7j3ON+iOytDcrP
2XHL+vptr9y2t53b4rltvzq3+btt653bLLdNeH1klPt+HPd8y9i5LaLbDkPn
tphu26/Obeduu+7dHypUP3gfzdnTAe4xYPeYXdCOGt/60Lbf5um2acfNxW0n
/LbKTvTdJnUtd2ZB9+Tf/mHgj32UwNewlDXcdSdC07kt/DxJaTu3ObjthN/G
ZFxPXcuduoY7PG7bq14SLZmY8XKle4jn+WLWWAV0bnPs3BbRbQfduc1iaYIl
1xtRGmcPsmw8TJ3bgrvtW2K7ba/mSVrx25gXb/Vyz/eG6+F222y/7dRtD3vn
tu+6d9tedG4bzZPUd9wtrnpJWCwoVeeuXvvK446z//YXv6H8jLkHO6BzO4Ru
28t5kk56SfQ48OYNlL6zlet+/MCdm9C5LaXbfpur25a1c9uPeZJW3DbNG91X
wT0G7B5fb78aSC+JHnzdtuq3MV+9vAs9W1iv/L25x68H/thHhcUnb6truAsa
0aOXCm31kojotoPvJXHfuS2m23bWuc1y289Q67NrNGu5p9ZwwzxJu2476bcT
pB1u5Ha+mHagGdw2zJP0pXNbz23TZB2Jcct15oEWoXpJoHNbNLfNv3Nbn94k
OUfj3PI9+2Cb8J3bIrpt/3pJxHXbhKmZk6uSFL7dx9VtE9a09iu5rUhf6zj7
zU8vUd+/0NQvsNseFdptQ+e2M7dNs7i0h9t+fMGhbpt+O/xuW9Z5kt72kojn
toPvJUl125j6SWoevI/m7+8G9xiQe8zZ04Ga3/4ocLeN6dB13O7cNs2jbSXq
++HzOtDq5h8Hvg3Cz4fKtSv8mD/RXCZcL0nU3LasndtO3TaBXss9tYYbOrfd
uG1CemMNt/PF9Lo66NyWxG3710vir9tWaUJzm2Pccp1THxPCba+Uym3HhXbb
onduG/ltzJJYB7d8L27sjHzntphuW6zObXP49pLocxG9evGM6qc3HHOc/VdX
Fyk/4+UzZyI8T/KKRG5bzs5tMza0neW2H38+dgY6t6FzO/BekrC4bZr8wWvg
HgNyj/m9133v3NZz2x0pjtte57aR21bWcWNGd06t5S6bEGA7hBvcP5Rcwz1q
tIYbOreD79wWz20bzZO04raf1VnLPfjLpyLvth31kuhSjjKGK7mdL2b2V0nu
tuXs3BbTbXvbuc1y24Tcs03ccp07yHbcME8y+M5t8d22/c5tltsmrB3p5pbv
1cPdkXXb0LltvXM7WLet+m0M/t6MPLXj4Vef+7zt3P/6059R33e2oxXtuH0B
5kn60ksCblsLng256/IVbvvxN86NgtuWopcEOreDd9v6flvrtgl173wwtZYb
3KNv7hGv4Y69+xMh3HbHez9X8MRtU3y7/UDyesqqxh8Fvi3CCr5WlZGvzjb6
flupd53bwrttDzu3ebjt0UPoqY4TaMaJGjSzuAHN3Kt2T4SN7LwG9KuPP4+W
7D8Z+H3hTmETSjswyfF6lNZRhdLHTnjutpNMlKNZeS2uzxdn7ZjcRlc8mCd5
tRJlddagjJONKP1AM0orbA5+ewG2SC+MoYwDMZR9IobmdjahRVcbObvt6X5b
4cbk84lTrpdNeNS5fasFrbjWghZ2Tx7LVbSgrAOTxzWFwW8vwB6Zha0o+2Ab
mlceR8u6O9Dz17xz2y8l2DD5c9I5eb4NN3o969zeeKMfrertRrkVHWjOwTjK
KmwNfHsB9sguakM5B9vRopNdaF3vANp285wDt33etdvG7Eqw6LjqG0a//pTt
7N/58qPK9+Jeb7e9JLtuX0Qb+ofRsspepdt7dlE88O0F2GNOUTuaf6gLLa/o
R6/2n0dFt6957rYJ+P8z8tqU++F2P37w3k3undsl926jrQOX0OqqIaULJaeo
I/DtBdhnblEnyj3Ug9ZUDqMdg1fRiXtvS+e2vezcNvLbhL1nVO8K7tE/91g4
dDuQXhI9t81y3E57SbRue4pd6JniOuXvX3B0LPDtEVbwtSr8GM8obECPjsk1
T/J7orttTvMkn+opQzP3NgX++ukXq0qOBX4ffKEghtK6T3HvJZnmtinSS9Xr
Im7OF9MPN3Lv3M7qq0Zpe2PBbw+AK+kFLWh+b6M3bjvBskmyj7W4znX2kRbP
5kkuGpg8Xt4b/PYA+JJR0IpW9HW67tzWc9s088rirvONe729Wre9ZqgHZe5t
C3x7AHzJLGhDLwwMejJP0sxtE9Z1DCr35ejsl2xnH/dC4O9d09LvqnP7ldNn
UHYhOO2wkbU7jrYMXeDutrV+m7DshNov72Y/vri0l/s8yTfOjqE5heC0w0j2
7naUf3oiwF4Sedx2/bs/SrLokDoDEdyj9+5xwf5u1Prw7wLp3Gb5bdpxO3Xb
bL+9K8m3u4qVxyB9Vxyup3iAch0lT31tS13DDZ3bgXduj5agZ05VTb1e7R1Q
ZiGsqHuIVta/F3h+AHvgbYa3Hd6GeFuS7Zp2sg5ljJ3wzG1nJchoqVV+n5vz
xYyGWn7zJK9WooyqBsh3SGDle3ZFM1o8zt9tE+a3xVznel5TjHsvCV67nVPT
AvkOCax8L6iMo+evuVu7ree2Ccvina7zvbS5k/s8Sbx2e1FtJ+Q7JLDyvfRU
N9p+c8RXt03YdFntMV7y8knb2V+//rDyva+eO+uolwSv3V5R1wf5DgmsfK+u
GkD7GGu6ebhtwstdI6734xtaz3LrJcFrt9fVn4Z8hwhWxtdXn0mu6Y5657aZ
326YZN/ILXCPHkK7x6k13GK4bYKXbpvm6ZJq5XGYf2Q08O0SNhaWqh1hzxbX
h7Jzm7/bLvbHbeO+7dESNLNIXXebtqMNuqFCyKLJ45C0nYn1QXubUcZoOZ9e
Eo3bJmSeqXR9vpg5WMWnc/tqJUrb1wz5DjF0vtP3tiS6S/i5bcKikSbXuc4d
5tu5jf125r4WyHeIofOdubdV6S7h6bYJz13ocZ3vtWd6uK7dfvlGP8reH4d8
hxg633gd87Yb57h3brPcNk3WHvU9Ar/4wz+xnPuPP/v76jX5vDa06+5F253b
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
e+K2KTJKG1POF9MPNXN12/MSQL6Dv0+s+0kfT+vdeJwjkO3vmdummF3akpLr
7EPsNdx21m5r3TZvx212Pi9SlkhueO4HZc83j85tPbdNM+9Ye0q+c0rinrht
3o4b8u09eue0bn8my3H75bZJD8n6uPqegrKsF1DtjBXq+xdaBh27bcxejo4b
8s0f7bVJL/bhtON277b1/ba2X3vZ8b6U/fiiwz1c3TZvx03eg866iZQl4mB4
7P+8Bp/b0PcXOyf8WNLZd3tuM+W4/XTbPxTabdv127Fp/CS5ltuNe2RhdrPq
uOlzUe2Nx+sRcY94DXf84d8LPU/SyG1jemw4bj/cNuE7fQeS11NWNnzgKk/0
NsfXuclxAHYrLM/N+l5yo69tamdNan+Gk/0YvoZErqN8v+toZN226J3bLJ7h
5LhJtnBm8bEIySvOH/5//LqpzRc5ZmH16ri9L9qcE+hOetGvs+PXCLqvyItz
A9px8+rcNiMrVpdyvpjVqN/F7dRt83TcTvJNv6eG5xoTs+eNLPnGjxf+G/D1
fPp9Svg+027Q7WNnx3E7ddsrE13bC1taUnKNe7q9cNtrbsUVeOSbPn+k1//j
LOHjCby/0R6TBpVvDDmuZu3jRcBqvnmtkeKxdpvltkkPyYq27pR8L4t1cXLb
qX6bl+OGfPsDOVahrwe7/Zl6jrs06bjdz5M0c9uEraPn1fcDbTyh9Dzg/948
MuLYbe/l6Lid5Buj975et1h53siSb3I/vVy/QLY/z85tI7+NebXjfMp+HPd0
u+0l8cpx05nCPpZ+PcXbBudI75woqHyTNUm8z229gPhtfEyil3P8MX7ruMMz
T7IxILdNOHz5vmv3yIJ+LTH7WrKPtPqeLfL1bh037R4Pnbsv/DxJltsmftuK
4+beuW3gtqfYjZ4pqVEe53kll7jmycp6PNbnyTkU+TjeR5GbtveE3Jy8juNr
SMoa7uJ66NwW0G0/cbYIfbN8A9Nv83LcdvaJBHptMs/9s9F1RdmgzwXwc9iL
v41sfz/cNvHWs89Wp5wvZg+mdnGb+e2s88fQExVbdd02T8ftJN/0mjae50he
PW9Egj5n5/VeYC/dNmHp+ZaUXC85bd9tL71Ui9Kr8tGyyX8zJv/Vc9s8HbeT
/Qrkm0++9TrlnOTbS7dNeP5iX0q+15/tte22N4y1o4U1B5L/6rltzGZOjhvy
7T1kFhDxqbz+Rn3HHefeuc1y2/Q8ycz8qffNpO9sRQX3Rg299hvjw2hN3Qld
t83TcTs9LnRyXGOGV8+bIPDXcXvvtgl7xyZS9uP5F8Ztu+3dI2fQ/De2e+64
yf6ENZcM8u0Msh4SP66sPlyeGYd5kvZ7SYjb3nSyBlXdfHua5155bMiVe+Tx
vKFf6608N3k5buIel5T0BzpP0m7ntp7bNnPcXsyTtOK2Cd/pO6g81mk72hxd
TzHKE71+0M734n4qfCPXEUkO9a61ON1f4+so+BqSsoa750i4Orc5z5P0spfE
aN3297p3ot/5nd9Bv/+tv0q67mc08HSAdjIEjtvaY0Qfe/jmuD1y2zRp+bHk
7561swXlTNhfu53WW6zk+99++6/RkxVbNX67WiGofIMjcQ59TdbtsZCZ49b1
2zbdNr1GOz2/Jfk70yZzvfKG/XmSuQPHlVx//mtfVv79d9/+24TrjnvquOEa
jrz55tG5zXLb9DzJjPzWafl+9bb9eZLPDdWruf76v1f+/dNHv44W1hyc5rY3
e+C4Id/e5ZmsqyFdtLz+RruO23EviYHbJiyr7EnmMfdYl+na7U1nOpV8/+V3
HlFct9eO2+6+hNc+iCZMDlAUx83LbdPzJDMLpl+vOfrWXdvrtl+LNSj5/t3f
+z2m6+bpuOEajjf5xr7Iy9+jddxCdm4L6ban1m5/5buPo8/g59nLm5Oum6zl
duoeeTxv6N4IK++X4OG4afd4+MJbAnduW3PbRo7bz14SrdumeeqYul5w3qEL
XPNEvy9GLz+s79XOnjR6z47T/fW8I5eVv/nZw7UO/baAblvaeZL6vSTEcROw
636kfINnjtvKew+13dLaG71uU28mHTnW0WbZrDuPdsXkfIyVedb8DXzf9a5V
kvdckGtK5Pvp73W7Xo/+Gz113BzdNstvYzLLG5O/O+Noo6NeEuK4CVOuu9oT
x20l30ZzNvCNnpNgJ992njdm+ca/Vzu7B/83/hjr/ZfkZ+LPk+8nH8Pfy/M8
wg/H7XTtNsttE3JOTjnu2UdbHPWSEMetRXXdBUm/vZaz47by3loR8k32raxs
iJ5v+j16vNZxc3HbDL9NO+yFFR3J3zmvNO6ol4Q4bi3YdefWHPTMcfPON95P
4RxbOVYIc77JmhriSoJw3Dw6t1lumzjrDd2nk3lc32bUxa2u2yaOm6Dnuv3O
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
yrzON8txi5Rvch/Jez701rKbrfmym/Ewdm7zmCfJooWC1VWi9nI/QC/VnLft
HllYcZJGz08yg0f73md8zZD0yTu5X8Q9Pl95ToB5ks46t7Vrt3stOm4v50la
cdvfurJH4dFz+9GsnTFlOyyrdn89RTSS11F2tKDHzx6Ezm0BOrf13PaU496V
4ra/lnDbBN7HIPRrJH09WPt6b/U86FBibhl+naXfL8g6znDquOnXfKP7Q9Z2
0D/fSreZ2x4qq3+bXWjH7ZfbJv46u6MOZcfrbbttluOm3TYhqHxbdSR28+3U
cdP3x+h6Jr3WxOxn6t0vN9kk5+asc3I3+fbWbU/32bldk7Tbd9tmjpt222tv
tSt4lW+cS3odm7ZnKch86+1LZcg36byi3xPMb+ak+3mSZm6bsKqnV+nltuu2
N5s4buK2N989rfhtLxw373yTbYrdA51v1ntyw5Jv8vV0v62dv9FOvtmO233n
tlW3TdgxcVnBzG+rjruL6bYJQeWbzoTRMandfLtx3ORm5Fbo93nRP9/s+Jp3
/zD9PHOzD0913N67bcLWgctoS+8lR34bsynWyHTbBK/yTVw3fWOt6fA736x9
qUj5trK/J2skzc6JrWbcaee2iG7bi85tlt/WOm7abbc8/DvUOknVrQ9Qxs62
ULvHtDdaUdqOVlRz84fSzZM0cttGjtuPeZJW3DbNk6fKVWdUNBh4LniDrxEp
a7jLT4XKbVvz287ctl2/zcNt41mSGOK49dy2146bQB9n0+dmVs6DrMxX4u24
zc7x9L4uDI7bT7dNyLlYo2DutlP9NiY94bj13LbXjtss31aOhZ3km4fjNvp7
WF9n9re4dYD02jO3cyb18m3dbzt324QVoyp23fYaxV1POe7f/+L/oeO2p/z2
cx46bgKrPzrIfJs5QBHzTUP3cvI6f+QxT9LMbRM2XhlUsOK3N+tAHPcffvHP
mG7ba8fNI99W5od54biDzjfpRNHr/bb6N9rJd3Zeg+K1CXvuX+Q+T9KcK5bW
bk9xNem49dy2147bLN90JljHpE7yzcNxm71vQu/r/HbcVh4/q/lWHTe/eZJm
bptw4MYtBbtum/hr4rj13LbXjpvOKLlpr7cFlW8zxy1Cvq3so+lZgm62Ee24
RZkn2SiJ26Ydt57bpnmt6VLo3ePLtRek7tzWc9ssx+1H57Ydt435Nl7LfWFf
ci330lP3A88GL3DPj7Kvwmu4zx3k2Evi1G0XR9Zts/32kSkmjqAnThcy3bZf
jpt1XdrsNZZ+zcbXk7Vrl1jHC7CO2x52HLcdt23mt62t29Z32/MS/jr7bCnT
bc+/UaMQVL7NjoWd5juM67jp38nTb9P55rF228xtW+slYbttwrLzNYrTJv9q
3Tbx2344bozemqYg8y3DOlcz6L/TTWcJ2f5+uG39ddvW1m7TbLgUR3NK8xP/
6rttvxy303zT3dd6vTO8u0pEyjd9X6zenK51JdvfqJdENLdNeGN0iOm2/XLc
rHzTmTCb52Qn31FZx232+NnNt59u2+m6ba2/zhsaYLptzIkHb/mSb71zsiDz
LcM6bivdJryeMyQD4rltv3pJnLtt7LIxr5WdYrptQu2bP0qu5Q6je0zf0Ypq
b/1Ios5ta25b67iD7dxmu22aJ+uOq+sP9g4Eng9ezNk3rPxNT52qFL9zm4vb
9qeXhI/bPjzNbROM3LZfjvsQY96i2bke67iFwDrOcOq46WvWVvq47a6xktlx
i+a2DUm4bcwCHxw3K99mx8JO8+3UceNjenKz0udqdw2KUwdIH2vz9tt0voN3
2/p+e60lUt22n47bbJ/nd7719qWi5puFp46bQ+e2F257itNJWG7bT8ftJN/E
Jet1QLAyGpZ80x7G6s294zbpJeHutsccu20jpx2E42bNgiE3vWNSp/l247hJ
95vVvmIrP1PvfvF4TOnno5PeWm2+XfeS+Oi2zcBum+BHvs32eX7nm7UvFSnf
LJeu93fweq+Zp53bQrpte53bem5bi67ffm+K7e1XQ+seNzWO+ty57X6epFW/
jRGlc9vIbRMevViIZuY3K9tl8ck7gWfELfiakLKf2hlDj184IK7blnaepPte
Evt++6iC18cg9Dkd7Y7NXpONZmzQx5csR2LXcdM/k3UcQXtwVi8F63fK6ri9
cttWO7ctu20dv+2H42blm5Uzt/m2kjXW95JjbFZ+8P1nzRuxejxsJ5v084k1
S4dXvnl3brt129b8Nttt++W46bxp3VpQ+TZzJKLk2wi6k9zNbNUUx83RbTuZ
J8nTb/vhuJ3mm+SBNXOOZNHIkYQ137y7SvQctxfzJJ2t3XbmtjFF98cDzbfR
ManTfFvJGuv30v2/rH0i+b3aXgq/HTe5r/hmtCbGar696tx247bt+m3abfvl
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
kWUq3+L2kjhz2yoPUGZ+HPIdadSMZ+xsg87tgNw2zfrKs8K6x9Vlw6GdJ2nk
tgmydG4buW3CY8OH0Kwd+NpWK1pR9zDwjOHrKPjajrKGe+Co725b1s5tEd22
Hb+tOO5i1XGLkEPA/+e94kgKm6WcJ2nmtzEZB2KQ74hC8p1RqOe45enc1nPb
hKx9rZDviELynVXUKuU8SSvM3h+HfEcUvNYMb/vZRXHHvSSium3C3P0dkO+I
QvKdU9QhoNu23rmt57YJ84u7Id8RhmR83r5OA78tutuWo3PbzG+TtdxpO1qF
dI/lV94Lfec2y2+nOm73ndtBuG2ap8tPqa9vxWcDz9m8QxeU+/LssRqYJxmi
eZKGbnvimMrxemXb5x6/HngOAX9ZVH5TdYBHm4Ts3HbjtglZJ5oh3xGF5Hv2
0Raubtvvzm0j5pa3Qb4jCsn3vNJ2qTu3WWyfZNHJLsh3RCH5zj3WJXAviTO3
rXINLa/og3xHFJLvZWV9oeglod32yXdUVlcOQ74jDMn4quODAfaSgNum2Vh7
QTj3+Hzluci6bZVfSjFPcprfZrjt5FrucwcSa7lb0PKaB4FlDF/Lwdd0lDXc
w4eFnCfpZS9JmOdJmvptTLt6rSV770Dg+zvAX+bsU48/Z7fWC+W2nfaS6JHT
2Qj5jigk37ltcs2TtOq3MUu62yHfEYXke2V7T6jcNvHbmOd6ByDfEYXk+4XO
0wK6beud23pum/BK/wjkO6KQfG/quhg6t42pmOSNwSuQ7whDMr6jZzy8ndsC
zJO0SsckNbd+mFjLLY57rLr2gXSd23zctuq3Vcctidu24LeTa7kryFruM4Hl
DPfyKGu4j1dHeJ6kTL0knNw2YbQMzSpQ+xwWwbX2yLD45G21pyQ/huaOVkvd
uW3Ewqv1KK2gBfIdMUi+0/Nb0Mqrcndus3h+knXXOlF6QSvkO2KQfGfkt6KX
rw0J1UvCw22rnENbbp5FmQVtkO+IQfKdmd+G8m6MStW5bcVtE/beHkdZu+OQ
74hB8p01uW87dPu2770kfNy2vt+uoCi7dx9l726HfEeQqYzHUdW991z2kgjo
tgXt3Dby2yo/R6/UXxLGPb5UdT4yndt6bpvluEXv3Dbje1f3occuHECzdqp+
cemp+75nDF/DUWbO7WhBT5wrgXmSQrttDr0kLLoqErOr4kLN2wW8YWX9+yh9
l9oDmd1RJ33nthlzexog3xGCzveirtT127K7beK3VbrQsr52yHeEoPO9uqdX
GLfttpeEdts06wcGIN8Rgs73S31npHHbbL+d6rZpXhs6D/mOEHS+tw5clr5z
W7t2W8uu01ch3xGDznjB0A0JOrfdu22/ekmcu23Vb2Ma3/xImQMatHtM39GK
6m9/GFgviQhuW+u4ZXfbxG8TnqqqSMxVGfQ9Z/gajrKGu7wKOrfD3LlthfK6
xHvK+uA4JMTgYw/8vkFljdSxpoB6Sfxx24sosk82Q74jAJ3vOWWtUs+TNHbb
qt8mzK+IQ74jAJ3vBWUdoXbbNIsruyDfEYDO9+LjPYH1kvBx2+Z+uzjBylP9
kO8IQOd7xYmBULttmueqTkO+IwKd8bXlpwV32+Hs3Ga5bZrNTaOBu8dXai9G
qnPbCFF6SXi5bcJjF4vRzPxm36+nLKtOrOHeGUNPjOit4fa3c1t8ty1P57Yt
tz1J2kQZShs9jmbtVXOYviuuzIoI+rUS4At+7xi5tp62O4bmXqoJRee2kdte
dKNeIfdqA0rfG4N8hxg63xm7W9DKMXE7t3m5bcK6a10oY28r5DvE0PnO3N2K
Xr46KG3ntlW3Tdh68yzKKmyDfIcYOt9Ze9rQrmuXQ9G5beS2CYW3x9HswnbI
d4ih8z17Tzs6ePNWKDq3zXkHld17C80p7IB8hxw643P2dKDK2+9B53YAndtG
bpvQdP8nKLugPTD3iNeRN9z5ieteEvHdtrnfHjR13OJ2brPc9rS13PXlieO6
Pt9yhq/d4N/5dFVlRDq3ObjtcbHdtl2/rbhtmsvHUdrxevXah3J9b0g5FlGv
u38Y+OsnYJ+VDR8o25DM/lDXbzfr+m07vSQium2W30567iv1KPtEM+Q7ROjl
G6/fxn6bu9u+5d5tO+ncNnLbNM9NdKJ55XHId4jQyzdev23Fb4votu367dcp
ttw4gxad7IJ8hwi9fOP129P9dnjctp7fVrmO9t4aR8sr+iHfIUIv33j9NvHb
4rvtt125bZpjd++jNZXDkO9Q8aGy/bQZx+u3rfht4d32Q75u28/ObTM6J9nR
Ph6Ye9zSfEWOzm2P3fagoeN21ksiittOruW+NLWWe/HJO55nDF+zSa7hvnAI
OrcF7Nz21W1rmNVVmZxDCYQHPF8yu6Neis5tnm5by7yexuQcSiA84PmSpH9b
9s5tO24b8wLF8r52lJGYQwmEBzxfco1h/7bfvST+uO3pjKDnBwaTcyiB8IDn
S07v3w5P5zbbbat+m2bT0PnkHEogPOD5knT/tj+9JHznSVrz2+/oUpkg7/R4
cg4lEC7wfEmr/dsydm6L77bN/XYnRctbf5dcy+2ne8RruGP3fyq22/agc5vl
t1Mdt9id21bddtJx47XcjSfUfcSeXuT1NU3SlfR0/UkublvWzm0R3bYvvSRW
uHwcpbdWobQjDWhWYVNyNiogETtbUHphM8o42oRmtzaguaM1wrttHr0kRixO
sOhKA5oXb0JZR5snH6MYStspwPYCbIG3WUZhC5p9tAXltrWhlVfD1rltz23T
rJvoQks7OlBOaRvKLGyFfEsI3mZZRW1ofmk7WtXeg165NiSI2/a2l4Tltmm2
3DiLnusaQAuOdaDsyccofSdc05ENvM1mF8XRomOT+6zO0yjvxmiK3xbfbdvv
JWG5bcKBSQpvjaNXukfQ4mM9aE5RO+RbQvA2yynqQMvK+tCmrovo0O3boe7c
NnPbNGV376PXe8fQ8rJ+NHfyMYJ8ywl2lfP2daFVx4fQzp4JVHXvfQHdtjyd
2365bZr8rhvKtvTTPe5svxbJzm09t53quMV123b99mM0Y8Vo5u4mZft72VWF
r9Xg34HXjT9x6VAk3Xbk5knacduTpNNcO26LjCQnTMlkUq5Lliknk2TbYPa1
Cn2umzPneqVlcq6fssXcaVQZMo+J3/Mka4R22yoNhiy5yaLRlKW6NOmyzBLN
SZbbYMXNmGVWTqNlilvmrJpGqyGrp9Fmyhpd4rpEoXPbitt+4Xa3Li/q0qPL
hjtW6NXlJVP6kmy0wct3+m3xyjQGDHmVxd1BXV4zZUiXTUyGdfFqnqSondtG
a7e1vGGJ80l2mHIhyc437XIxyS4b5L15yTL507hsSgGT0RR209xnMZZkjy2u
JNGfH+n/PMkigd22MTeSHLTJobduWqbk7VuOOPz2bVscmcYdQ44yuatLqSn3
khyjeWCOdk6kVcTvJXHXuW3FbafybpJTNqh656EtqqfxniE179K8b5naaXxg
Sh2TH6ZQb4kfJWmwQeO7P57ioTlN0/BmnmRzxNy2V53bxn77HxTi7/4M5ezp
9M094nXjbW//DNx2kn9S8L1z2y+3fXV/kqdi6lruzIJuz66n4N4d/Duerq+A
eZISzpPk3UvC9NuO3ba53xbFbTP9NrhtSTq3RXfb+n5bFLfN9NtCum19vy2i
2/azl8SZ29b32yK6bbt+247bZvptx25b329HzW1vk8ptnxfabdv123bcdoGn
bntMcLcdTOe2M7d9XWi3bddv23HbbL/t1G0z/Da4bW5u25rfDo/btuu37bht
a37bmdue5reFdNswT9Ibtz3ltwl7+m755h7xGm4Rekn8nCdp5LZpxy3jPEm2
396fypX9aEZho3o95fh17hnD12iUNdy7m9ATYwdDNE9Spl4Swd22Tb9tx22z
/bZTt13O121b8Nt23LZdv23HbbP9tkO3HbLObTtum+23I+a2LfhtO27brt+2
47aj3rnN021b89tO3XavPG6b4bedum2233bqtv3pJQlinqSZ27bmt525bft+
O0Rum+m33btta35bvM5tEd32/8/ee0e3cV2J///u2fM9m98msZ3Nbsrupm6y
3sRJbDmuie3E3UrcZMvdsrrVbMtNlmxJtmNbVu9d7JTE3nsvIAiSINh776K6
RFGS72/uAx44AGZQyBnMG+DNOfcQBAbAyL4g7nzenc/1lW/7wrb91butDNuW
5tvTZtte8O3psm01vSSKz5OsYJtt+8q3fWHbjnw7yNi2F3x7umx7H+tsW7fO
beXYNg18zhNrw1Vnj4+8HwIhpragdW5LsW0arHlJps+2Zfi2LW4/8qXVc/TO
MXh+v0XBPKsjazSkh3v/13yeZIA6t4ONbfvLS8I+25bm2yyybTW9JMqwbc98
2xe27R3fnh7b9peXhLNt9pzbemHb/vOSKMu2/eUlYYVt+8tLojzbTmCabWvj
JZku204LWrbtj3mSwci2N6rIttX0krDItvXk3Jbj22yybS28JNNl2/7xkijD
tvUzTzKQndtybDu0eirWnixWnT1+EFHA2bZTnLAFK2xbKS+JVNyKgb3ca6y9
3LO/yFa+h/uDvY493Ny5zZ3bjDi3WWTb/vOSKMu21fWSsMe2/eUlUZ5t72Oa
bevVuc0+29anc5tNts2d23pg297Ok2TZuc0+2+bObdbnSXLnNtts219ekmBj
2/7zkrDOtrlzOxjnSWrp3HbHtmnga/xtXaRq7PHxj8IkeriDy7ktxbblGXfg
sG0737bF7aGfk5y47+0j8Nze2hnnGK7J3L/a6pS/48hXQercVpZtq+klYZ9t
c+c2d24HF9vW6zzJZ3XFtvXj3GafbXPnNndus862+TxJV77N2bYenNvBxrb1
6txmkW0HgnObTbbtL+c2Z9vcuR04bNsa7SQ2JhhUY4/rTpZI8m322bZyzm05
vu3IuNl2bs+EbYvjnnV7rGsfn6XPOM9wTYb0cH+4F2Zl6NW5rcA8ySy22Taf
J+kHtq0jL4nibFvEt1lk29y5rb95ks/piW0XzJxtc+c2Z9v+cm6zyLa195Jw
5zZLzu1gY9t6dW4HG9v2l5eEfbZtUJRt69W5zedJBinbNinLtvXq3PbEtsXx
1IZoxdkjur5Dq9q18ZIwzrat0efAt1lk29PykkjGOhK3hyvTy/38vlri1yE9
3Me+5M5tPzm3mWTb3LmtC7bN50ly5zZ3buvbua0M2+bObT5PUk0vCWfbenBu
K8+2uXObO7f149xmkW37z0ui7DxJdb0k7LFtf3lJlGfb5pmzbe7c1uE8SXWd
2+7YNkaYEP9IMSrOHtfHlXHntgzbphEI8yS9YdviuGfjLpIfj25ImXae4VoM
6eFetyfgnNsssu1A8JIow7a5c5vPk1TTS8LZtjrObdbZtp6c28qybe7c1p9z
m022zZ3bemDbas6T9JeXhH22rR8vCftsmzu3uXM7uNi2XudJ7tUV29aPc5t9
ti3Nt8Oc4vkvTirGHrEvXD9eEnWd21Jsm0agObfdsW2M27CXO/IzkiN/XnUY
5uyp8TnHcA0G12LwNf4Y+kXAsG0+T1J/8yTV9JKwyLY195Io4Nxmk21z53aw
z5Pkzm112LaaXpJgY9vcuc2d23yepD+8JIHPtvk8Sf2xbTW9JMqzbe7c5vMk
1fSSBD7b1pNz2xPfxvgqzaQYe/w0oSLo2LY833Zl2xgnfWDc+mHb0nz7Nqe4
+7OdtvWUZJ/z7LFPreso96zfFeDzJDcqyra5c1sfbJvPk9TfPMnZumLb3Lkd
jPMk9ercZpFtB4JzO9jY9jJdse1Eptm237wkirNt7txWw7nNItsOCOd2ELBt
f82TVNNLwiLb1t5Lwp3bfJ6kf53bcmxbHC9/HT9j9vjc5ycYZ9v+cm7Ls+2T
XjJu/3tJ1GXbNG4/uZHkyp9WHoJnd5m8zjFce8E1GNLDHfUP7twOFratU+d2
sM2T5M5tPk9ScbbNndtBybb95dxmnm1z5zafJxlsbFvFeZJ6dW6zyLYDwUui
DNvmzm1V5klWsM22/eclCTK27TfnNoNsW7fObWXZ9nSc256jA7blmGfMHjel
VenWua3kPEl3bNsT49a7c9sd37b3cv9jB8mXRz5O8DrP0KNDerg37uJsW0fO
7WBj23yeJHdu83mSnG3raZ6kms5tFtm2/7wkyrJt7tzWC9tOYJpt69W5HWxs
m8+T1N88STW9JCyybe29JDN3brPJtrlzO9jnSXLntjJsWxyvbEmYNnuc+0WM
Ltm2GvMkPfFtKcbNonNbabZtjY9hVvxG+NMq63rKMzuMntdRdlfZ11Fuj/mM
O7e5c5vPk1TdS6Is21bXS8Ie2/aXl0R5tr2PabatV+c2+2xbn85tNtk2d27r
gW3rd55kko7Ytn6c2+yzbe7c5s5tzrb1ME9ym67YNnduB+M8Sb06t6fDtmns
KayH+1YdmhZ73JFTy5iXRLt5ku7YtjPjZpFtT2eepDdsm8YsIe7etI3kzcPr
Yj3mGa65kB7uL3YEkHNbWbatppeERbbNndvcue0vLwmLbFuv8ySf1RXb1o9z
m322zZ3b3LnNOtvm8yRd+Xbgs+1AcG4HG9vWq3ObRbYdCM5tNtm2v5zbnG0H
p3M7uNi2d3xbmm2Hi2LBzhSf2eOrWxIYYtvsOLflo99vXhJ/zpP0hm3TuB17
ud86QPLnmR0VsjmG3hxcc8G+7z+67eH2t5dEgXmSWWyzbT5P0g9sW0deEsXZ
tohvs8i2uXNbf/Mkn9MT2+bObc62FWbbajq3WWTb2ntJuHObJed2sLFtvTq3
g41t+8tLwj7bNijKtvXq3ObzJIOUbZuUYNv6d25rwbZpYC/3/W8d9oo9/nnl
IdL3LdXDPW0vCfNs23vnthTbphHozm05ti2Ou7ZtIXn24JoTsnn28Lo4ss/d
m7Yzwrb16dxmkm1z57Yu2DafJ8md29y5rW/ntjJsmzu3+TxJNb0knG3rwbmt
PNvmzm3u3NaPc5tFtu0/L4my8yTV9ZKwx7b95SVRnm2bZ862uXNbh/Mk9efc
lmPb4li6P8Nr9oh939y57T3bjrFFMLPtWVnWuD15g72X+6mtZS45hmssZA4q
9nAnfMq8c5tFth0IXhLu3GaNbfN5kq58m7NtdZzbrLNtPTm3lWXb3LmtP+c2
m2ybO7f1wLbVnCfJndvqsG01vSTss23u3ObO7eBi23qdJ7lXV2xbP85t9tm2
8s5tT3w7vLoTDpQ123u53bFH7OHeW9jAnds+sG1fGbcendue2LY47txJe7mP
S6yjxJLH7tqyjWm2zedJ+sO5rSzbVtNLwiLb1txLooBzm022rU/nNvtsWz/z
JLlzWx22raaXJNjYNnduc+d2MM+T9J+XhM+T5GybPbatppdEebbNndt8nqSa
XpLAZ9vB7tyWY9s0kFevOJTtkT0u3pMWEGxbLee2FNv2lnEHgnPbHdu2xicw
K3UD/Gn1fpJPf/+6yJ5juLZCerjfOgB/TN6os3mSGxVl29y5rQ+2zedJ6m+e
5GxdsW3u3A7GeZJ6dW6zyLYDwbkdbGx7ma7YdiLTbNtvXhLF2TZ3bqvh3GaR
bQeEczsI2La/5kmq6SVhkW1r7yXhzm3t50k26Yhts+fc9sS3MY4aWuGv7x6V
ZY/Y532orIXPk/Shd5uE2RrKe0kYZNuyfPsTeyC7vmv3ZpJTf3k/0p5nuLZC
eri3bdX9PEl1vSSMs22dOreDbZ4kd27zeZKKs23u3A5Ktu0v5zbzbJs7t/k8
yWBj2yrOk9Src5tFth0IXhJl2DZ3bqsyT7KCbbbtPy9JkLFtvzm3GWTbunVu
K8u2WXFuy7Ftcbx9NEeWPb65P4Mp5zZL8yTlercp35Zi3IHq3Jbj2w5u7dQN
cO97+2zrKYXw1NZSaw/36v3wx5SNfJ6khl6SYGPbfJ4kd27zeZKcbetpnqSa
zm0W2bb/vCTKsm3u3NYL205gmm3r1bkdbGybz5PU3zxJNb0kLLJt7b0kM3du
s8m2uXM72OdJcue2Omx7Ol4SucBe7kfeD3Fhj9jffaTccw93sM6TdMe2pRi3
ftj29JzbUr3bznHXga9Jbj3wbhhZUyE93Lu36MBLwp3b2rNtPk/SlW8ry7bV
9ZKwx7b95SVRnm3rybmtLNtW07nNPtvWp3ObTbbNndt6YNv6nSeZpCO2rR/n
Nvtsmzu3uXObs209zJPcpiu2zZ3bwThPUq/ObRbYtjg+iCh0YY9vH83VnXOb
FbaNEWse0O08yWk5t92wbXtkrLf3ctt7uFM3Bg3bVtNLwiLb5s5t7tz2l5eE
Rbat5jxJ/3lJWJ8nqR/nNvtsmzu31WHb3LnN50mq6SUJfLYdCM7tYGPbenVu
s8i2A8G5zSbb9pdzm7Pt4HRuBxfb9pdz21u2TSPM1GHv5aY93McMbdy57YVz
W4pt0wiYeZJeOrc9x3q48+gme57dvW+zrpzbLLJtPk/SD2xbR14Sxdm2iG+z
yLa5c1t/8ySf0xPb5s7toGHb/ponqaZzm0W2rb2XhDu3WXJuBxvb1qtzO9jY
tr+8JOyzbYOibFuvzm0+TzJI2bZJCbatf+c2i2zbV74tZtcfnyyzs8f3wwrc
823m2baKzm0v2LYvjFufzm3f2bZ9nmTmerj3w72kn/uPGRu4c1vEt5lk29y5
rQu2zedJcuc2d27r27mtDNvmzm0+T1JNLwln23pwbivPtrlzmzu3WWTbfJ6k
K99Wdp6kul4S9ti2v7wkyrNt88zZNndu63CepD6d2/5i2zTCqzpg9toI0s+N
fd3cue0d35Zi294wbn2ybV/5tohtiwJ7uTG08JKwyLYDwUvCndussW0+T9KV
b3O2rQfndrCxbTXnSXLntv6c22yybe7c1gPbVnOeJHduq8O21fSSsMi2uXOb
O7f95SVhkW3rdZ7kXl2xbf04t9ln2/pwbrvj2+Jebgzu3J5+77Ynxs2Kc1sL
tm2PTFsEoHM72Nj2fSqybTW9JCyybc29JAo4t9lk2/p0brPPtv3l3J75PEnu
3FaHbavpJQk2ts2d29y5HczzJP3nJeHzJDnbZo9tq+klUZ5tc+c2nyepppck
8Nk2d277j22Le7kxWGTbajq3lWbbUoybeee2Imz7E/dsm6l5khsVZdt6dW7z
eZKcbbM+T3K2rtg2d24H4zxJvTq3WWTbgeDcDja2vUxXbDuRabbtNy9J0LFt
fTq3WWTbAeHcDgK27a95kmp6SVhk29p7SbhzW/t5kk06YtvB4dz2FHyepDJs
25lxM8221XBuq8S21Zwnqa6XhD22rb2XZObO7WCbJ8md23yepOJsmzu3g5Jt
+8u5zTzb5s5tPk8y2Ni2ivMk9ercZpFtB4KXhDu3WWPb0nybRbbtPy9JkLFt
vzm3GWTbunVuK8u2A9W5rRTfDth5ktNwbrsLvTu32WTb3Lkd7Gybz5Pkzm0+
T5KzbT05t/k8SbW8JMqybe7c1gvbTmCabevVuR1sbJvPk/SHl0RZtq2ml4RF
tq29l2Tmzm022bY+ndvss239zJPkzm112LaaXhIW2bZe50nOhG/HmQd1y7YV
cW4z5SXhzm3t2TafJ+nKt5Vl2+p6Sdhj2/7ykijPtvXk3FaWbavp3GaRbQeC
c5tNts2d23pg2/qdJ5mkI7atH+c2+2ybO7e5c5uzbT3Mk9ymK7bNndvBOE9S
r85tFtm2Nl6S4J0n6Y5t09BqniR3bqvDttX0krDItrlzmzu3/eUlYZFtqzlP
0n9eEtbnSerHuc0+2+bObXXYNndu83mSanpJAp9t83mS+mPbenVus8i2A8G5
zSbb9pdzm7Pt4HRuBxfb9pdzm322zZ3b7ti2J8bNndvaOLdZZNt+85IEM9vW
kZdEcbYt4tsssm3u3NbfPMnn9MS2uXM7aNi2v+ZJquncZpFta+8l4c5tlpzb
bLJtfc6TVNNLEmxs219eEvbZtkFRtq1X5zafJxmkbNukBNvWv3ObRbbtNy8J
82xbRee2wmxbjm9LMW52vCSss219OreZZNvcua0Lts3nSXLnNnduc+c2d27z
eZLqekk429aDc1t5ts2d29y5zSLb5vMkXfm2svMk1fWSsMe2/eUlUZ5t68m5
rSzbVtO5zT7b1qdzm0m2zZ3bfmHbzoybHbbtH+d2sLHtQPCScOc2a2ybz5N0
5ducbevBuR1sbPtlFdk2d27rz7nNJtvWp3M72Ni2mvMkuXNbHbatppeERbbN
ndvcue0vLwmLbFvNeZL+85KwPk9SP85t9tk2d26rw7aDw7ntiXGr5dxmkW0H
gnM72Nj2fSqybTW9JCyybc29JAo4t9lk2/p0brPPtv3l3J75PEnu3FaHbavp
JQk2ts2d29y5HczzJLlzW3/Obc629eElUZ5tc+c2nyepppck8Nk2d27rg237
a56kms5t1tg2Db86t4NunuRGRdm2Xp3bfJ4kZ9usz5OcrSu2rSfnNutsWz/z
JPXq3GaRbQeCczvY2PYyXbHtRKbZtt+8JEHHtvXp3GaRbQeEczsI2DafJ8md
29y5rRbbbtIR2+bObT5Pkh22HW8LPk/Sf/Mk1fWSsMe2tfeSzNy5HWzzJLlz
m8+TVHyeJHduByXb9pdzm3m2zZ3bfJ5ksLFtFedJ6tW5zSLbDgQvCXdus8a2
pfl2sM2TdOTbQca2derc5vMkuXObdec28/MkNXBuS7Ftawxp7txmk21z53aw
s20+T3IbLCw8DDuNqUKdnABz8/dpzrZnC7GyOAx2mtLgg9JoeCp/t9+8JHye
ZOCx7bdKjgt1bTbsMGbAwqJwzZ3bLwuxpjQGDlblwMbyRHitKJTPk2TCS6Is
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
KMu2uXPbd7bdNW7923l+4qp+50kq5Nyu6D5tX8PC2/7wkojZNg0ptr25KQ3k
tuGJs1A40gSzi7YyzLal+XbRSLP933H52iSsq431mm1/bIkjz6FbxqBFV85t
KX79XPEewqOzBuvI7Zn2bvddHCf/bUrtjJvPk9SSbWN8UBIFnT3d9l4/rIuR
ZYjnkf3bv/2bfR6ZtzUIbvv374cbbrgB/vd//5cEvuaePXusvR+kR3ASTG31
8FrhIQfGvasyjZxb0uuDcU0cj+W//uu/yM8f/vCH8Oc//5msl9Nr27HeQTby
n//5n/Z97r//fnvthIHuTKxPxPvcdddd5P7Jyaskzp+/IPy9Loan8vZy57bO
2TbGxrIETfO7uq0RlgufMTHjPmjK0TS/E2vL4fXCcObZtv+8JMqybX95SZYI
sdmQAV2iXm1/57e5rZm4v5eJGHdYdbGm+Z1mMREWzZ3b2ji3WWTb7vj2R0Ls
qywGQ2sT6c+j1zbgGg9yCmTZGJi/W7ZsIfmMLu6MjAyy5iPmHPQzSN3x6OpO
rquGLwx5fJ7kjLwkyrJtNb0kM5knic7tpFoz9I5a+4GUdDk09vdBhM3V7YuX
ZLexArIbGuDUuXP213LHHr11OZwVjrmkpQUOIev2gm+zybb16dz2B9vGOFld
B6Pj4/a8wQ3nXYuvQcDbiYmJVu7iQ32ybds2+Kd/+if4xS9+QZw9/+///T84
cOCAw3t1Dg4TFwnl2xhZlia4PDFhZzVdXV1kHR/nbqP3B+scXMfE2oPmM9Yn
2DPwve99jxw37nPPPfeQzyDdB2//+te/Jvtg3fXtb3+b7IP9BfR4cN/ylg44
GpDObWXZtju+fW5iirXJbc2jZ+0su7hzBPrOXLTfp9U8yf6zl8ixyTFub9h2
6+h5OHNZqL+vXrf/W/H2qYtXoGHorG6c2+b+s/bjrxVu+4dtO/JtDKmebWTY
njbkvR/VntSVc7v34imHf8PIxFmv+7bbzg87PLd4tEX3zm1k23Tb2Zw943mS
U4y7jc+TVMxLMj22bY3tcLAyk5zL4RwlvFYLv4uzs7PJuvh///d/k/M6XLvu
7Oz0qW8DXwfrb6wV8HUw7r33Xqiuts3HuXweYHIcTo/1C+e2x6d6uPN2Q25d
Jakp0BeLr4X1O/YT4rHQwLV/PI+kgdcIv/nmm4R/0H3WrFljX4fHwOvYVq1a
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
rLBtfzm3p8O2adBNjnGLndvIrvvOembcUnw72qknW8y3S7vG7GxXbvOOcbuy
beolEXtAUhsG3fLtGCnGbe6Hmv4pxi3FtmmYRf5sZ8aNryfFtmmcn7Ayacq4
xS5u8TxJd4xb3KuNnHvcaV4l9pKLWfdM2bY8417vlnFjPzfdxM4SZNZPFm23
821kwVub0mVdJWInCcYZW68z9mzj73TfdbWxhGmP2HwmMcLj+Dvl0tbf3bNt
acY95SU52lFs/ze9WRlK3CR0e6Z4l4OTpNfOjlscvCP0fuzZxl5uZN5SrhJv
GLeUh0TOVSLu3Rbza28Y9y4Hxj3lIkF2Tbeq8W7YWJfk0K9NNyvjnurXFjNu
vbNtNb0kM5kn+cfIo9Y+7cMRNi9JuAPfvtUWUoyb9tZJuQHxO3/58uXkmvOb
b76ZXMNYaTIJ9UubNCO5MgTnTrXDZxs+hGefng0VJWmu3/nE5yrPuMXXrWFN
X1lZCQ8++CD8+Mc/hnfffZf0UeHv6MfE64dfffVVaBb2GxnolK6JhJq+r6Ma
Vr+1FN5auRhO9Te4chLsc+21Mu6Acm4rzLafU4Rt+z5P8oHo43A3ZdvHXNm2
O8atVX4vjc+WZNxa5XdHrzPjDhy2rd95klbn9uwTyYRpE7YdKh9SjFur/HbX
x61Ffnf1IeNO5c5tFZ3bbLJtR769pjQHVhfkwNKsHJifkgtvJOfCAiHSbIwb
XQyzZs0ijBv7VRcvXuwwi9KZ4eFPZCHoibgsdgu769tzy7jV95KwyLb9Nk9S
RS+J1z4SQxl8UlQGy1MM8MpxAzwfXg5zI8vghchyeCG8zCfGrZbL4ZOESngp
3AAvRhjgtagKyDI1aOpy8MS4+TxJ7eZJrkwww+tR1cS3Lcm1ZRg3XZ+hjigp
xr1ixQrCkn/1q1/BrbfeCgaDEfp6OoX8lujjnhyBc2eEv6Fr34XHHn0QyouF
+uSbU24Yd60j4+5ot78vfp7wmGpqauAvf/kL3HTTTfDee++RY7v//vvJ8eAa
6Isvvmhj3B3Sf++vjQn/1lpYsWwhLFn0GowONrr2Bkgwbj5P0nu27Q3jFrNt
Gr4z7imWLcW4kxsG7HwbH6/uO213bmM4u0ooz3Zl3NJsm0bD0BQHbhu9IMu2
Y6QYt9mVcaNfW4pve9PHLce3pfq4jSKPt7hHW45xW5wYN3WSZDaOQcfYJcK3
6Yac21fntneMe709itwwbgzqLEEuLWbYyLxxQ86NvNudj1vMt53nR1IXN/Ji
6tmmfdvW+ZKf2lk6uka84dvuGDfya+oTMQnHITVrkjpJpBj3J5Z4+3+v7c1Z
Ls5tOhfSE+N2ZtfPFe+xPx7SUSLPtiXmSbpj3LRnW45x0zmX+BrimZKujDt3
moybO7d9Zds0bg8/5si3RX3bt7ph3Ph9j8wBr9elc2Wca1m8butnP/sZ4SS/
+93vyDliT1e7KyOx9f19+dlH8O///h/w/e//B7yzaolQA4w41gbISE51wwIJ
xo3HhMeD10tiPwnW0Ogc/PnPf06YCB5DbGwsrF27ltTf+Dte54Y1tiQjEd73
6vkeeOWl5+D7wjH92/e/DxHH8PPjXBeNQFtfE7wiybj969zm8yRd4/7IEx75
thTj1jK/35Rg3Frmd0cfZdxsO7eDaZ4kjSeik21eEs+M+6+EcVdont9vixj3
bBvj1jK/u/qtjFvvzm0W2bYenNtrSrPh7fxcWJKRS9j2/JQ8289cWGhj3B02
xoFcG3tUMTZu3CjLuMWsGz9bF84MWXNUyLfJcz1TnxsvGfelMz0B4dzm8yTl
2faavDJ4M6kcXooqh+fDDYRrv2gLK+Mu95pxq+ly2JBshFci8LgqHBi3Vi4H
OcbNonNbebbNnnNbHMvizPB6RDW8EVUN86M8cO7IGgi1Me7WVms9UlxcbM8r
cX4ja0ZvGTJunJ+K1w+UlZVBf68E48bc+WYcPv/0I7jhxpvg//vX78Ciha8L
952RZdxLomphoYhx9wjvh3/L8Zoy9Lbh9Ql4G+uQX/ziF+Q4sF7B+gSZN67z
PP7440KOd8DwgATjFj5jVy4NwEtzn4UbbrgJ/vVfvw0hR7A+OefKuMemGLfe
ndv+ZtvuGLdz77Y7xk1ZtivjdnVsOzNuZNld41ZXFLJd5N3iXm1nxn1ClnG7
59s0qA8cf6Y2DEmybXeMG+dJ0k1ubqTYx42vQe8bOW+d/+g8N1Iccl4SunWM
XfSRcUvPk6QzLC9MXJtx77Y1RkmI2TZl2J4Y9+GOQvvj4l5t+jycIenMt5Fp
jzjMltzoENS/jewaZ0jiZuXZjv5tfHxbk7XPGt0g3rBtyrKdGbfYQWKyMXax
Z8U6a9LRuS3FuLeLvNm0f1vMsU2numzv68q4e0UsWqpHm/pP6s/0e8W23TFu
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
t1CDDEN7dytsK8mGudlHfHZu+8q2MZ4SR8ZheD8nCbKrqqGtvQPOjPXA9ctD
UNvWKJwzpMPzwjGxx7b95dxWlm2r6SXRgm2/UhjqEC/mhsGy7ESIKC13yu82
2FtaAAtzjyvGtt3x7amIgFezT8AneVmQU2V2yG9LWxNsLs6FBXnH3XpJmGfb
3LmtINt25dviWFKQAO/nZpJ1QXF+dwj5fbisDN4p8N257SvbXlWSZA9k1stz
U+GLggLIq651yO+6tmbYJXzPvF2YGnhsW6fObcXZdpn/2DaNj22xxsa638ko
gGOlJjDV1RPW3WK7zgF7VXNycuDmm2+Gn/zkJ4R1R0dHk54+j4zb5vu5eKYX
KlrqYY+hDD4p5c5tvTu3lWHbUny7AjaL4ssSA6xOEW5nVEFuTfO0XQ7/f3t3
Hi1XWeZ7vP9Xb3fbtraAbWvb7YA4tJJJmQUElMwQBIwMEpKQBBwIKoQQDiQg
AkIgCUNCO4QpGkIUgmIYDIQkHEBpZZBLO2Cv7rZdve66a91e9651777nqaq3
zt679t5Vdep93vo9+/398awkdSqcGAOED5vv7/EXfpWs3z3at22n75v7Rht3
5cNPJ1/74Wiy8ZGfJ89NsOXwr//xL8lPfvHy2F/Xn801t+tv23Vobnux7Yxv
v9g+8eoNT419v12/TH707CvJi6+8mvznH5u/bn77r/+SPPDsy8mtu1/ouic5
qG3nb90TLyZ37n4x2fvCP4/9efjbsb+m/z5J/t9/Ji//7nfJttGXk9ufYnMb
qUsCvyfJ5jaEbRcZN5vbtmybe5Jsbg/i2zMzd3P2Hl6ffPnR7yd3j/1e//an
Hk/Ofvi7yaxBm9s9+Pac0tuQfObhO5Jrdv0o+fFzz439vv6xZP7D3zbf3Oae
ZBjbzt/8R76TrHj8geR7+/Yl39rzZLJs59bkjMf625Mc1Lbzt2DnvcmNTzya
/OS5nyUbn3oyOW8nSnMb3bbr2dzux7blzk/dsse3JWt27Uzu2/dMcueevclX
H30oOX/XgM3tPm07f+Lrtzz5ZPLIz55Pvj32Y7ro0R1RNrcRbRu9ud2Lb68s
uUvG/jz4wo8fSS7+8U+T+55+NvnFCy+0W93idmvXrm049+c///nk+eefbxj4
/yoz7tYu6v/9r39LXvz1y8m39u1NRnYjNLf92rZmlwTRtn11SYpsO+/b6bvq
iaeSyx7am9zy6M+T0T5aDqO/eiXZuOfZ5BtP7R3YttMnDe8rHx27Hc8k33/y
F8nLr/xzzy2HJ194Jbll93PJN4feJYlhT3L4ze1uz27nfTt9tz/9QvLdvS8m
jzz/35Mdz/4quX332I/h6bC2/Y+pu2N07Pa9PPb3h5eSPWN/Hv7gmVeS256U
LgmubWt2SRBt2+qeJJvbenuSvRyb2xhdEu5JanVJaNt92XbBzcpceNsuOuu2
rbknqdncRrTtfn37jNLz1NyegG8XW/awbZvNbQu2nfft8dtWeP67JNW2XX3x
2HaoLgm+bU+8ud3t2e3ye6Rh3V/6yWPJ1Y88mTz8zM9bO62vNEx79+7djedV
ZRdVGj+Fxt3aRX3t968m33/2meSqJ38KYNtsblu07fHb17iv796bXPHw08nd
u59PflnRcnjx179Ovr3nZ8nXn9jbtbndj20X3ZrHR5Nrf/LM2J8rLyav/vo3
pS2HZ3/1SrLpqZ8n1z45bNu21NxGt+3em9v92Hb1+Wlu92Pb7vnsquOeZOzN
bWzb3mrKtv99YNvux7fl0Gxbs0uCaNvD75KwuY3U3I7Ntst9e6K2zeZ2LHuS
w7Ht/prb3Wy7N9/Ga277t202t/3ZdrFvI9p2uC4J9yQt70kOYtvuLmvdpU/s
TL6y8/Fkw669yZOy0/rqq43nVF9q7f91GHerS/LHf/918pPnf5Zc9+QTJprb
/m17F7RtYzS3e7Xtcd9O39ef2Jd88/HR5IFnX8q0HH7zr79Pto7+U3LtE0+r
27a7G1p39U+fTjY98fNk9y9fzbQcXvrdb5N79v1Tcv0Atn1jdLZtc0+yl+Y2
bRuruY1v22xus7mtZ9vjxu23uY1o28G6JLRtE10S77ad8m3EPcl+fbsf2/bW
3O7i25i2fauabWs2txFtW7NLUu7b4ZrbdbFtu3uSW6Bte5AuiZ9ntyfW3Ma3
bZvNbUzbHv6eZO+2Xezbl+Ws+9JHHk/u3vt08twvftnul7z80ovJf/2P3zXb
EP/n38a+/vtk9OUXk/VPPZWseBLftoPtSSp2SfBte49X25a7Ln179iW3PfVs
8vDPX0q2P/NCcsOup5Nr9gze3O7Htpv3TOO+uXc0uXHPM8nd+55Pdv/ilWTr
6AvJ9bvGPrY34uY2pG0Pv7kdwrfD2zb3JDt8G962FZvbnm1bs0vi37bxmtsT
NW7E5jakbbO5bcK2Y9+TDGPbdrok+HuSbG7r2PbwmttIXRLuSWp1Sepv2/37
Nl5zG9G22dyeWHO7H9vO3yW7Hkmu2vVE8sPR55JfNlrdryT/+3++1thF/dWv
f5V8a+++ZOSJx7gnWavmtt6e5EC2XXjDs+2qC9El8W/blprbfm1bs7mNaNv9
+jZicxvSttncNmHbmnuSaM3tfo0b0bbr0CVhcxvNttnc7vTt+ts29yTt2fZ8
Rdtmc9tecxvTtm02t2OzbbvN7Xhte6Jdkl7OmfXKJx5N1u1+Kvnpz59P/vk3
v0q2P/dccvUTj7O5Ddglsdjc7t+290Vr25p7kmxu6+5JxmnbbG7r2Dab2zHu
Sfry7SLj5p6kdnPbr21rdkkQbXvoXRI2t6Ga24i2zea29ea2X9vW7JLEZtts
bttrbuPbNpvbdWtu9+vbvRxte/i2rdkl8W/bxb7dj22Ham734tvck0TrknBP
Ms7mNp5t292TfA3atoffJbHR3O7FuLs+uw2+J6nZJeGeJG3bh22H65Kg27al
5ja6bbO5zT1JNrct2PZSU7Ztqbnt17aXR23bNpvbiLZdi+Z2BLYdak8yNtse
fpekrrYdqLntxbZfNGTbbG5zT5K2XRfbdofTJcGz7VBdEv+2fY1f22Zz24ht
c0/SXnPbr21rdkkQbdvunuRmO7bN5naUe5KhuiSx7Ulqdkm82/ZubNueaJcE
6dltNrfRbJvN7U7frr9t16G5Hdue5B2Kts3mNrJtK+5JsrldC9suN+56NrcR
bZt7kmxuh+qSxLYnyea2veY29yS1uiTots3mto5ts7mt0dxGtO06NLdjs+0R
RdvW7JIg2vbwuyRsbiM1t/Ftm81te81tv7at2SVBtG2re5JsbuPuSfZn3Gxu
D9+2uSfZ6du0bQvN7dhse56ibWs2txFtuw7NbUzbttncjs22Nfck2dy2sif5
kCHbZnObzW3ati/bDtclQbdtS81tdNtmc5t7kmxuW7DtraZs+98Htu2Qvt00
br+2rdklQbTt4XdJ2NxGam7HZtuae5JsbnNPks1tK7bN5naMe5JWm9uIts09
SXu2rdkl8W/bu6Btm81t683tGGzb5p6kbnMbz7bt7km+asi22dxmcxvXtjuM
G9i2g3VJaNsmuiTebdtUc9uvbbO5rWPbms1tRNtmc9uGbdvdk9wCbdvD75LU
dU/SZnMb07Zt7klqdkkQbZt7koGb2x5s22pzO7Y9yYxvQ9o2m9vckwzUJYG3
bcXmtmfb1uyS+Lft+jW3K407cHMb0rbZ3DZh25p7kqG6JPh7kna6JPh7kmxu
s7kNbtvckyzw7frbdh2a24i2zeY2m9vckwzRJeGepIXmNqRtG92T1GxuI9p2
HZrbkLbN5rYJ29bck6xbc7ubcVvfk2Rz215zm3uSWl2S+ts29yTt2fZ8Rdtm
c5vN7Zib27HZtt3mdry2rdklQbTt4XdJ2NxGam7HZtuae5J1b27/5QFvS/7k
T/6k48658hruSZbY9kFTD2n8HF288c5C2754410dP59HzT01SHP7uu2Pdnzu
D0w7NHhz++i5pzU+99I1N5ba9rKxj+V/rJdt2sLmNoRt29mTRPFtOe5J9uvb
tG02txFt22ZzG9G22dy23tz2a9uaXZLYbJvNbXvNbXzbZnObe5K0bQu2rdkl
8W/bbG7HuSc53Oa2GLdc+rntOUu/2PDGw+fM455k6q7ZvjPjsU3jzj6vfc32
Rxof+8bYl86zF6+5vvHaQdMOUe+SyOdZsfGe9rdXbLy38dpbDnh7sOZ2+ueo
zLhPPf8rjY+Lc7vnto856fSWc38P1LZfg7bt4XdJ6r0nOZhx16e5zT1J2rYP
27ba3Ea0be5JsrnNPUk2ty3Z9lJTtm2pue3XtpdHZtt1aG4j2jab2zZsm3uS
bG7bsu3qLokz7nyT5MCpH2944+r7fxRwT/JFSNuW57RPXnZh4+fjzQf8dfvr
8rx2r83tg6Yd2rLvR4M3tz/Reqb60o33qtr20tRz2e7reeMWy77hBz9tfExM
O98laXj8297OPckIbNtqc7s/466PbYfqkvi37Wv82jab20ZsO1RzO7I9SdUu
iV/b1uySINq23T3JzXZsm83tKPckQ3VJYtuT1OySeLft3di2XYcuCZvbaLbN
5nanb9fftkM1t7X3JIuN+4Xk8DmndBi3WPaCK7/R0ZdYs/1HGdtes/3Hjdfn
LvtS8pWN3828V14rsu0j5p5S2EyRS1v21dsf7vj4VzfeOQHf7m9P8qi5n2lc
2rvzxl3V3JZWiXyfSzbeHby5fcqyixqfe8maG1Sb2585/yvJB6cd1vh63rjT
nW3XKCnqkrhnuW/4wS4be5JsbtO2C40bu7mNaNvck2RzO1SXJLY9STa37TW3
uSep1SVBt202t2O0bavNbUTbrkNzOzbbHlG0bc0uCaJtF/n2XxxwQKGvnTYy
wuZ2yb136tTGz9H5t20s9G15Pf/zecicuUGa26u2/bDjc79v6rRC39a07cPm
nNz43GdfeXWpY5995dc7fqxfvv1b3prbVXuSWeMef1bbPcedfm77iDmnJO8f
ez397LY819x07h+3jfuqlnG7556dY4tvy2sLVn8j89z2+1ufS/xaHPvc1dc2
vi3unfZt97p86cz6pGVfbry2cPV1lbZd5ufuTlp2Yc97knnj7mVP0hn3tdsf
VXx2u7i57Yy77DluZ9bSM6n6OZLGdq97ks640y2SfJPEOXb6XMNEeiUW9yTZ
3K7vnmTvxo1r29yTtN7ctmXbH7nkjMK/l7xuvzfVurk9iG0fcWPz9zR/dfCB
pbYtH8v/nJ6w+Yogtv2u6Yd37o2sXa5m20W+Pf3Oqxqf9/X7vbnStt8w9vH0
j3O/Se/P+LZP25551zWlv3eaNfYx7C7JcPYkT777m42fn/+2/1tKLXvSws90
/npbuTRIc/sTK5d1fO4pC08Nvif5p/v/VeNzn37PTaW2/f6Zx3b8WEPY9vx7
15f+upePIe1JIjW33c9RmW0ftqjz752fXrU8iG1PX3VRx+c+fPGZwbskf77/
fo3PvXjLP5Za9kdmfbrjx8rmNpvbdWlu+9qTFOOWS7/2qSXnNf58mTZ7Noxt
h+uSlNv2pfdtz/z1pGnc2WezL93WfI986V773JVrGq+9d+o09ea2fJ4v3nZH
+9vydXlNPDdUlyT9cySOXeTbs5Z+oePjzsUvbDi3jm13Gve4b89Z2rRo+bJb
l0S8Ou/WzrjTvu1OXhfTdk2Sq1rPZc9d9uWMZ8t75PunX3PunfdreZ+cjz3J
KtvOG/clG+/qybfl5P1vGfsxhrRtd86ufXZJymy7u3H/tvGsdzfjXrZmLfck
u/o2um3Xs7ldbdzhuiSItj38Lgmb20jN7Y+2jFu+TBu2+33RJzavrJVtD9rc
/tvph7V/bsaNO+vb8h65tGO/fr+/bHyfI2+8UPW57Q+eOyd566QDM6/Jtxv/
nLTinCDN7Q+fO7f9c5Q27vxz2vJxMW737Rl3Xt1y7oNUmtvOuN8948jMc9vy
+eT1Qy9dBGjbw2tup+26zLiPXLkk8zEx6/fNOLrxfSaPfX/NPckZN13WfKYm
9cy2+La8duDMY4I0t2fdPJL558hO424+s/3Xkz/U+Phn77m57dfOxbWb2864
D5r5yczrb5/84cbrx132RSPN7cFtuxff/tSqCzP/nxb5tlj2n+3/1sxrH5p1
QuP9Yt+ae5KnrW/+dSz9zLb4trz24VmfCmLbp6+/NvNzVGbc75z80fbHnVs7
F+/dtydu23875eDCf7fzicXnRGnbVb597Hnndvw8nTxyqbptT5k9s/TfwS24
ZZ26bf/FAft3fN5hdEnyxu08+91TpjR+TF/d+n02t8fuxCXNf6/9prGfq+lL
l5Uad9mJb8v3WbntB8H3JA+dc1LLvv9R1bblme20bZcZ9xX372j+PWvOyR1d
Eufxg+xJVtn2uHH/deGf+702ty9qtUjSDRJn3OLReeN2Hu2a21/duLn5+8jV
11Yat3tf0fPaR85t/l550OZ2N9t2N6/UuIv3JD/ReoZ78ZpvqjW3y/oj7hlu
+TKEbd+V65Fkjfu3lcZ9T6lxs7nN5raNq1Vzm7Ztokvi3bY9NrfLjPvjN1zQ
eP0d0w+B2pMcZnPb/d5ryoqzU8bdW5dEbFu+j9i3l+Z2H3uSn75zdeNzv3XS
+9Wb269vPZctzi1ff33KsNP399OPaLxPXDv93PaHz23+M8AhKxZ6b5LkjTtt
1w1v3//NkTe3x5sk4tbycyLOLV+veo67qEviXHwYe5Lux669J+meyxa/dl/P
GnfTt49d2fxrqXyZNuzZLR+X76u5J1lm3OLa8rpYu5Uuifae5N9M/ofGz4l4
9TtaX++nSyLvF/seRnNbPq98/on4dj97kv/Qei5b/No9o11k3DNXfbXxMfky
bdfz11/XeF2+r/aepDPu9DPbsy+/uPn34rGPWWtua+1JTpo9o/Fz8vlb1raf
23bmfex5C1X3JP9+yuTG5xnGnqR87uOXLMq4tft93kVbtwRtbjvjzvdI5Bnu
pnFvzdj2aVdk//2q3Nfu25px7SW33tL8+9IVVzQu/d7Pjn27yLQ/NmdO6b9z
SBv20ltv6/j4JfdtU21uS4tEWiOuN9KPcbvntuX7yve54LZNwZvbM5c2fy9w
1pVX9+/bfexJzhr7PAdO/VimQ1Jk3O5jF2a6JE2/PmzOvMbHrrj/oYGb28XX
fGZbjFvOfdv1tqVL0sue5Ff6Mu6X2sad72vnn+NOv0/MWmy77M8Ld/5su9i3
nWV3GnexbYtfi2vLez8w7dBK25aGSbf/fe5OWba867PbctImkffLc9wDN7d7
tO18c7tp3NlntfPGnX5WO2vcIM1tz7at2SXxb9tsbvdr3P10SSBtm81tE7at
uSfpq7ldZtzy/LYz7rxfS8ck/fe79HucbctrjX++feTm5C0Hvy/z/iLbPnbz
5aV/P33/gpkZ237n9EMzH5c/vnZz+/jNzX8+kC/FtJ1x99raPqH1/eX7DKO5
LZ9bvFm7uS2f55i1X218XT7fG0qMW15vdkmyze2ZdzZ/z/3304/03tweN+6j
OgxbfLvIuN8z9t70rzV5T96zP3pu858FZt/1jY73zxl7rci3y36tv2fGJzKe
ffC52R0c8dsQzW35XJ++aWXj61XGXfaMtnPmYexJvm3yBxuf+9R7blTdkxTb
nrrwtIx3N40729x2Hyt6Vlt8WW6wLkl1Yztv3Okuifv8edP+wNh707/u5D15
2z7usuZ/T3zSutXJxxfNz7xfXiuy7T9rPbueP7HltGkfsuhzmY+L34Zobsvn
kWe0xa17Me58l8Q58zD2JN85+SONz71wyybV5rbY9pGLz850SIqM232syLHl
WW457eZ2kXGLZX901omN18/Y8E02t8dOfi7EufNNkjcesH/jNPcks8Y9/Ob2
Z0ZWNX+vt2Sxxy5J9z3JMuN2z3GnfXvanNnJe6ZOyXi263mPO/e+ZMmtt47/
3mLq1Paz286x5eNp335Pq2998X3bGs9tf/aKKxvflvenffvTS5Y2Xhfndq+5
P+ayW2+vNO1ufibPaVfvSY43t3sx7nxz+5DWs9RFz3Fr70k64+72HLc8P131
cyTPXfe6J1ll3K5JIs9z5x17dqthcuHt3/bWJck3t9PGfXuuuy2f+6Lbv9Ph
23NaTe38VRv3S+3LG/emVI87391OP7PtjLtqX7LKt7v9upf+SNWz2+nntceN
++5S25aTjzeNuahR4mdPsuyu3/5Y+39br7bdtcd90uldbbvTuNdW7krmeyTO
uFdt+v7wbZt7kmxu93kxdUnY3Eazbbw9yW7PcR+4YEbbr4/e3GwDHHLDF9qv
ffSS5n8jLaadfnb7HSmHPnjsPc615duv2+8vM89tH3bDFxuvi127Z7Vf12p7
iH2nn9eW1+XSz267P2aVbR+0YFbX32P0sycp7+/PuJv/rCCt7GHsScrnzj/H
nbftj61Y0PXnSDrbve5JvqHEuF2TRBy7qEkiH5N+iO89yVkVxu0+Z969P3ru
yW3LFsOW9+Wd2xl348+jsa+757blfQ1HSdn2nLuav3fef9IH2s9ry9fltRPW
rsj4tns97djOjqt8+1M3Xdr1/0d5T697kkXG3a2x7b6Pry5Jt2e3i4y7yrZP
vWdt15+jo1de0POe5Lhx39yxJ5l27Py5honmnqQzbnHrfHNbXpdmSdq35ccq
Zu08+4x7m/8NS9O5x5/VdsYt98GZx7Ud2zVQzhz7fmnfltfEuJ1jy/dp/Lq/
7MsZ33bPUqef3XZ2XOXa89Zd1fX/01PWXd3znmSVcZc1t+XHWfQct9aeZLpL
4oy7yrYXbrmj68/RjFVf6XlPssy4yxzb3d+2Gibae5Jp404/ry2tksZfmxvG
PW7a8u38z8eZY6+lTXvZ95rPDR69eMHYx27I/jVj7LUizz541vTSn++0Y1/w
vc0dHz/7lrWqze0vfL/539383ZRJHV2SMuP22dweN26M5naRcftqbheds+xO
496bfGrJkubfr8e+7NYlOb31XLc8r+1aJM64xa7Tln3xfc2/9otL518Tv057
tnxf6YK4b8uz2vn3pf1a3u/rue0y2+7FuMv2JOX9bzrgbQPtSfbSJSlqbju7
9tklKbPtbsYtz2zLs97ysaJntZ1xf37s+2nYtjtnzmnjXnP/jxqfu7EvmXp2
21m0PLu9sefnuF9qd0nyz2enn+N+c66Zkm+SOOMuapVoNLeLbLubcacNO/1c
dojmdv7c5xbr1uqSFNm2a5KIbcvnLzLuccfu3JV0/h1zczu2Pcm6+Ha1cdfH
to+ibbO5nfLtqu3IIuMWu27/824PTRJ5rlsu3R9xxp32bTl5JlteF9d2nu2e
y073SJx7T1pxVtu3D2p9309uHslY9qRWO0S+9NHcrvJtZ9by+XoxbufWH1zQ
/O9Np644x7ttd/PtaS27/tC5c7w1t6ts+7Quxi3PeTvjLnpWu+HIY9/Pl207
sy4zbtfjPm7txV27JO45bfFu1yRxxp32bfHswy9d3HhdvnTGfXDrvXPvurZt
3HPvav7eWZ7Zdr59+KXntSx6Rcay5duN9y48xVuXpKpBkjfuXjYkT7xpZePH
KF3ukLYtJ89uy+cW5/axJ9mLb6f3JNO9bXfOh6uM+7P3rPNu2+4+lzHucct2
Fj133equXRL3XLd4d964074tJ89wy+uHLJrf7pIcf1lzp/fkdWsynu2+v/v2
Ce33XVXo14cu+pyXPckq264y7qo9yc+sa1rCh2edMHBzux/bbtp187+hEef2
1dzu5ttFxp12bHm9m3Gft+VbqnuSzrjzTRL3HPfS73237dvi3vLjTXv2u1rf
P+3cy1IO/cax9zvHFt+W1+ZcfknGt90f4/yx7yeOPffy5l/DJ82anvFt97p8
6Z7bPqbVCzlpZEWlZ7/xgP0q/72FPKNdtScpvt34825kZduxpVGSf01jT9IZ
90Rse8rs6mcXpLXd757k1NYfc9Et69W6JNfkntV2xl30v6HX5rbrkoiH5437
02Ov5ZskWft+euy9zfaIPLtdZdzu2W55hjvv1+69g+xJ9mLbVcZdZtvpZ7jP
uHKNWnO7bE/SPcMtX/q17XLfLjLudHO7F+M+p23cE29uF9m28+wO4249s+08
e832H7e7JONu/WIX4364/d7089pFxu2e2Rbrdl2SspP3HTT1kCDN7eItyWaX
ZN6y5R3GnX9O2/31Q6w7pG2nNyZXbrxXtbldZNvuyoxbHFtsWz4mnp1vbjd+
TzrtMCXbfg3atoffJeGepH/jxmtuc0+Stu3Dtrv5dtq485d+frtbc9u1SIqM
+5jNqzJdkkmt574nXXJW27Pl+zef7R7vbR92Y6dxu/fln9cW82783mPBLDXb
zje3uxl32q7dM9yyO9ndt/3ZdvoZbjk/tl3s22U9kqxxN5skPRn3/m8e2Lbz
zW1n3Plzz2/30tx2nn382kvanp19bfyZbfm2s2/n2dIiaZhJqrmdN26x6/e2
3lfUJJHX5ePatp037l58O90pOeXuG9Sa22XnnuGecfPlQWzbXb/G7Qy71Lg9
2Lbrkjjjzl/++e2q5rZrkYhfu9728S3jli/Txn1m67nvpn03m9uuPXLWvbdU
GPf2sa8f33ityLAb7511vLcuSbfGdt64y2w7/Qx3wwS2bJx4l6RP284/w336
+m8Ese1O4/5Wh2P3btz+bbvKuF2PW5y7W5fkzNZz3UcvPqfdJXHGnfZtd/K6
mLb79vmt9x6zeEHGs+U98v3Trzn3LvJrOZ/Pbo9kmiTN57bbbt96dlu+nm5x
+7Xt8S6JM+78Xbj13iDPbRc9wy3OrWXbRb6dfY4729uWLkkve5LOs51xX9ez
cTf3JIuez5YTs04bt+uUlF2Rcffb3O5m22XGXeXb4tqN3ztNnVZp25dt+2Hl
/770zVx6flfblpM2ibxfnuMOZdt545bnsfPN7d6N259tp307Y9y5JsmC1d/o
sGv3rHX+ee3s+17qy7jdc9xFl39m+6RlzX8HL1+mbVs2J+V8NreLbNtd2riL
NiTf0vp5an588D3Jfnxbut/yuZesuTGgbf+m41ntvHGXPa+dbpK4TveNP3iC
e5IGbDvW5nZvxo1n26G6JP5t+xq/ts3mtrptdz7HfWZHb1vaJNV7kjdlettF
xn3s5lWZLonYdt64089xO88W2x437qZlv67VLym7YuP2a9vdjLvIr1/f+nEf
dePyyme3pWPS6++te7FtOemTyPulQ6Jh22W+nTXubHP72B6N25dtVz3H/e7W
c9mHXbqopz3JiRj3wSnjHn+O+7r2M9vSKHHG7Rz7gFanpOzyxt1Pc7tX256I
ccuz2/Ljm7zwM5WmfdTKZT3/Wp9x86quti03ZWFzO/7Amcd4a2734tvn9WHc
+ee0C43bk20vaxt305zTz3G757KPu+yLPe1Jpo37gq7G3fzrY/Hz2ePPcZ/V
ft/x7S6J65SUXda4dWw7b9xVz267k2e35b2HLzqz0rZPXHVRz7/uT1t/TVfb
ljticfPvlf8w61Pemtu9Xr/G7Zok48b97VLfHsS2nWc7485f+vntqta265JI
a8Q1t51by2t54xa3Ttv3WRua/12Jeza7zLjd+4qe1540u9k50bLt9DnblnON
Eh/N7a57krlnt/+i9eM4ZeQyleZ2+vLG3o9v+7Bt1yVpG3fquW3x7YYX3XpL
h2u7jkn+PpXy7HLjfrrxuhh3/plteT3/zHb62e4TW8a94r77J7Qn2e2ve+LW
3Ww7b9wX3Lax1LblZF9S3ieNEu3mdv4u3/ZA+39br77dS4+7F9+W+3zGuLOO
XbQr6ZokzriX3/4dFdsuNu7snqR8fvlY+rnt/M+Fc27ZjHRdkqv7MG73fLa4
dVGbJP/61zbe2fFjKPNtH10S59pHzT218teE8223MVl24t8ati23srUxWXUa
XZJ8g6Tsbsz0t3/Xdu72z83b3s7m9pCa27Rtn8at3yVBtG3uScbZ3C67dE87
bdyuu/3mg99baNtlf/9IG/c7M8Y93iApMm7XJZEWSWd3e33GuPP7kr3uSfbe
46627SrjLvJteU/jn5tyjRKN5nb+/m76EY3PLY2SXnz74z31uK/uattFxp02
7NJdydZz2/Ixebbal22XGbd7Ztt1s4tMe/9WxyR/3YxbPPuEAuN2z2yntyWL
utti3Nl9yd6bJL30uN2eZNWVtbXLTlxb/tjvm3GM2p5k2R298vzG537b5A/1
9Oz2afeU/3XM3TErL+hq2+f1YNyux13UIsn0uD08u70sc03PLjJu192W14ts
23VM8ldt3M1ntouM2z2znd6WdM9sn3XvrW23lo9335cstm1pbXf7/1TeMzHj
LrZtucMWNf8eKs6t0dyu6mtPX9X8Z7pso6Tcthf10OOeueqrPfm2mHWVcad7
3PnmtjNuH83tItvOG3e+ty2v97InuazAs3sx7nxfO/8cd/59Ytvd/n8Z1LZH
KmzbdUmca0ufxH3eeWNfL7PttIlXnThyv3uS8v2KWiO+n93ON7edr586crla
lyRt2+7Sxu0cW/YjG79fyO1LOosWw67qkhQb99OFxu2e435TrpnifNu5tTPu
qm1Jn83tqpuRMe5O25aTbUn3v0WruV3V127/+bvtgQk9u93vc9v55naVcad3
JfPN7cNb/u2juV1k2+kuSZFv934vdTS3ezln1uLT8r+zqE0iFu7aJKGb20Vb
kkVNkuIL1yXpdU9S07bLLv/sdrpJMsieJJvb9prbw7bncMZdj+Y29yS1uiT1
t23n22XGLScbkvK67Es62z70hubvh8SZ056df457Vsa4L680bvFseW/+Ge28
bzvjdq/3atu9P7vdm20XGXdZf8Q9ly0tbr/N7WrblhPXls8tzq3Z3C6/O9rG
XfasdntXMtXcntly6I+ce5I32y4y7nSX5LBWN1usOu3b7tfieGO72LPzr51Z
aNxNz5ZnteW1N7R6Hu7yPZIDMu49kSbJxLokRc3tbsYtPZKjVjb/ufdtkz6o
3tzO3r2NLol8bvkxTqRLMpHntvNXZtwdjp07cWb5uIZtVxm3WLY8wy2vj+9L
Np/Zdr8m3bfFrw/p+hz3/e07q+I57j9rubq7s7fcmvFr9xx3qOZ21Z7kuHGX
+/anVzX/m+F3TP6I6p5k0UmXRD73n+//1oG6JP08t51vblcZ97hjd+5Jin3L
x311SfK2XWbcrrstr825/OIO057T6pjkb6LG7Z7ZlvcXdbedVTvj7nVfMm/X
3ax58uwZpb59zi03pd6TfVbbff8vff/ugZrbE9mTdNZcZdi99Lh7te30uc8d
wrbdc9vOuPPPa4tvy49FvNt5tnx72pw57W+XeXb2tafbd32BcbtntsW60892
5/1ant9u/H1j7POHaG4XnXtme9y4N5Uat/u1cNm2H6juSRadex5bWiUae5JV
tn1LD8Ytti0fE8/ON7fl9QOnftxLcxvJtvPNbTFsseyq/nZY2y72bUTb7te3
fTe3+7PtYt+Ozba3mrJtNrf7Peu2PfwuCZvbSM3tidp2N+M+pOXZYt2uSeL2
Il1jO2/cs1Ld7a7Gnepsi1vL+5vfXl967lnsw2/8UpDmdi/GXebbbmNSnFtz
TzJ/8rz2x1rPY0unZBi27a7KuN3O48y7vp5pbotty+ufXPs1b7adN+73tI07
69nyPLf79nEtn27uRfZm3GLaZxYa9ymZZ7blijrb6TtiZXNz8oiVS4I0t8t8
u8q43Zbk9NbGpLwnnG03ffvUe9a2/xlWu7ldZNtVxu0c+2MLm/895LErv5Dx
7dnrrmi8/rFFp6vYdpFx55/ZltfF2Z1nu73I43L9kWrj/nLDtjsbJMelntk+
rvF8tmuSlBn2CauaFi5fhmhul/m2+PU7Wo3rMt8+tbUxKf+7NPcki85tTMpp
N7eLbLsX4z5qcXMLetaqr2V8+3Prr2+8ftTiz6vZtvPsvHE7y5bX3pjblzy4
tUMpm5ErKzy7zLiLns++INXuTttrvknijLvbtqTPLok7sW353GLd+R7JJ1vP
d59zy80DdUkmsifZi3EP8tx21Z7ku6c0Xfmird/z3CXptG333HaZcZ/e6nKn
tyTdPqWz7Ivvu6/9a6vYuJe2bfv6EuN2z3EX3fwrrsw4tvh2/nVx7feO/fHk
OW8t2842t59LZiw9v9K439Qy5i+MfVxzT7Lo3jd1WuNzn3Xl1erN7SLbdo5d
Zdzi2u557XST5MDW3uOV9z/ktUuCZNv557jzTRKx7ca/W9p4Z9A9yYn59uDN
bXzb7u7b/dh2uW+zuc3mtt2D6pLQtk10SbzbduDmdpFtdzPumakut7Psg1vv
FevOd7fHjTvb2O7FuN+Z+mOkL/8st1i2+1jat4/b3LQi+VLbtt1z21XGLV2S
9McLfduzbTvfPnpts/f6+v3erLonWWXbzrFLjbvxvHbz993pJom4trz27hlH
evdtMe3ZGePONkne0+pyi23Lt+fc1XxGUlolzrcPbz3vnTfug0uNe7yznX+O
u+jyXRK33XjS3ddnbLvxz7s3Xapu22XGvSB1sivpfvzae5Jp23bnPvdp96xV
a25X2XaRcZc9ry0fTzdJnC/7aG6X+XY34/7AzOPadi3GfUbrvdIqyVt21rjv
b9h249f92Jdf6GLc7jnuoss/y+22G5uvj9u2vCatEV3bHu+SlBm3OPaCLRvb
P/7Bn93u3bbdtf+9zpY7hmLbVcad7pL8ect208Yt35bXfTW3i2w7b9z557Wd
Z8umpHtNHPpdjYbJI5WenX+tqkHintkW65ZvV9m1vO9dUyYFs+3uxr1r7GMz
O4x7ws3tHm1bbvnWLY3PK89ph7Ttoue4fTa3i2z72i7G7Z7bbn5sX+ZZ7vQ5
5x437qeTJbfe1jbu67sYt3tN3pv27Pmt57tPLHk9fScuWaZu24fMmVv69xI5
tyd5ZmtjsuyabW4/ze2yjcmq07Rt1yApu6Zdd3ZJ3Mnz53i2PXiXpOzclmT+
Jm7bE9+TDG3bwbok8Lat2Nz2bNuaXRLatu2DsG02t03YtuaeZMjmdtXljTu9
J+me2xbbdqbtXnMnPu1eS1t2kXF3bkmuyzyfXdQmyXu2nHtuPH39+Xb/tn1C
y9HLLt0jeX2XbcxpK87xbtvu3MZk2X343Lmen93O2nbV5270twu6JOk79NKF
3m37c23jbrp1kXG757blY8603WakO+mLuNeOT3l2p3F3bknKt9PPZ59093WF
bRLn2e5kWzL/c+TTt8tcu+r/R9mVdH4t7e2q9x449nFfze38juSUhadVfm5p
gGh0Sdy5BknRFfW3/zTX6Tho5idVbds1Sc4oNO7sc9ti3a5L4l5zJ30R99pJ
69a0myQn9GTczee2T153VeO1eWNfpj1bNiSrXk9fL749qG07Xy+6dI/EbUyW
/nV27OMatp3emCy7d07+qBfbLvNt1yApuoZdF3RJ0u8RF/fZ3C7zbbl3lRj3
ma0ut1i325J07xXDdp7tfsxFxj1p7LW0b1c9x110+We2jznv3Mbr8mV2c3JG
43zbtuuSSIfE/ZjSvi2uLa/93ZTJXvck0yebkkXNbffj0Wpuy8kz2vI5Ft2y
IfP61Fb/RHrcXm17b7Ftl9++wruu62WbJL3ex1rPZhf1R6TRLR4+jOb22tyz
21UXek+y6kI2t9PPbVddvrnd7bSa2yi2nT/rzW1I2zba3OaepL89STa3h2/c
iF0SNrfRbNtmc7uXm5m5m7veeJdkXddzz2t33vrkk5ub/x2mOHfeuCevaP63
zp1tkjDN7W57kmUXYk8yb9sTa5L4s+2ul7LtiWxJ9mvbWd/u3JLM3xml952O
O7P0vlt4acuWX8/i1vk2iduJTLdJQja3u92CzPnbk+y1uV10oZvbZVf03HbH
Ke1JdvPtoj3Jorugp7s/0ySpvu2ZLonYsbS2820SeVa78e+2Fn1uoCbJRJvb
3fYk089ua+xJ9uvb/XVJ/Np22eX3JAtPYU+yyrZdl6TMuN1z282PZXvaaYc+
a8MNjdfSxn1BH8YtV+TWrk2Sf1163HkL1/DtfJNErqjpLa0SzeZ2urudvl6e
3/bx3PYJSxZ3fG65r2z9nkpzuzffnqht75uQbbvmthi2WHaRccvPiTNuRNsu
92395vbwbbu7b6PYdug9SVzbZnNbx7bZ3I5xT5K+XW7ciLZ9FG2bzW2PzW0d
2+7u21W27e6wG5v/HfykFWd3dEk6+9uDN7cRbXsize1ebVu7uY1t2919ux/b
Lvft7rYtJ89uN54JXHhKR5dEbDtt3LRtP7bts7k9Id+ukW335ttZ23bXeK57
1vEdxj2v9Xx307it2HaY5vbEbVunS6Jj24M3t4tsu/oeaV9+M7Lb5U276prP
YE9v/Pouao+88YD9Ctsk/TRJfNi2e2475J5kukvS7/nukoTYkxzk2e1+bLtf
3y5qbOebJGLb8vqyW283ZNthmtsTtW3fze3efHuitm13T9KnbdttbuPZtt09
ydegbdtql4S2rWPc2LbN5nbstu27S1Lu2+Ft2517jltudupZ7cNb9i1dktB7
kv3a9smmbNtvc1vTtgfpkoSx7WLfrtqSbP936qkmiXxdXpPmdeg9SR+2rd3c
jtW2l3qx7WLf9m/b9xfadr6xnW+SuD8fQu9J+rTt5ZHZdk++DWnbO4PZtjsx
bLHsXvvbWrZd7tsTte3Bm9tWbXsie5LItp0+8e2i59r7eXbbz56knS4Jvm13
923E5ja+bbO5zT1J2jab21hXh+a2f9u+xq9ts7ltxLa7+3Y/tl3u2522nb+i
31fLc9x2bDtUl8SvbWt2SRBtu9y3B7ftbr7tntt2W5Lpk35Jr74Nb9sem9vV
vj34nqRml8SPbffW3Pb77PbEbLvMt91JqyT/677ZLwll2919e8K27bm5HapL
4t22dw9u273uSU7Etvv17X5su2hT0j3HnW+SiG3L69ImGY5tF/u2RnN7UNv2
1SXRs+3ue5Ioze0q3y66iXdJ6m/bobok8LY96te2w3VJ/No2m9vIts3mtnZz
m7aNcZZtm3uSbG7bsu3uvp3fk2Rzm83tsLbtv7ldZttFh9ncRrdtNrct2Xbn
xdXcRrTtOjS3kW27aEsyf4N1SWjbg9j28Lskw2lu69u2zeY2om2zuW29ue3X
tjW7JIi2rbknyea2veb2sO3YyqF0SbgnqdUlqb9tW2tu07bzvu3XtjWb24i2
jdzc7tW3MW3bZnM7NttGbW7TtofTJcG37Xo3tydybG7TtofdJenu2/W37XBd
EnTbZnObe5Jsbluw7a2mbJvNbSTjZnObzW3uSeradrlvYze3uScZq23339we
/NltvOa2f9tmc9ufbYdqbk/Utifu2yjNbUTbDtcloW37sm3NLol/294Fbdts
bmvZdqjmNvckUfckdZvbeLZtd0/yVUO2zeY2m9u07WEY94S7JLRtE10S77Zt
qrnt17YHaW738+w2im2X+rZn29ZsbiPadt2b23Wxbbt7klugbdtqlwTftm02
tzFtW29P0mpzG9G2uSfJ5rYt2zba3Ia0bZt7kppdEu5JKnVJ4G1bsbnt2bY1
uyS07biPzW02t33YNpvbOrat2SXB35Nkc5vNbXDb5p5kgW/X37ZDdUlis202
t+vR3MaybTa3O33bg23vxbbtOjS3IW07WHPbr21rNrcRbbsOzW1I2zba3Oae
pL89STa37Ryb2zab27HtSYbrknBPkraNZ9vzTdk2m9tsbttpbiPaNpvbtO1Q
XRJE2x5+l4TNbaTmdmy2bbW5zT3JWG2bzW0d22ZzO8Y9Sfq2vwvf3KZts7mN
aNs2m9uIts3mtvXmtl/b1uySxGbbbG5b2ZPcbsi22dzmniRt24Jta3ZJ/Nu2
peY2um2zua3d3Ea0bTa3bdi23T3J16Bt22qXhLaNc9yT5J5kKNu22txGtO1w
XRJ022Zzm3uSbG5bsO2lXmw71J6kpea2X9teHplth2pu+7ftndC2zea2Ddvm
nqS9PUnNLgm+bdtsbuPbNpvb3JOkbbO5Xa9D6JL4t+1r/No2m9tGbNtmcxvT
tkN1SfzatmaXBNG27e5JbrZj22xuR7knyea2vea2d9vePbhtW92TZHPbXnM7
tj3JcF2SyPYkFbsk8LY96te2w3VJ0G2bzW0Te5JsbtO2a3SYzW3uScbY3Ma3
bTa32dxGt23uSXb6Nrpts7kdo21bbW4j2nYdmtux2fYIbZvNbTa3VZrbiLbN
5rb15rZf29bskiDatuaeJJvb3JPk9Wbc3JNE65LU37br0NyOzbbnKdq2ZnMb
0bbr0NzGtG2bze3YbNtuczsu2w7VJcG3bTa32dymbfuybTa3bexJrjdl22xu
c0+SzW0Ltr3Vi22H2pNkc9vasbmNats2m9ux2bbV5jb3JGO1bTa3dWybzW1/
th2quT34nqTV5jaibYfrktC2LTS3/dv2LmjbZnObzW1827a5J6nb3Mazbbt7
kq8asm02t9ncpm2j35G0bRXb1uySeLdtU81tv7bN5jaybXNP0nZzG8+27e5J
boG2batdEnzbttncxrRtvT1Jq81tRNvmniSb27Zs22hzG9K2be5JanZJuCep
1CWBt23F5rZn29bsktC2eYMcm9t2bFtzT5LNbR3b1uyS4O9JsrnN5ja4bXNP
ssC362/b3JO0tyfJ5ra95jb3JLW6JB5sey+2bdehuQ1p28Ga235tW7O5jWjb
dWhuQ9q20eY29yStNLdp20jH5vZwuiSx7UmG65JwT5K2jWfb803ZNpvbbG7b
aW4j2jab27TtUF0SRNsefpeEzW2k5nZstm21uc09yVhtm81tHdtmc9ufbYdq
bg++J0nfxrn+fZu2HWdzG922bTa3EW2bzW3rzW2/tq3ZJYnNttnctrInud2Q
bbO5zT1J2rYF29bskvi3bUvNbXTbZnNbu7mNaNtsbtuwbbt7kq9B27bVLglt
uz7H5jZtG69LUn/bDtclQbdtNre5J8nmtgXbXurFtkPtSVpqbvu17eWR2Xao
5rZ/294Jbdtsbtuwbe5J2tuT1OyS4Nu2zeY2vm2zuc09Sdo2m9u8Xox7uLZ9
jV/bZnPbiG3bbG5j2naoLolf29bskiDatt09yc12bNtQc9u7be/ybdtsbrO5
bci2dw9u21b3JNncttfcjm1PMlyXJLI9ScUuCbxtj/q17XBdEnTbZnPbxJ4k
m9u0bV6pcXNPEs227TS38W2bzW02t9Ftm3uSnb6Nbttsbsdo21ab24i2XYfm
dmy2PULbZnObzW2V5jaibbO5bb257de2NbskiLatuSfJ5raVPck/0LaNHfck
tbsk9bdt7knas+15irat2dxGtO06NLcxbdtmczs227bb3I7LtkN1SfBtm81t
Nrdp275sm81tG3uS603ZNpvb3JNkc9uCbW/1Ytuh9iTZ3I7tht8lYXMbqbmN
adtsbnNPkrbN5rambbO57c+2QzW3B9+TtNrcRrTtcF0S2raF5rZ/294Fbdts
brO5jW/bNvckdZvbeLZtd0/yVUO2zeY2m9u07bofbTt8l8S7bZtqbvu1bTa3
kW2be5K2m9t4tm13T1KxuQ2+J6nZJcG3bZvNbUzb1tuTtNrcRrRt7kmyuW3L
to02tyFt2+aepGaXhHuSSl0SeNtWbG57tm3NLgltmzdc4x5ec5t7kv5sm81t
HdvW7JLg70myuc3mNrhtG9qTDNcl4Z4kbTuu5rZ/22Zzm3uSml0SD7a9F9u2
69DchrTtYM1tv7at2dxGtO06NLchbdtoc5t7klaa27TtOh2b29yTxOqSsLlN
28az7fmmbJvNbTa37TS3EW2bzW0bth1qT1KzS4Jo28PvkrC5jdTcjs22rTa3
uScZq22zua1j22xu+7PtUM3twfck6dv1Odp2LM1tdNu22dxGtG02t603t2nb
qLbN5raVPcnthmybzW3uSdK2Ldi2ZpfEv21bam6j2zab29yTZHMb1bbt7km+
Bm3bVrsktG1ekXHH1tyOw7btN7cRbTtclwTdttnc5p4km9sWbFuzuY1o21b3
JJdHZtuhmtv+bXsntG2zuW3DtrknaW9PUrNLgmjbdWhu49s2m9vck6Rts7nN
823c/m2bze049yRtNrcxbTtUl8SvbWt2SRBt2+6e5GY7tm2oue3dtnf5tm02
t9ncNmTbqs1t7D1JNrftNbdj25MM1yWJbE9SsUsCb9ujfm07XJcE3bbZ3Dax
J8nmNm2b5+20bDtUlwTftu00t/Ftm81tNrfRbZt7kp2+jW7bbG7HaNtWm9uI
tl2H5nZstj1C22ZzG962bTa3EW2bzW3rzW2/tq3ZJUG0bc09STa3rexJ/oG2
Hdmxud3Nt+tv29yTtGfb8xRtW7O5jWjbbG6zuR2zbdttbsdl26G6JPi2zeY2
m9u0bV97kmxu29iTXG/Kttnc5p4km9sWbHurF9sOtSfJ5jZvosbN5nYdmtuY
ts3mNvckadtsbmvaNpvb/mybzW3uSWp2SWjbFprb/m17F7Rts7nN5ja+bYfq
kvi1bd3mNp5t292TfNWQbdtpbuPbNpvbvHpeXW1bs0uCaNtW9yTZ3Ea2be5J
2m5u49m23T1JxeY2+J6kZpcE0bbr0NzGtG29PUmrzW1E2+aeJJvbtmzbaHMb
0rZt7klqdkm4J6nUJYG3bcXmtmfb1uyS0LZ5lo97khh7kmxu69i2ZpcEf0+S
zW02t8Ft29CeZLguCfckadtxNbf92zab29yT1OySeLDtvdi2zT1Je3uSGxRt
W7O5jWjbdWhuQ9q20eY29yStNLdp27zxi7W5HdueJJvb9prbtG2tLgm6bbO5
zea2neY2om2zuW3DtkPtSWp2SRBte/hdEja3kZrbmLbN5jb3JGnbbG5r2jab
2/5sO1Rze/A9Sfo2z11stm23S4Ju2zab24i2zea29eY2bRvVttnctrInud2Q
bbO5zT1J2rYF29bskvi3bUvNbXTbZnObe5JsbqPatt09SUvNbb+2rdkloW3z
fJ3l5nYcth2mSxKbbYfrkqDbNpvb3JNkc9uCbWs2txFtO1yXxK9tL4/MtkM1
t/3b9k5o27ba3I7NtrknaW9PUrNLgmjbdWhu49s2m9sx7kmGam5zT5K2zev/
2NwO19xGtO06NLcxbTtUl8SvbWt2SRBt2+6e5GY7tm2oue3dtnf5tm02t9nc
NmTbqs1t7D1JNrftNbdj25Nkc9tecxvetkf92na4Lgm6bbO5bWJPks1t2jYP
5obdJcG3bTvNbXzbZnObzW102+aeZKdvo9u2peY2bTv25jaibdehuR2bbY/Q
ttnchrdtm81tRNtmc9t6c5u2jbonyea2lT3JP9C2eX1d/Zvb9bdt7knas+15
irat2dxGtG02t9ncxrdtNrdjt+1QXRJ822Zzm81t2ravPUk2t23sSa43Zdts
bnNPks1tC7at2dxGtG36Nq+fY3Mbq7mNadtsbnNPkrbN5rambbO57c+22dzm
nqRml4S2baG57d+22dxmc9tOcxvTtkN1Sfzatm5zG8+27e5JvmrItu00t/Ft
m81tHq/oUG1bs0uCaNvhuiR+bZvNbWTb5p6kdnM7Ntu2uyep2NwG35PU7JIg
2nYdmtuYtq23J2m1uY1o25p7kqtp2+aa2/i2bbS5DWnbNvckNbsk3JNU6pLA
27Zic9uzbWt2SWjbvJiPzW0/e5JsbuvYtmaXBH9Pks1tNrfBbdvQniSb2/aa
27HZttXmtn/bZnObe5KaXRIPtr0X27a5J2lvT3KDom1rNrcRbZvNbTa3uSdp
sblN2+b5O6vN7dj2JNncttfcpm1rdUnQbZvNbTa37TS3EW2bzW0bts09STa3
2dzWb25j2jab29yTpG2zua1p22xu+7NtNrd58Z0127bbJUG3bZvNbUTbZnPb
enObto1q22xuW9mT3G7Ittnc5p4kbduCbWt2SRBtm3uSbG5zT5LNbXTbtrsn
aam57de2NbsktG0eynFPsh7N7dhsO1yXBN222dzmniSb2xZsW7O5jWjb4bok
fm17eWS2Haq57d+2d0LbttXmdmy2zT1Je3uSml0SRNuuQ3Mb37bZ3I5xTzJU
c5t7krRtXvhjc7t330a07To0tzFtO1SXxK9ta3ZJEG1bc08yVHMb3rYNNbe9
2/Yu37bN5jab24ZsW7W5jb0nyea2veZ2bHuSbG7ba27D2/aoX9sO1yVBt202
t03sSbK5Tdvm1ebqb9t2mtv4ts3mNpvb6LbNPclO30a3bUvNbdp27M1tRNtm
c9uebY/Qttnchrdtm81tRNtmc9t6c5u2jbonyea2lT3JP9C2eUEPv7ldf9vm
nqQ9256naNuazW1E22Zzm81tfNtmczt22w7VJcG3bTa32dymbVtobsdm2+G6
JOi2zeY29yTZ3LZg25rNbUTbpm/zQh6ubdtsbmPaNpvb3JOkbbO5jW3bdWhu
+7FtNre5J6nZJaFtW2hu+7dtNrfZ3LbT3Ma07VBdEr+2rdvcxrNtu3uSrxqy
bTvNbXzbZnObx9M4LdvW7JIg2na4Lolf22ZzG9m2uSep3dyOzbbt7kkqNrfB
9yQ1uySIth2sue3dtneA27benqTV5jaibWvuSa6mbZtrbuPbttHmNqRt29yT
1OyScE9SqUsCb9uKzW3aNm2bF8XVo7k9+J4km9s6tq3ZJcHfk2Rzm81tcNs2
tCfJ5ra95jakbRvdk9Tskvi3bTa3uSep2SXxYNt7sW2be5L29iQ3KNq2ZnMb
0bbZ3GZzm3uSFpvbtG0eztm2bTa32dymbVuw7fmmbJvNbTa37TS3EW2bzW0b
ts09STa32dzWb25j2jab29yTpG2zua1p22xu+7NtNrd5vH6Pze262LbN5jai
bbO5bb25TdtGtW02t63sSW43ZNtsbnNPkrZtwbY1uySIth2uS4Ju22xuc0/S
TnM7Ntu2uydpqbnt17Y1uyS0bV5djraN0SWJzbbDdUnQbZvNbe5JsrltwbY1
m9uIth2uS+LXtnWb23i2Haq57d+2d0LbttXmdmy2zT1Je3uSml0SRNuuQ3Mb
37bZ3I5xT5LNbTa3ebyys9MlGby5jWjbdWhuY9p2qC6JX9vW7JIg2rbmnmSo
5ja8bRtqbnu37V2+bZvNbTa3Ddm2anMbe0+Sze1YbdvOniSb2/aa2/C2PerX
tsN1SdBtm81tE3uSbG7Ttnm81sVg29yTZHObzW0rts09yU7fRrdtS81t2nbs
zW1E22Zz255tj0Rm22xuW7Rtm81tRNtmc9t6c5u2jbonyea2lT3JP9C2eaZO
v0vCPUnuSeLZ9jxTtr0J2rbZ3GZzG9+22dyO3bZDdUnwbZvNbTa3adsWmtux
2Xa4Lgm6bbO5zT1JNrct2LZmcxvRtunbPEvH5nbWtzFtm81t7knSttncxrbt
OjS3/dg2m9vck9TsktC2LTS3/ds2m9tsbttpbmPadqguiV/b1m1u49m25p5k
qOY2vm3baW7j2zab2zwe4g2jS4Jo2+G6JH5tm81tZNvmnqR2czs227a7J6nY
3Abfk9TskiDadrDmtnfb3gFu23p7klab24i2rbknuZq2ba65jW/bRpvbkLZt
c09Ss0vCPUmlLgm8bSs2t2nbtG0er4djc7tuzW2/tq3ZJcHfk2Rzm81tcNs2
tCfJ5ra95jakbRvdk9Tskvi3bTa3Y9yTDNcl8WDbe7Ftm3uS9vYkN6Dbdolv
I9o2m9tsbnNP0mJzm7bNq88N17bZ3GZzm7Ztwbbnm7JtNrfZ3LbT3Ea0bTa3
bdg29yTZ3GZzW7+5jWnbbG5zT5K2zeY2tm3Xobntx7bZ3ObxQl88zW1027bZ
3Ea0bTa3rTe3aduotq3Z3I7NtkM1t/Ftm81t7knSti3YtmaXBNG2w3VJ0G2b
zW3uSdppbsdm23b3JC01t/3atmaXhLbN4zWv/rYdpksSm22H65Kg2zab29yT
ZHPbwp6kZnMb0bbDdUn82rZucxvPtkM1t/3b9k5o27ba3I7NtrknaW9PUrNL
gmjbdWhu49s2m9sx7kmyuc3mNo+ndZaa24i2XYfmNqZth+qS+LVtzS4Jom1r
7kmGam7D27ah5rZ3297l27bZ3GZz25Btqza3sfck2dyO1bbt7EmyuW2vuQ1v
26N+bTtclwTdttncNrEnyeY2bZvH83QWbJt7kmxus7ltxba5J9np2+i2bam5
TduOvbmNaNtsbtuz7ZHIbJvNbYu2bbO5jWjbbG5bb27Tttncrr9th2puD9se
ebwQ1923uSfJPUk8255nyrY3Qds2m9tsbuPbNpvbsdt2qC4Jvm2zuc3mNm3b
QnM7NtsO1yVBt202t7knyea2BdvWbG4j2jZ9mxfT1a25jWnbbG5zT5K2zeY2
tm3Xobntx7bZ3OaepGaXhLZtobnt37bZ3GZz205zG9O2Q3VJ/Nq2bnMbz7Y1
9yRDNbfxbdtOcxvfttnc5vHqeHWx7XBdEr+2zeY2sm1zT1K7uR2bbdvdk1Rs
boPvSWp2SRBtO1hz27tt7wC3bb09SavNbUTb1tyTXE3bVrFtzS4Jvm0bbW5D
2rbNPUnNLgn3JJW6JPC2rdjcpm3Ttnm8AMfmNlpz269ta3ZJ8Pck2dyOvbkN
b9uG9iTZ3LbX3Ia0baN7kppdEv+2zeZ2jHuS4bokHvYk92LbNvck7e1JbkC3
7RLfRrRtNrfZ3OaepMXmNm2bx3PH5jab26jNbdq2VpcE3bbZ3GZz205zG9G2
2dy2Ydvck2Rzm81t/eY2pm2zuc09Sdo2m9vYtl2H5rYf22Zzm8ezdna6JOi2
bbO5jWjbbG5bb27TtlFtW7O5HZtth2pu49s2m9vck6RtW7BtzS4Jom2H65Kg
2zab29yTtNPcjs227e5JWmpu+7VtzS4JbZvH83P4th2mSxKbbYfrkqDbNpvb
3JNkc9vCnqRmcxvRtsN1Sfzatm5zG8+2QzW3/dv2Tmjbttrcjs22uSdpb09S
s0uCaNt1aG7j2zab2zHuSbK5zeY2j4d6IZvbiLZdh+Y2pm2H6pL4tW3NLgmi
bWvuSbK5rWPbms1t77a9y7dts7nN5rYh21ZtbmPvSbK5Hatt7/Fq22xu27Dt
UF0SeNse9Wvb4bok6LbN5raJPUk2t2nbPB7IcU8ypG2zuc3mNrpt29mTDNcl
Qd+TtNTcpm1baG77t+0HoW2bzW17tj0SmW2zuW3Rtm02txFtm81t681t2naM
ze3YbDtUc3vYdsjjWTjuSXJPcvjNbXTb3gRt22xus7mNb9tsbluwbbt7kg8Z
sm02t9ncpm1baG7HZtvhuiTots3mNvck2dy2sCep2dxGtG36No/X+6E1tzFt
m81t7knSttncxrbtOjS3/dg2m9vck9TsktC2LTS3/ds2m9tsbiPaNvckO33b
r23rNrfxbFtzTzJUcxvftu00t/Ftm81tHo/XeSi2Ha5L4te22dxGtm3uSWo3
t2Ozbe5J2tuT1OySINp2sC6Jd9veAW7benuSVpvbiLatuSe5mratYtuaXRJE
265FcxvStm3uSWp2SbgnqdQlgbdtxeY2bZu2zeMZODa3sW1bs0uCvyfJ5nbs
zW142w7W3B58T5LNbXvNbUjbNronqdkl8W/bbG7HuCcZrkviYU9yL7Ztc0/S
3p7kBnTbLvFtRNtmc5vNbe5JWmxu07Z5PF9nxbY1uyTck6Rto9v2fFO2zeY2
m9t2mtuIts3mtg3b5p4km9u2bNtmcxvTttnc5p4kbZvNbWzbrkNz249ts7nN
48V24bokeLZdh+Y2om2zuW29uU3bRrVtzS5JbLYdqrmNb9tsbnNPkrZtYU9S
s0uCaNvhuiTots3mNvck7TS3Y7Ntu3uSlprbfm1bs0tC2+bxMK4uze3YbDtc
lwTdttnc5p4km9sWmtvck9Tqkvi1bd3mNp5th2pu+7ftndC2bbW5HZttc08y
RHPbr21rdkkQbbsOzW1827bT3Ma3bTt7kmxus7nN49X1+umSINp2HZrbmLYd
qkvi17Y1uySItq25J8nmto5taza3vdv2rsFtm81tNrdDdUkQbdvqniSb27Ha
9h6vts3mtg3bDtUlgbftUb+2Ha5Lgm7bbG6b2JNkc5u2zePV5JC6JPi2zeY2
m9votm1nTzJclwR9T9JSc5u2baG57d+2H4S2bTa37dn2SGS2bXVPUrdLgm7b
NpvbiLbN5rb15jZtO8bmdmy2Haq5PWz74/FiOATbDtcloW3rNLfRbXsTtG2z
uc3mNr5ts7ltwbbt7kk+ZMi22dxmcxvRttncjt22w3VJ0G2bzW3uSbK5bWFP
UrO5jWjb9G0eL9z5bm5j2jab29yTpG2zuY1t22xus7nNPckQXRLatoXmtn/b
ZnObzW1E2+aeZKdv+7Vt3eY2nm1r7kmyua1j25rNbXzbZnObx+P5Pwt7kjMU
bZvNbWTb5p6kdnM7NtvmnqSObS9VtG3NLgmibQfrkni37R3gtm2zuR2bbWvu
Sa6mbavYtmaXBNG2a9HchrRtm3uSml2S2PYkg3VJ4PckFZvbtG3aNo8XwbG5
rWvbml0S/D1JNrdjb27D23aw5vbge5JsbttrbkPattE9Sc0uiX/bZnM7xj1J
q81tRNvmnqS9PckN6LZd4tuIts3mNpvb3JO02NymbfN4KFeH5jb3JGnb6LY9
35RtW2pu+7VtNrftNbcRbZvNbRu2zT1JNrdt2bbN5jambbO5zT1J2jab29i2
XYfmth/bZnObx+P1d5Ztuw7NbUTbZnPbenM7Bttmczt22w7V3Ma3bTa3uSdJ
27awJ6nZJUG07XBdEnTbZnObe5J2mtux2Tb3JO3tSWp2SWjbPF49DqVLEptt
h+uSoNs2m9vck2Rz20Jzm3uSWl0Sv7at29zGs+1QzW3/ts3mNvck7TS3MW07
VHPbr21rdkkQbbsOzW1827bT3Ma37VDN7cH3JNncZnObx+MV37Btuw7NbUzb
DtUlAbftx7BtW3NPks1tHdvWbG57t+1dg9s2m9tsbofqkiDatuaeZB26JLE1
t/Fte49X27ba3I56T1KxSwJv26N+bTtclwTdttncNrEnyeY2bZvH4zUuLttm
c5vNbXTbtrMnabW5jWjb3JO0Z9uaXRL/tv0gtG2zuW3Ptkcis22re5K6XRI8
2x5+l2Tw5jaibbO5bb25TduOsbkdm22Ham4P2+54PF73s9Xcpm3rNLfRbXsT
tG2zuc3mNr5ts7ltwbbt7kk+ZMi22dxmcxvRttncjt22w3VJ0G2bzW3uSbK5
baG5zT1JHo+HennfxrRtNre5J0nbZnMb27bZ3GZzm3uSIboktG0Lze3YbJvN
bXvNbe5JanVJ/Nq2bnMbz7Y19yTZ3Naxbc3mNqJts7nN4/HQL3yXxK9ts7mN
bNvck9Rubsdm29yT1LHtpYq2rdklQbTtYF0S77a9A9y2bTa3Y7NtzT3J1bRt
FdvW7JIg2nYtmtuQtm1zT1KzSxLbnmSwLgn8nqRic5u2Tdvm8Xhdr37Nbb+2
rdklwd+TZHM79uY2vG2zuc09ydhs2+iepGaXxL9ts7kd456k1eY2om2H65JE
ZtvBmtuAtl3i24i2zeY2m9vck7TY3KZt83h1OYQuCfckadvotj3flG1bam77
tW02t+01txFtm81tG7bNPUk2t23Zts3mNqZts7nNPUnaNpvb2LbN5jab2zwe
bzjH5vZgXRJE22Zz23pzOwbbZnM7dtsO1dzGt202t7knSdu20NyOzbbDdUnQ
bZvNbe5J2mlux2bb3JMM0SXxa9uaXRLaNo/Hk6Ntoze30W2bzW3uSbK5baG5
zT1JrS6JX9vWbW7j2Xao5rZ/22ZzW6O5jWjbdWhuY9p2qOa2X9vW7JIg2nYd
mtv4tm2nuY1v26Ga24PvSbK5zeY2j8fTOTa3UW07VJcE3LYfw7ZtzT1JNrd1
bFuzue3dttncBrZtNrct2LbmnmQduiSxNbfxbXuPV9u22tyOek9SsUsCb9uj
fm07XJcE3bYNNbfhbZvNbe3mNm2bx+MNerZsm81tNrfRbdvOnqTV5jaibYfr
ktC2LTS3/dv2g9C2zea2Pdseicy2re5J6nZJ8Gx7+F2SwZvbiLbN5rb15nYE
ts3mdvS2Haq5PWx74/F4+he2S0Lb1mluo9v2JmjbZnObzW1822Zz24Jt292T
fMiQbbO5zeY2om2zuR27bYfrkqDbNpvb3JNkc9tCc5t7kjwer67H5vZwuiTc
k4zVttncRrVtNrfZ3OaeZIguCW3bQnM7Nttmc9tec5t7klpdEto26p4km9s6
tq3Z3Ea0bTa3eTxe3a9/3/Zr22xuI9s29yS1m9ux2Tb3JHVse6mibWt2SRBt
O1iXxLtt7wC3bZvN7dhsW3NPcjVtW8W2NbskiLZdi+Y2pG3b3JPU7JLEtifJ
5jb3JGnbPB6vDofX3PZr25pdEvw9STa3Y29uw9s2m9vck4zNto3uSWp2Sfzb
NpvbMe5JWm1uI9p2uC5JZLYdrLkNaNslvo1o22xus7nNPUmLzW3aNo/Hax6O
bbO5TdsO1SVBt21LzW2/ts3mtr3mNqJts7ltw7a5J8nmti3bttncxrRtNre5
J0nbZnMb27bZ3GZzm8fj2TwLzW3/tr0B2rbZ3Lbe3I7Bttncjt22QzW38W2b
zW3uSdK2LTS3Y7PtcF0SdNtmc5t7knaa27HZNvckQ3RJ/Nq2ZpeEts3j8Xwc
sm1b3ZM82ZRts7nNPUk2ty00t7knqdUl8Wvbus1tPNsO1dz2b9tsbms0txFt
uw7NbUzbDtXc9mvbml0SRNuuQ3Mb37btNLfxbZvNbTa3ads8Hm+wq0NzG9O2
Q3VJwG37MWzb1tyTZHNbx7Y1m9vebZvNbWDbZnPbgm1r7knWoUsSW3Mb37b3
eLVtq83tqPckFbsk8LY96te2w3VJ0G3bUHMb3rbZ3NZubtO2eTzesI/NbTa3
69Lcjm1P0mpzG9G2w3VJaNsWmtv+bftBaNtmc9uebY9EZttW9yR1uyR4tj38
LsngzW1E22Zz23pzOwLbZnM7etsO1dwetp3xeDz8669LQtvWaW6j2/YmaNtm
c5vNbXzbZnPbgm3b3ZN8yJBts7nN5jaibbO5Hbtth+uSoNs2m9vck2Rz20Jz
m3uSPB6PV3xsbnNPEqm5jW/bdprbsdk2m9tsbnNPMkSXhLZtobkdm22zuW2v
uc09Sa0uCW0bdU+SzW0d29ZsbiPaNpvbPB6PV31sbntqbkPaNvcktZvbiLZd
h+Z2bLa9VNG2NbskiLYdrEvi3bZ3gNu2zeZ2bLatuSe5mratYtuaXRJE265F
cxvStm3uSWp2SWLbk2Rzm3uStG0ej8f7D3jb1uyS4O9Jsrkde3Mb3rbZ3Oae
ZGy2bXRPUrNL4t+22dyOcU/SanMb0bbDdUkis+1gzW1A2y7xbUTbZnObzW3u
SVpsbtO2eTyen+OeJG3bgm3PN2Xblprbfm2bzW17zW1E22Zz24Ztc0+SzW1b
tm2zuY1p22xuc0+Sts3mNrZts7nN5jaPx4vzQjS3/dv2BmjbZnPbenM7Bttm
czt22w7V3Ma3bTa3uSdJ27bQ3I7NtsN1SdBtm81t7knaaW7HZtvckwzRJfFr
25pdEto2j8dDOO5JdvNtdNtmczvGPUk2t+01t7knqdUloW1baG77t202tzWa
24i2XYfmNqZth2pu+7VtzS4Jom3XobmNb9t2mtv4ts3mNpvbtG0ejzfcQ2hu
Y9p2qC4JuG0/hm3bmnuSbG7r2LZmc9u7bbO5DWzbbG5bsG3NPck6dElQbDtU
lwTftvd4tW2rze2o9yQVuyTwtj3q17bDdUnQbdtQcxvettnc1m5u07Z5PJ7V
e6B1+F0SNrdjaW7HtidptbmNaNvhuiS0bQvNbf+2/SC0bbO5bc+2R7zYNvck
tfckdbskeLYdqkvi37Z/Bm3bbG5bb25HYNtsbkdv26Ga28M2MB6PV797IHe0
bR9dEnTb3gRt22xus7mNb9tsbluwbbt7kg8Zsm02t9ncRrRtNrct2LbVPcn1
pmybzW3uSbK5baG5zT1JHo/HG/zyvp027tia29yTjNW27TS3Y7NtNrfZ3Oae
ZIguCW3bQnM7Nttmc9tec5t7klpdEto26p4km9s6tq3Z3Ea0bTa3eTweb/Ar
sm13/m3baHMb0ra5J6nd3Ea07To0t2Oz7aWKtq3ZJUG07WBdEu+2vQPctm02
t2Oz7WDNbdq2ieY2om0Pv0viobkNads29yQ1uySx7Umyuc09Sdo2j8fjVV+V
bZcbt1/b1uyS4O9JsrmNatvck2Rzm3uSkdq20T1JzS6Jf9tmc9ufbbO5rd3c
RrTtcF2SyGw7WHMb0LZLfBvRttncZnObe5IWm9u0bR6Pp3e92PYDzzePzW3a
dvguCfqepKXmtl/bZnPbim1vg7ZtNrdt2Db3JNnctmXbNpvbmLbN5jb3JGnb
1prbsdk2m9tsbvN4PF4/tp017tC2vQHattnctt7cjsG22dy2YNt29yS3G7Jt
Nre5J0nbttDcjs22w3VJ0G2bzW3uSdppbiPadh2a27HZ9lZF29bsktC2eTwe
0vVr2+PGXb89yZNN2Tab2zHuSbK5ba+5zT1JrS4JbdtCc9u/bbO5rdHcRrTt
OjS3MW07VHPbr21rdkkQbbsOzW1827bT3Ma3bTa32dymbfN4vOHeRJ7d7sW4
a7UnqdolAbftx7Bt225zO17b1mxue7dtNreBbZvNbQu2rbknWYcuCYpth+qS
4Nv2Hq+2bbW5HfWepGKXBN62R/3adrguCbptG2puw9s2m9vazW3aNo/Hs3qD
2naZcbO5zeb2cG07VHN78D1Jq81tRNsO1yWhbVtobvu37QehbZvNbXu2PeLF
trknqb0nqdslwbPtUF0S/7b9M2jbZnPbenM7Attmczt62w7V3B62gfF4vPqd
L9vOG3dstj3PlG1vgrZtNrfZ3Ma3bTa3Ldi23T3JhwzZtp3mNr5ts7nN5nZc
tm11T3K9KdtmczvGPUk2t+01t7knyePxeIOfT9uWe7Bl3Bab29yTjNW27TS3
Y7NtNrfZ3OaeZIguSf1tuw7N7dhsm81te81t7klqdUlo26h7kmxu69i2ZnMb
0bbZ3ObxeLzBT8O23dWmuQ1p29yT1G5uI9p2HZrbsdn2UkXb1uySINp2sC6J
d9veAW7bNpvbsdl2sOY2bdtEcxvRtoffJfHQ3Ia0be5Jxr4nyeY29yRp2zwe
j1d9vrskDxbcMLsk+HuSbG6j2nao5ja8bbO5zT3J2Gzb6J6kZpfEv22zue3P
ttnc1m5uI9p2uC5JZLYdrLkNaNslvo2/J8nmduzNbe5JWmlu07Z5PJ7ehbDt
rHHXs7lN29bqkqDvSVpqbvu1bTa3rdj2NmjbZnPbhm1zT9LenqRmlwTftm02
tzFtm81t7knStq01t2OzbTa32dzm8Xg837bdzbebxj1YlwTRtq02t/Ftm3uS
bG7HZdt29yS3G7JtNrdj3JMM1SXhniRtG7+5jW7bbG5zT9JOcxvRtuvQ3I7N
trcq2rZml4S2zePxkC60bRcZN2ZzG9222dyOcU+SzW17zW3uSWp1SWjbFprb
/m2bzW2N5jaibdehuY1p26Ga235tW7NLgmjbbG7bsG3uSbK5zeY2bZvH42Fc
yC5J5/0R2LZDdUnAbfsxbNu229yO17Y1m9vebZvNbWDbttncjs22Nfck69Al
QbHtUF0SfNve49W2rTa3o96TVOySwNv2qF/bDtclQd+TNNTchrdtNrd1bPvf
aNs8Hs/8Dde2m74tx+Y2m9t+bTtUc3vwPUmrzW1E2w7XJaFtW2hu+7ftBwe2
bTa32dwO1dxGtG2re5K6XRI82w7VJfFv2z+Dtm02t603tyOwbTa3Tdi23T3J
P9C2eTye2qHYdnfjxrbteaZs21Jz269ts7ltr7mNadtsbluwbbt7kg8Zsm07
zW1822Zzm83tuGzb6p7kelO2zeZ2jHuSbG7ba25zT5LH4/EGv2E1t4tsu9q4
9bskse1Jhmpu4+9J2mlux2bbbG6zuc09yRBdkvrbdh2a27HZNpvb9prb3JPU
6pLQtuNsbsdr25rNbUTbHn6XhM1tHo9n/xBtu9i4h9jchrRt7klqN7cRbbsO
ze3YbHupom1rdkkQbTtYl8S7bbO5zT1JQ81t2raJ5jaibQ+/S+KhuQ1p29yT
1LHtUM3twfck2dzmniRtm8fj8aoPrUuSvx3/9Mfh2zab2wab2+h7kpvt2Dab
29yTjM22FfckrTa3/ds2m9v+bJvNbZU9yb3Yth2uSxKZbQdrbgPadolv4+9J
srkde3M7tj1Ju81t2jaPx9M7C7btDrm5Tdu20dz2b9uWmtt+bZvNbSu2vQ3a
ttnctmHb3JO0tyep2SVBtO06NLcxbZvNbe5J0ratNbdjs202t9nc5vF4PN+2
7btLkvdtOUTbttrcxrftUM3tGGybzW0Ltm13T3K7IdtmczvGPclQXRLuSdK2
8Zvb6LbN5jb3JO00txFtuw7N7dhse6uibWt2SWjbPB4P6azZtrv/D/E37bY=

    "], {{0, 430.5}, {1098.75, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96, 96}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{990.75, Automatic},
  ImageSizeRaw->{1098.75, 430.5},
  PlotRange->{{0, 1098.75}, {
    0, 430.5}}]], \
"Input",ExpressionUUID->"a68ed170-0bc4-4493-9ed0-b968f8c77136"]], "Text",
 CellChangeTimes->{
  3.823155279662193*^9, {3.825317828491105*^9, 
   3.8253178532967205`*^9}},ExpressionUUID->"312982b3-b3aa-4a1d-ae5c-\
4503198d78af"],

Cell["", "Text",
 CellChangeTimes->{{3.8252376231843004`*^9, 3.8252377747256947`*^9}, {
  3.825238153518151*^9, 3.825238158314306*^9}, {3.825251182516876*^9, 
  3.8252511907075243`*^9}, {3.8253192650175457`*^9, 
  3.8253192663248296`*^9}},ExpressionUUID->"3d28ccf9-683b-46d1-9732-\
b8798766300c"],

Cell[CellGroupData[{

Cell["7.1 Calculation part", "Subsection",
 CellChangeTimes->{{3.821518460775728*^9, 3.8215184635711555`*^9}, {
   3.8237788275925064`*^9, 3.823778830345231*^9}, {3.824454866625008*^9, 
   3.824454867504202*^9}, 3.8252230431969337`*^9, {3.825239027704014*^9, 
   3.825239038771838*^9}},ExpressionUUID->"71e11180-4623-4d6e-8a68-\
98363012440e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "dg", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.825240887833599*^9, 3.8252409006185985`*^9}, 
   3.825247398733951*^9},
 CellLabel->
  "In[121]:=",ExpressionUUID->"48d2ff38-659a-47bf-b955-a3acb8db451d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dg", "=", "BL1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "1"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], " ", ";", "\n", 
    "                  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "=", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "3"}], "]"}], "]"}], " ", "=", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"i", "-", "1"}], ",", "11"}], "]"}], "]"}]}]}], "]"}], ";", 
    "\n", "                  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       "startWipLevel"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "4"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "6"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "3"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "5"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "=", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "5"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "4"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "7"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "9"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "6"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "8"}], "]"}], "]"}]}], ";", "\n", 
    "                ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "8"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "7"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}], "+", " ", 
        RowBox[{"startWipLevel", "*", "2"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "10"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "12"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "9"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"5", ",", "8"}], "}"}], ",", "1"}], "]"}], "]"}]}], ";", 
    "\n", "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "11"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "10"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "13"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "15"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "12"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "14"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "14"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "13"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", " ", "==", " ", "1"}], ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}], " ", "+", " ", 
        "startWipLevel"}]}], " ", ",", " ", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "16"}], "]"}], "]"}], 
        " ", "-", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"i", " ", "-", " ", "1"}], ",", " ", "18"}], "]"}], "]"}], 
        " ", "+", " ", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "15"}], "]"}], "]"}]}]}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "17"}], "]"}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "18"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "17"}], "]"}], "]"}], ",", " ", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", " ", "16"}], "]"}], "]"}]}], "]"}]}], ";", "\n", 
    "                 ", 
    RowBox[{
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", " ", "19"}], "]"}], "]"}], " ", "=", " ", 
     RowBox[{"dg", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "18"}], "]"}], "]"}]}]}], ",", "\[IndentingNewLine]",
    " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "timeUnits", ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8252504415436172`*^9, 3.8252504557819433`*^9}, 
   3.825250660568779*^9, 3.825317496941167*^9},
 CellLabel->
  "In[122]:=",ExpressionUUID->"a60cbc9e-c55c-4219-9383-7ee1c804df37"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"totalwipfulltoc", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
      RowBox[{"dg", "[", 
       RowBox[{"[", 
        RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"finishedgoodsfulltoc", "=", 
   RowBox[{"Total", "[", 
    RowBox[{"dg", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fulltoc", "=", "dg"}], ";"}]}], "Input",
 CellChangeTimes->{{3.821457222675911*^9, 3.821457234438753*^9}, {
   3.821457293315337*^9, 3.821457321011918*^9}, {3.8214573518641214`*^9, 
   3.821457397212779*^9}, {3.8214589615928736`*^9, 3.821458984618804*^9}, {
   3.8215190736244173`*^9, 3.8215190846934047`*^9}, {3.821791990714267*^9, 
   3.821791994515505*^9}, {3.821792039881745*^9, 3.821792047780915*^9}, {
   3.8217923371987214`*^9, 3.821792337820766*^9}, 3.8217926393515205`*^9, {
   3.821881799864423*^9, 3.821881802880248*^9}, {3.8230826341625433`*^9, 
   3.823082634168544*^9}, 3.8252370123111825`*^9, {3.825239627371439*^9, 
   3.8252396500490446`*^9}, {3.825240942165612*^9, 3.8252409557037525`*^9}, {
   3.8252456513125067`*^9, 3.8252456938298025`*^9}, {3.825247465929517*^9, 
   3.8252474840876155`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"a55d926b-0bf7-4b20-9469-0984f8c6ba85"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"availCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{
           RowBox[{"3", "*", "i"}], "-", "1"}]}], "]"}], "]"}], "]"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"utilCap", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Total", "[", 
       RowBox[{"dg", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{"3", "*", "i"}]}], "]"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->
  "In[127]:=",ExpressionUUID->"d0ccf7a8-e03c-4be3-afe2-e8e96a31be9b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot1", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<station 1\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  2\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  3\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  4\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  5\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "5", "]"}], "]"}]}]}], "|>"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<station  6\>\"", "\[Rule]", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<avail.\>\"", "\[Rule]", 
            RowBox[{"availCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}], ",", 
           RowBox[{"\"\<util.\>\"", "->", 
            RowBox[{"utilCap", "[", 
             RowBox[{"[", "6", "]"}], "]"}]}]}], "|>"}]}]}], " ", "|>"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"ChartStyle", "\[Rule]", "\"\<Pastel\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<available versus utilized capacity per workstation\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ChartLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<available capacity\>\"", ",", "\"\<utilized capacity\>\""}], 
          "}"}], ",", "Below"}], "]"}]}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<station 1\>\"", ",", "\"\<station 2\>\"", ",", 
           "\"\<station 3\>\"", ",", "\"\<station 4\>\"", ",", 
           "\"\<station 5\>\"", ",", "\"\<station 6\>\""}], "}"}], ",", 
         "None"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "=", 
    RowBox[{"BarChart", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
        RowBox[{"dg", "[", 
         RowBox[{"[", 
          RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}], ",", 
        RowBox[{"Total", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "4"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "7"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "10"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "13"}], "]"}], "]"}], ",", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"timeUnits", ",", "16"}], "]"}], "]"}]}], "}"}], "]"}], 
        ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{"dg", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "19"}], "]"}], "]"}], "]"}], ",", "Blue"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"ChartLabels", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<queue12\>\"", ",", "\"\<queue23\>\"", ",", "\"\<queue34\>\"", 
         ",", "\"\<queue45\>\"", ",", "\"\<queue56\>\"", ",", 
         "\"\<totalWIP\>\"", ",", "\"\<finalgoods\>\""}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<WIP per queue, total WIP of all queues and Final Goods\>\""}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", 
     " ", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullTOCRollingStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<station 1\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 2\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 3\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<station 4\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "11"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 5\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "14"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<station 6\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "17"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "Pink"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullTOCQueueStat", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<Min\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Min", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Mean\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Mean", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Median\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Median", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<StandardDeviation\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"StandardDeviation", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Variance\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Variance", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<Max\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<queue 12\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 23\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], "]"}], "]"}]}],
             ",", 
            RowBox[{"\"\<queue 34\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], "]"}], 
              "]"}]}], ",", 
            RowBox[{"\"\<queue 45\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "13"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<queue 56\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "16"}], "]"}], "]"}], "]"}], "]"}]}], 
            ",", 
            RowBox[{"\"\<final goods\>\"", "->", 
             RowBox[{"N", "[", 
              RowBox[{"Max", "[", 
               RowBox[{"dg", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "18"}], "]"}], "]"}], "]"}], "]"}]}]}], 
           "|>"}]}]}], "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "LightBlue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FullTOCQueueGraph", "=", 
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "4"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue12\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue23\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "10"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue34\>\""}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "13"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue45\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "16"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<queue56\>\""}]}], "]"}], ",", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"dg", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "18"}], "]"}], "]"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<finalgoods\>\""}]}], "]"}]}],
          "}"}]}], "}"}], ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullTOCoe", "=", 
   RowBox[{"oe", "+", "10000"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TFullTOC", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"sp", "-", "tvc"}], ")"}], "*", "finishedgoodsfulltoc"}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IFullTOC", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"totalwipfulltoc", "*", "tvc"}], ")"}], "+", "invest"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"npFullTOC", "=", 
   RowBox[{"TFullTOC", "-", "FullTOCoe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"roiFullTOC", "=", 
   RowBox[{"PercentForm", "[", 
    RowBox[{
     RowBox[{"npFullTOC", "/", "IFullTOC"}], " ", "/", " ", "100"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"csFullTOC", "=", 
   RowBox[{"PercentForm", "[", "1.", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ltFullTOC", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"totalwipfulltoc", "/", " ", "finishedgoodsfulltoc"}], " ", "/", 
     " ", "timeUnits"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pFullTOC", "=", 
   RowBox[{"TFullTOC", "/", "FullTOCoe"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"itFullTOC", "=", 
    RowBox[{"finishedgoodsfulltoc", " ", "/", "totalwipfulltoc"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"financeFullTOC", "=", 
    RowBox[{"Dataset", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"<|", " ", 
        RowBox[{
         RowBox[{"\"\<Throughput\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "TBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "TCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "TDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "TTLS", "]"}]}], ",", 
            RowBox[{"\"\<Full TOC\>\"", "->", 
             RowBox[{"N", "[", "TFullTOC", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Inventory\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "IBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "ICL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "IDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "ITLS", "]"}]}], ",", 
            RowBox[{"\"\<Full TOC\>\"", "->", 
             RowBox[{"N", "[", "IFullTOC", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Operating Expenses\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "oe", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "oe", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "oe", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "oe", "]"}]}], ",", 
            RowBox[{"\"\<Full TOC\>\"", "->", 
             RowBox[{"N", "[", "FullTOCoe", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Net Profit\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "npBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "npCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "npDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "npTLS", "]"}]}], ",", 
            RowBox[{"\"\<Full TOC\>\"", "->", 
             RowBox[{"N", "[", "npFullTOC", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<ROI\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "roiBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "roiCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "roiDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "roiTLS", "]"}]}], ",", 
            RowBox[{"\"\<Full TOC\>\"", "->", 
             RowBox[{"N", "[", "roiFullTOC", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Customer Service\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "csBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "csCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "csDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "csTLS", "]"}]}], ",", 
            RowBox[{"\"\<Full TOC\>\"", "->", 
             RowBox[{"N", "[", "csFullTOC", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Productivity\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "pBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "pCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "pDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "pTLS", "]"}]}], ",", 
            RowBox[{"\"\<Full TOC\>\"", "->", 
             RowBox[{"N", "[", "pFullTOC", "]"}]}]}], "|>"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<Inventory Turnover\>\"", "\[Rule]", 
          RowBox[{"<|", 
           RowBox[{
            RowBox[{"\"\<Balanced Line\>\"", "->", 
             RowBox[{"N", "[", "itBL1", "]"}]}], ",", 
            RowBox[{"\"\<Constrained Line\>\"", "->", 
             RowBox[{"N", "[", "itCL1", "]"}]}], ",", 
            RowBox[{"\"\<TOC-DBR\>\"", "->", 
             RowBox[{"N", "[", "itDBR", "]"}]}], ",", 
            RowBox[{"\"\<TLS\>\"", "->", 
             RowBox[{"N", "[", "itTLS", "]"}]}], ",", 
            RowBox[{"\"\<Full TOC\>\"", "->", 
             RowBox[{"N", "[", "itFullTOC", "]"}]}]}], "|>"}]}]}], 
        "\[IndentingNewLine]", "|>"}], "}"}], ",", 
      RowBox[{"HeaderBackground", "\[Rule]", "LightGreen"}]}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.821457715262518*^9, 3.821457729134305*^9}, 
   3.8217904865515285`*^9, {3.8230826341805425`*^9, 3.823082634201543*^9}, {
   3.823086352114561*^9, 3.82308638013153*^9}, {3.8231585169524994`*^9, 
   3.8231585546367135`*^9}, {3.823774846113164*^9, 3.823775133427304*^9}, {
   3.823775477703473*^9, 3.8237754825755386`*^9}, {3.823775528931969*^9, 
   3.823775529799982*^9}, {3.8251583840738754`*^9, 3.825158699062357*^9}, {
   3.8251588265745034`*^9, 3.8251588276953225`*^9}, {3.825237012329181*^9, 
   3.825237012355181*^9}, {3.825239669603212*^9, 3.825239998098036*^9}, {
   3.825247889068934*^9, 3.8252479532323627`*^9}, {3.825319609267733*^9, 
   3.8253196107489147`*^9}, {3.8253284589957666`*^9, 3.8253284661479635`*^9}, 
   3.8253286479345202`*^9, {3.8253288373598604`*^9, 3.82532884288082*^9}, {
   3.8253969273820553`*^9, 3.8253970192425494`*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"9052165c-1ec0-4d32-aa7b-60533390a3b6"]
}, Closed]],

Cell[CellGroupData[{

Cell["7.2 Rolling dice statistics", "Subsection",
 CellChangeTimes->{{3.8218823188106346`*^9, 3.8218823215530763`*^9}, {
   3.8230863952017813`*^9, 3.82308639873883*^9}, {3.824454870883767*^9, 
   3.82445487179314*^9}, 3.8251590196720886`*^9, 3.8252230449442863`*^9, 
   3.825239041934108*^9},ExpressionUUID->"20ce4c57-634f-4a42-a3fe-\
80afa48115f5"],

Cell[CellGroupData[{

Cell[BoxData["FullTOCRollingStat"], "Input",
 CellChangeTimes->{
  3.8252236396006765`*^9, {3.825239050723769*^9, 3.825239053424155*^9}, {
   3.82532865570475*^9, 3.825328658459349*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"367ccc06-4ece-4885-8f76-1062a1489f32"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "station 1" -> 2., "station 2" -> 2., "station 3" -> 2., "station 4" -> 
          5., "station 5" -> 2., "station 6" -> 2.], "Mean" -> 
        Association[
         "station 1" -> 6.91, "station 2" -> 6.95, "station 3" -> 6.73, 
          "station 4" -> 6.57, "station 5" -> 6.91, "station 6" -> 6.96], 
        "Median" -> 
        Association[
         "station 1" -> 7., "station 2" -> 7., "station 3" -> 7., "station 4" -> 
          7., "station 5" -> 7., "station 6" -> 7.], "StandardDeviation" -> 
        Association[
         "station 1" -> 2.530999722631276, "station 2" -> 2.4510356500009864`,
           "station 3" -> 2.4323368652928457`, "station 4" -> 
          1.0941072648834331`, "station 5" -> 2.781958470087742, "station 6" -> 
          2.5972790735418836`], "Variance" -> 
        Association[
         "station 1" -> 6.405959595959596, "station 2" -> 6.007575757575758, 
          "station 3" -> 5.916262626262626, "station 4" -> 
          1.1970707070707072`, "station 5" -> 7.73929292929293, "station 6" -> 
          6.745858585858586], "Max" -> 
        Association[
         "station 1" -> 12., "station 2" -> 11., "station 3" -> 12., 
          "station 4" -> 8., "station 5" -> 12., "station 6" -> 12.]]}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[12]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[1, 0.5, 0.5]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[12]} -> 1, {All, All, "station 1"} -> 
        1, {All, All, "station 2"} -> 1, {All, All, "station 3"} -> 
        1, {All, All, "station 4"} -> 1, {All, All, "station 5"} -> 
        1, {All, All, "station 6"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "station 1" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 2" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 3" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 4" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 5" -> TypeSystem`PackageScope`AtomShape[60], 
               "station 6" -> TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "station 1", "station 2", "station 3", "station 4", "station 5", 
          "station 6"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 1", 
                  Style[
                  "station 1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 2", 
                  Style[
                  "station 2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 3", 
                  Style[
                  "station 3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 4", 
                  Style[
                  "station 4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 4"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 4"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 5", 
                  Style[
                  "station 5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 5"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 5"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["station 6", 
                  Style[
                  "station 6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "station 6"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "station 6"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.95"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.73"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.57"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.91"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.96"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.531"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.45104"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.43234"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.09411"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.78196"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.59728"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.40596"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.00758"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.91626"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.19707"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.73929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.74586"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[1, 0.5, 0.5], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["station 6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{601., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{601., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.825223931713488*^9, 3.825225736375205*^9, 
  3.8252282031906424`*^9, 3.8252478324710765`*^9, 3.8252480412172537`*^9, 
  3.8252483472485166`*^9, 3.825248442477326*^9, 3.8252505514006853`*^9, 
  3.8252508227882333`*^9, 3.825317521123973*^9, 3.825319623936446*^9, 
  3.8253214371890144`*^9, 3.825324287871426*^9, 3.825324345013218*^9, 
  3.8253288798166075`*^9, 3.825397081805112*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"b519f612-ce2c-4d99-ac2e-e597744d1788"]
}, Open  ]],

Cell[TextData[{
 "The Rolling Dice Statistics shows that with the new dice the mean, and \
median values of ",
 StyleBox["station 4",
  FontSlant->"Italic"],
 " are almost the same compared to all other stations. Of course, the \
variance is still low."
}], "Text",
 CellChangeTimes->{{3.8252378037560215`*^9, 3.8252378505193653`*^9}, {
  3.825237888815028*^9, 3.825237908008049*^9}, {3.8253193154416714`*^9, 
  3.825319454649817*^9}},ExpressionUUID->"4e49f4d4-fd80-4dde-a40e-\
9c13cc163f0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.3 Queue statistics", "Subsection",
 CellChangeTimes->{{3.823086415235679*^9, 3.823086428028554*^9}, {
   3.823778816183541*^9, 3.8237788186849484`*^9}, {3.824454876872693*^9, 
   3.8244548779748993`*^9}, 3.8252230484727163`*^9, 3.8252239808392954`*^9, 
   3.82523918004885*^9},ExpressionUUID->"05962ca9-6285-4939-8154-\
8cbdb602c9db"],

Cell[CellGroupData[{

Cell[BoxData["FullTOCQueueGraph"], "Input",
 CellChangeTimes->{{3.825158716025488*^9, 3.825158719583213*^9}, {
  3.825239060271285*^9, 3.825239062916278*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"0a00d620-26f1-4279-93dd-c931a35225ff"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlLtOAzEQRS0qSgoKCgpYoQghhAiE9yPmEQIhQBIChBZBzS/40/aT8gmA
cg/S3EjR0bFnxl57dlc/vkdfcymlz9//H2e/aXvGrawBcVucFzfFBbEhLoob
4pK4Ii6bw8q4Lq7luJ+GzcOmrYuzT/ZPnZaN403jjtXdtfGWje+Jh+K++YGR
ceocGY8t/sTyTi3+zPZxbvXb5lnU8xacc7mweZxzvRR1LwXnXq9E9UHB6YPr
6AWvxE700onx6SauV3D6piuqT0o3xqdby8epfyeqrwtO/Z7tvxfj073N46zf
j/VK3+YfLB+nHx9F9XXBeS+eYnzBeY8GMT4P4nzBqxlrnPMZirrfjHOewxhf
W3waxflsXnDVq83Tc/SMk4/reWqLT2NR559x+nUc42uc+32x/ZsX8xpn/VfL
x+lXXO9bjfN9ehN1/xmvlI+zPs75T+Lz5EmcLzj55un9P/8H0rNzOg==
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue12\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 25.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJx1lElKBEEQRRNXLl24cOFCRUREpLWdp06H1nbWaset6Nor5NHySB5Bpf8r
iA82NJ9XPzIiKpKK2fev5nMspfTx+//T0e+7N9KNrAfSTem4dEs6Ie1KJy1+
yuKnzZ8xf878eeMF6Zp00eovSdely8Yr9rwjXf1HqUPervleh7mRl745x3vu
SrelO6b7Fse5PctPHH0cWB+HlrdnmmPeApPnyHyY88eRi3E6MR8m7jTmLcap
b37f+jqLXGDyn9t5GH9gdQaW58L6hPEvY18FVny6ivUKzJyvzRe3c7uJ8UXc
3s+t+cbpTqx8BWZ+97F+FrfzgPW+lXjNMT1EPxsXMfOs5qcm+rmx+viaZ8VX
v2kolZ+H0S/G1Tg9xnpZ3N4nTH3iOf8k1XyzuL1P8ys+9/ss1feRYb43WHuk
wuyTl+hn42JcYfbKa8yXYe23Ylxh9s2btJN/APRDiLw=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue23\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 47.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdk0lOAzEQRS1WLFmwYMECEEIIIcRMEoaYhjCFKWEKWwRrruCj+Ug5AkP+
s+TfUuvrdVW5yzUsfnwPv6ZCCJ+/759OnnH3X1IT9UF6Jp2eaDoXz4h74lnj
OfGFeN7iF+z8JdnhZbOvGK8aryn+VLxu520Yb1p+W1J42/x3xI14VwrvyR7F
+9Ij6YG0LW0Zox3TE+mhMed2pcem+HXMj+/k2ba8sVNHxVHX4tfUftSl1J+6
EQ9zPnOge5S5wN6r/1fminvQJ9Wl9JH4S6nun2DqfiVVnxJMn65r/2Qcbiwe
po99y8843ErVr2Qc7ur7JJj4eyn1g8nvoc4nGYdHqe4bYeYY1h5kmLke1P+L
MPHG2TgM6/MiTL6w6pHNHp6kqkeEmTdY9csw+/As5f4w/TLOxuGlzi/C9MPs
GWZ/XuWnfYnisk9wo3j82aM3sfYmwuyNmD3LMHswkp/mPhqnUe2fzR7epf34
A1h4iOE=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue34\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 54.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlDlOA0EQRVtEhAQEBAQwQshCCLGaxQY3m1nNYgyGFEHMFepofSSOAMj/
IfW3ZD29qenq6qVm8f1r+DmVUvr4/f9x8vvuTdjOeiBuidPiujgjboizYkuc
E1fFeXFbXDBvxB1xSdwUl62elsVXbD64ZqRe1tG25weWt2vz7lndu1Z3x/J2
7D1IHvLuW17qoE7yUGfX4ofmRyLr7lk8i9rXwDm349oD51xObDzOOZyKjeLm
6UzUvQice3Qu6p6Eeerb+L7FL+p8gbO+y3o9YZ6uRO1X4Ny7a5sfp/4bm988
3db1Bs7+DWz+gcXvag+ce39frydw6n+o4xnnPM2LvZ8e6/ozzn6YF/M0FHUe
2TzwRuNxzvepjmec/cB1/wtOv41E9VvG1Zcxqt8vOP33LKrvM658YfGCM/7F
5sfV94Gr7wtO349F9XUe1/HAla/gfGderX7zwLUfBef79Pb//g/DNnWd
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue45\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 31.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlDlKREEQQD9GhgYGBgYqIiIi7vvSjo77vpuKxl6hjtZH8ggqvid0DQyP
N93VVf2nfo2/fd59DHRd9/7z/eXf52vvj+uFH+AKHISrcKi0+4fhMhyB83AU
zsExOAsnkk/CBTiV1qfT+TNwMe0zfi7tM2447bNOzzHvUorznp7nczJuNXEN
bkGf2y7cgD24CfdT3AHchn24Aw/bc0PfgyewwDP24XHc5g3OD+swH3VG5lGq
k3yhn7d1xnlbZ5ymPK5bB/V25rH+5J33OG3vFd7fuvrp934bZx7rynn+69Z7
bd0+B+/5/z9cQPogdPvgEtIHodtnVylet0+uIX0Xun1z0+4vuvlu2v0Vt0+6
W7xH/G27Hrh9WHXj7yB9W3TyRfKavLuHvIdF570PnTlTdd/3B8gcKzpzJ3Tm
QdWdg4/tetHJFzrzo+oT8AkyJ4tOfaFTX9Wdy89tvpI8dM6vunP1BTJHi268
Tr1Vdx6+wtHyDW0HgRM=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"queue56\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 55.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJxdlDlOQ0EQREdEhAQEBARgIYQQQuw7eFjMZozBbCZFEHOFPto/ko8AyPWQ
uixZpeepnurp+f7zH9+Dr4lSyufv90/Hn1F7rEtVP0inpZPSlnRKumC+GVP8
s6Zzto6Sw76Lpvjok9xl62vF8lZtnzXzr5t/w9Y3bX1Lypy2bX3HeNf225Ny
3n3zH9j+h+Y/kjKnYynzOLG8tpR7qVLNI2DyT/N+AbekZ7mfgMk7t3WY/Aup
noOA6b+T86KT/eXS6mH6v8r9BMz9X1t/sPLKjeXD1N/aOsz5u9kf3ewvd9Yf
zPl6Vt/L/nIv1XkDpr5v+/ezvzxIdR8V5r6NG5j8x3yeCut5DJh685eB5RuH
cQMz/yep3gMVJh/WPBqY5+s5n6fC1MOaVwPz/3ux/mGeR5h6mPzXzNU4YPXX
wLwP3nJeNQ6Y+cHkD3N/FaZ+mP0N3JK+/9f/ALdKboQ=
          "]]}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"finalgoods\"", TraditionalForm],
      PlotRange->{{0., 100.}, {0, 12.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, 1]]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAWLeiL2FX6vfOH4q39cEoheFmXaD6DabK9NBdMSMR0tA
tNwN1XMg2kn94BMQrfJ6ccM3IJ2jaDsRRFdue+EnUvPGkSWXfakEkC5aLLoH
RHcp32ByrH3jKOYkruICpLturDngCqQnn183wx1Ia1/1Xv6s/o3j+jn394Lo
Zd+utj8H0jMiNl0B0Ze4M36BaMlXSqkvgLSK6Iw2EO3TcXQKiJ7W+EHwJZCW
aXXzAdH+/A7hINopNHLtayA9WaZBnrPhjWPnazFGLiCt9D7PlBtI16lKnRYB
0vz7DJ6C6IzqLG5RIP3/aaA4iBa79k5ODEjPyHziAKIzpfQvmQFpBTb2m+ZA
WiJ3/W4LIL2vh1XBCkjr2Gqrg+i/UWxxNiDzmJ1XxwJpAEXlslY=
  "],
 CellLabel->
  "Out[145]//TableForm=",ExpressionUUID->"e2fc9efa-df4b-4393-b770-\
5abf59bd9158"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["FullTOCQueueStat"], "Input",
 CellChangeTimes->{
  3.8252237074112024`*^9, {3.8252390689145575`*^9, 3.825239071557302*^9}, {
   3.8253286631248407`*^9, 3.82532866597641*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"91f930ac-64fa-4c75-beba-057eed9286a5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Min" -> Association[
         "queue 12" -> 5., "queue 23" -> 13., "queue 34" -> 18., "queue 45" -> 
          5., "queue 56" -> 2., "final goods" -> 2.], "Mean" -> 
        Association[
         "queue 12" -> 11.56, "queue 23" -> 30.17, "queue 34" -> 31.64, 
          "queue 45" -> 15.28, "queue 56" -> 25.57, "final goods" -> 6.71], 
        "Median" -> 
        Association[
         "queue 12" -> 9.5, "queue 23" -> 31., "queue 34" -> 30., "queue 45" -> 
          15.5, "queue 56" -> 24., "final goods" -> 7.], "StandardDeviation" -> 
        Association[
         "queue 12" -> 5.477815682045595, "queue 23" -> 9.481566379565193, 
          "queue 34" -> 7.762276038181668, "queue 45" -> 6.835853193924581, 
          "queue 56" -> 15.370347288125139`, "final goods" -> 
          2.5713848801803674`], "Variance" -> 
        Association[
         "queue 12" -> 30.006464646464647`, "queue 23" -> 89.90010101010101, 
          "queue 34" -> 60.252929292929295`, "queue 45" -> 46.72888888888889, 
          "queue 56" -> 236.24757575757576`, "final goods" -> 
          6.612020202020202], "Max" -> 
        Association[
         "queue 12" -> 25., "queue 23" -> 47., "queue 34" -> 54., "queue 45" -> 
          31., "queue 56" -> 55., "final goods" -> 12.]]}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.87, 0.94, 1]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[13]} -> 1, {All, All, "queue 12"} -> 
        1, {All, All, "queue 23"} -> 1, {All, All, "queue 34"} -> 
        1, {All, All, "queue 45"} -> 1, {All, All, "queue 56"} -> 
        1, {All, All, "final goods"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "queue 12" -> TypeSystem`PackageScope`AtomShape[60], "queue 23" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 34" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 45" -> 
               TypeSystem`PackageScope`AtomShape[60], "queue 56" -> 
               TypeSystem`PackageScope`AtomShape[60], "final goods" -> 
               TypeSystem`PackageScope`AtomShape[60]]], 
             DirectedInfinity[1], 6, {All, All}]]], 6, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "queue 12", "queue 23", "queue 34", "queue 45", "queue 56", 
          "final goods"}, {
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}], 6], 1], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 12", 
                  Style[
                  "queue 12", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 12"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 12"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 23", 
                  Style[
                  "queue 23", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 23"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 23"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 34", 
                  Style[
                  "queue 34", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 34"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 34"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 45", 
                  Style[
                  "queue 45", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 45"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 45"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["queue 56", 
                  Style[
                  "queue 56", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "queue 56"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "queue 56"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["final goods", 
                  Style[
                  "final goods", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "final goods"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "final goods"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Min", 
                  Style[
                  "Min", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Min"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Min"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Mean", 
                  Style[
                  "Mean", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Mean"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.56"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.17"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.28"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25.57"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.71"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Mean"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Median", 
                  Style[
                  "Median", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Median"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Median"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["StandardDeviation", 
                  Style[
                  "StandardDeviation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["StandardDeviation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.47782"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9.48157"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7.76228"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.83585"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15.3703"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.57138"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["StandardDeviation"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Variance", 
                  Style[
                  "Variance", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Variance"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.0065"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["89.9001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["60.2529"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46.7289"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["236.248"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.61202"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Variance"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Max", 
                  Style[
                  "Max", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Max"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.87, 0.94, 1], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 12"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["47.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 23"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["54.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 34"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 45"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["55.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["queue 56"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Max"], 
                 Key["final goods"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{610., {96., 102.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{610., {96., 102.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8252239321354933`*^9, 3.8252257368331995`*^9, 
  3.8252282035736375`*^9, 3.8252478329430695`*^9, 3.825248041644201*^9, 
  3.825248347445516*^9, 3.8252484426863317`*^9, 3.8252505515706387`*^9, 
  3.8252508232678347`*^9, 3.825317521608972*^9, 3.825319624330446*^9, 
  3.825321437604015*^9, 3.825324288311431*^9, 3.8253243455562162`*^9, 
  3.8253288803206067`*^9, 3.8253970822211657`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"2043e80c-3e95-4c2d-88f4-1622e3dcbefa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
7.4 Comparison of a) available and utilized capacities and b) last run WIP \
plus Final goods\
\>", "Subsection",
 CellChangeTimes->{{3.821518805549862*^9, 3.821518808269321*^9}, 
   3.823778809879298*^9, {3.8244548850720463`*^9, 3.8244548908881454`*^9}, 
   3.825223054699696*^9, 3.8252370124081297`*^9, 
   3.825239184189048*^9},ExpressionUUID->"59e40150-c115-42aa-babf-\
599340dfa4eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\"\<*        *\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821456255721122*^9, 3.8214562940870533`*^9}, 
   3.8215185548592567`*^9, 3.8218816572998486`*^9, 3.821882342070235*^9, {
   3.8231586036570826`*^9, 3.8231586136763773`*^9}, 3.825226156179596*^9},
 CellLabel->
  "In[147]:=",ExpressionUUID->"dffc875e-7de4-403d-86b5-c721c3e67926"],

Cell[BoxData[
 TemplateBox[{"*        *", "\"*        *\"", 
   TemplateBox[{
     GraphicsBox[{{
        Opacity[0], 
        PointBox[{{0.5611439176649233, 0.}, {14.738231820482538`, 
         0.}}]}, {{}, {{{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.8391260334064451, 0.}, {1.703475620043867, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.839126033406445, 0.}, {2.703475620043867, 
                 657.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.246077273494179, 0.}, {4.110426860131601, 
                 695.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.246077273494179, 0.}, {5.110426860131601, 
                 664.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.653028513581913, 0.}, {6.517378100219335, 
                 673.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.653028513581913, 0.}, {7.517378100219335, 
                 673.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{8.059979753669648, 0.}, {8.92432934030707, 
                 657.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{9.059979753669648, 0.}, {9.92432934030707, 
                 657.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{10.466930993757382`, 0.}, {11.331280580394804`, 
                 691.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{11.466930993757382`, 0.}, {12.331280580394804`, 
                 656.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}, {{}, {{}, {{
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.761959, 0.470832, 0.940597]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{12.873882233845116`, 0.}, {13.738231820482538`, 
                 696.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}, {
             Directive[
              EdgeForm[
               Directive[
                Thickness[Small], 
                Opacity[0.616]]], 
              RGBColor[0.431296, 0.709773, 0.927077]], 
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{13.873882233845116`, 0.}, {14.738231820482538`, 
                 671.}, "RoundingRadius" -> 0]}], 
              "DelayedMouseEffectStyle"]}}}, {}, {}}}, {}, {}}, {}, {
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {1.271300826725156, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["657.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {2.271300826725156, 657.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["695.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {3.67825206681289, 695.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["664.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {4.67825206681289, 664.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["673.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {6.085203306900624, 673.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["673.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {7.085203306900624, 673.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["657.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {8.49215454698836, 657.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["657.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {9.49215454698836, 657.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["691.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {10.899105787076092`, 691.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["656.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {11.899105787076092`, 656.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["696.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {13.306057027163828`, 696.}], 
         ImageScaled[{0.5, 0}]], 
        InsetBox[
         FormBox[
          StyleBox["671.`", {}, StripOnInput -> False], TraditionalForm], 
         Offset[{0, 4}, {14.306057027163828`, 671.}], 
         ImageScaled[{0.5, 0}]]}, {}, {}, {
        StyleBox[{Antialiasing -> False, {
           Directive[
            Thickness[Tiny]], {
            LineBox[{{0.5611439176649233, 0.}, {15.021773578538888`, 0.}}]}, 
           StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
          StyleBox[{{
             Directive[
              Thickness[Tiny]], 
             LineBox[{{0.839126033406445, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {0.839126033406445, 
                0.}]}], 
             LineBox[{{14.738231820482536`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.738231820482536`, 
                0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
               LineBox[{{2.703475620043867, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {2.703475620043867, 
                  0.}]}], 
               LineBox[{{3.2460772734941785`, 0.}, 
                 Offset[{-1.102182119232618*^-15, -6.}, {3.2460772734941785`, 
                  0.}]}], 
               LineBox[{{5.1104268601316, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.1104268601316, 
                  0.}]}], 
               LineBox[{{5.653028513581912, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {5.653028513581912, 
                  0.}]}], 
               LineBox[{{7.517378100219334, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {7.517378100219334, 
                  0.}]}], 
               LineBox[{{8.059979753669646, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {8.059979753669646, 
                  0.}]}], 
               LineBox[{{9.924329340307068, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {9.924329340307068, 
                  0.}]}], 
               LineBox[{{10.46693099375738, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {10.46693099375738, 
                  0.}]}], 
               LineBox[{{12.3312805803948, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.3312805803948, 
                  0.}]}], 
               LineBox[{{12.873882233845112`, 0.}, 
                 
                 Offset[{-1.102182119232618*^-15, -6.}, {12.873882233845112`, 
                  0.}]}]}}}, 
            StyleBox[{
              Directive[
               Thickness[Tiny]], 
              Directive[
               Thickness[Tiny]], 
              StyleBox[{
                InsetBox[
                 FormBox["\"station 1\"", TraditionalForm], 
                 Offset[{0, -2}, {1.771300826725156, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 2\"", TraditionalForm], 
                 Offset[{0, -2}, {4.17825206681289, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 3\"", TraditionalForm], 
                 Offset[{0, -2}, {6.585203306900623, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 4\"", TraditionalForm], 
                 Offset[{0, -2}, {8.992154546988356, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 5\"", TraditionalForm], 
                 Offset[{0, -2}, {11.399105787076092`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}], 
                InsetBox[
                 FormBox["\"station 6\"", TraditionalForm], 
                 Offset[{0, -2}, {13.806057027163824`, 0.}], 
                 ImageScaled[{
                   Rational[1, 2], 1}], Automatic, {1, 0}]}, {{}}, 
               StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
             False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
         "GraphicsAxes"}, StripOnInput -> False]}}, {
      DisplayFunction -> Identity, AspectRatio -> 0.5, Axes -> {False, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.5611439176649233, 0.}, 
       CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], ImageSize -> Medium, PlotLabel -> 
       FormBox["\"available versus utilized capacity per workstation\"", 
         TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{"\"available capacity\"", "\"utilized capacity\""}, 
        "SwatchLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.761959, 0.470832, 0.940597]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.616]]], 
                    RGBColor[0.431296, 0.709773, 0.927077]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.6666666666666667], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.761959, 0.470832, 0.940597], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.5079726666666667, 0.313888, 
                    0.6270646666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.761959`", ",", "0.470832`", ",", "0.940597`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.761959, 0.470832, 0.940597]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.761959, 0.470832, 0.940597], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.616`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.431296, 0.709773, 0.927077], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.2875306666666667, 0.473182, 
                    0.6180513333333334], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.431296`", ",", "0.709773`", ",", "0.927077`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.431296, 0.709773, 0.927077]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.431296, 0.709773, 0.927077], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "None", "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}],
              ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", "}"}], ",", 
                   RowBox[{"{", "}"}]}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
        Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
    DisplayFunction -> (GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ), 
    InterpretationFunction -> (RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& ), Editable -> True], 
   GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.4107501820830298, 0.}, {7.451201747997087, 0.}}]}, {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.651]]], 
         RGBColor[0.976, 0.6848, 0.26480000000000004`]], {{
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 5.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 16.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 54.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 21.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 7.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
          
          RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 103.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.651]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 671.}, 
           "RoundingRadius" -> 0]}}}, {}, {}}, {}, {
       InsetBox[
        FormBox[
         StyleBox["5", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {1., 5.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["16", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {2., 16.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["54", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {3., 54.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["21", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {4., 21.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["7", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {5., 7.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["103", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {6., 103.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["671", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {7., 671.}], 
        ImageScaled[{0.5, 0}]]}, {}, {}, {}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.4107501820830298, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["\"queue12\"", TraditionalForm], 0}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox["\"queue23\"", TraditionalForm], 0}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox["\"queue34\"", TraditionalForm], 0}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox["\"queue45\"", TraditionalForm], 0}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox["\"queue56\"", TraditionalForm], 0}, {6., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {6., 
          FormBox["\"totalWIP\"", TraditionalForm], 0}, {7., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {7., 
          FormBox["\"finalgoods\"", TraditionalForm], 0}}, None}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"WIP per queue, total WIP of all queues and Final Goods\"", 
       TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{
  3.821456225821967*^9, 3.8214562956960487`*^9, 3.821456459016817*^9, 
   3.821457748098464*^9, 3.8214585677641163`*^9, 3.8214590091753983`*^9, 
   3.821459105295044*^9, 3.8214596950306435`*^9, {3.821518513015794*^9, 
   3.8215185220508595`*^9}, 3.8215185566626835`*^9, 3.8215186587520895`*^9, {
   3.821519098743548*^9, 3.8215191042444963`*^9}, 3.8217906873115025`*^9, 
   3.82179083151563*^9, {3.821790937181072*^9, 3.8217909455519304`*^9}, 
   3.821792653756541*^9, 3.821792782062765*^9, 3.8217930610535917`*^9, {
   3.8217931015032444`*^9, 3.8217931094823976`*^9}, 3.821793347849378*^9, 
   3.8217933896422524`*^9, 3.8218715507467923`*^9, 3.821873654175861*^9, 
   3.821875313452216*^9, 3.8218772081784782`*^9, 3.82188234377446*^9, 
   3.8218824862341146`*^9, 3.821884363990446*^9, 3.82188443159155*^9, 
   3.821884652606244*^9, 3.8223051102250004`*^9, 3.8229216202404346`*^9, 
   3.8229218724460535`*^9, 3.8229223436479454`*^9, 3.8230826764929624`*^9, 
   3.823083183864007*^9, 3.823086478117999*^9, 3.823086537695612*^9, 
   3.823086614129196*^9, 3.8230866818678265`*^9, 3.8230867828143883`*^9, 
   3.8230868872800455`*^9, 3.8230872173875504`*^9, 3.8230873982390947`*^9, 
   3.823088645347455*^9, 3.8230887781023345`*^9, 3.823149687478222*^9, 
   3.8231586146098146`*^9, 3.8231587528872023`*^9, 3.8237655269592905`*^9, 
   3.8237719369307685`*^9, 3.823775237593435*^9, 3.8237790136308393`*^9, 
   3.8251533386447725`*^9, 3.8251535192238817`*^9, 3.8251551349404106`*^9, 
   3.825155749801283*^9, 3.825156051462434*^9, 3.82515690534709*^9, 
   3.825157172982579*^9, 3.825157286458894*^9, 3.8251582877509117`*^9, 
   3.825158754760748*^9, 3.825158842619393*^9, 3.8251636272546573`*^9, 
   3.8252239325104694`*^9, 3.8252257371891985`*^9, 3.825228203949636*^9, 
   3.8252478333490686`*^9, 3.825248042082206*^9, 3.825248347620516*^9, 
   3.8252484428453255`*^9, 3.8252505516716385`*^9, 3.825250823628835*^9, 
   3.8253175219859724`*^9, 3.825319624716498*^9, 3.825321438002015*^9, 
   3.825324288720477*^9, 3.825324345925217*^9, 3.825328880709608*^9, 
   3.825397082607897*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"e821c6f0-938b-4f92-9641-a1acc4183394"]
}, Open  ]],

Cell["\<\
The available and utilized capacities are now on almost the same level. The \
level of Final Goods is high and the Ending WIP low.\
\>", "Text",
 CellChangeTimes->{{3.8253195256092253`*^9, 3.825319567580803*^9}, {
  3.8253216202460027`*^9, 
  3.8253216696645865`*^9}},ExpressionUUID->"b08a85c2-d7d1-4331-a21e-\
71cc82e935c6"],

Cell[TextData[StyleBox["7.5 Comparison of Throughput Accounting figures", \
"Subsection"]], "Text",
 CellChangeTimes->{{3.8237787498846292`*^9, 3.823778758841248*^9}, {
   3.824454896419323*^9, 3.8244548976259375`*^9}, {3.8251587808789597`*^9, 
   3.8251587851594625`*^9}, 3.825223057464142*^9, 
   3.8252391870894117`*^9},ExpressionUUID->"0d2cf2e1-42bc-49e0-b3ed-\
0c8e0473048f"],

Cell[CellGroupData[{

Cell[BoxData["financeFullTOC"], "Input",
 CellChangeTimes->{
  3.8252238969800386`*^9, {3.8252390824247723`*^9, 3.8252390850072374`*^9}, {
   3.8253286716253834`*^9, 3.8253286735128975`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"82350612-ab95-4498-b659-54a44bdf8b4d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Throughput" -> 
        Association[
         "Balanced Line" -> 132800., "Constrained Line" -> 74200., "TOC-DBR" -> 
          74200., "TLS" -> 104600., "Full TOC" -> 134200.], "Inventory" -> 
        Association[
         "Balanced Line" -> 48600., "Constrained Line" -> 104400., "TOC-DBR" -> 
          33600., "TLS" -> 36000., "Full TOC" -> 40600.], 
        "Operating Expenses" -> 
        Association[
         "Balanced Line" -> 30000., "Constrained Line" -> 30000., "TOC-DBR" -> 
          30000., "TLS" -> 30000., "Full TOC" -> 40000.], "Net Profit" -> 
        Association[
         "Balanced Line" -> 102800., "Constrained Line" -> 44200., "TOC-DBR" -> 
          44200., "TLS" -> 74600., "Full TOC" -> 94200.], "ROI" -> 
        Association[
         "Balanced Line" -> PercentForm[0.021152263374485596`], 
          "Constrained Line" -> PercentForm[0.009846743295019156], "TOC-DBR" -> 
          PercentForm[0.013154761904761905`], "TLS" -> 
          PercentForm[0.020722222222222222`], "Full TOC" -> 
          PercentForm[0.023201970443349755`]], "Customer Service" -> 
        Association[
         "Balanced Line" -> PercentForm[1.], "Constrained Line" -> 
          PercentForm[1.], "TOC-DBR" -> PercentForm[1.], "TLS" -> 
          PercentForm[1.], "Full TOC" -> PercentForm[1.]], "Productivity" -> 
        Association[
         "Balanced Line" -> 4.426666666666667, "Constrained Line" -> 
          2.473333333333333, "TOC-DBR" -> 2.473333333333333, "TLS" -> 
          3.486666666666667, "Full TOC" -> 3.355], "Inventory Turnover" -> 
        Association[
         "Balanced Line" -> 4.643356643356643, "Constrained Line" -> 
          0.8791469194312796, "TOC-DBR" -> 5.455882352941177, "TLS" -> 6.5375,
           "Full TOC" -> 6.514563106796117]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1, {All, All, "TOC-DBR"} -> 1, {All, All, "TLS"} -> 
        1, {All, All, "Full TOC"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TOC-DBR" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TLS" -> 
               TypeSystem`PackageScope`UnknownShape[False], "Full TOC" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 5, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "Balanced Line", "Constrained Line", "TOC-DBR", "TLS", "Full TOC"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`AnyType, TypeSystem`AnyType}], 8], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.88, 1, 0.88]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[14]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1, {All, All, "TOC-DBR"} -> 1, {All, All, "TLS"} -> 
        1, {All, All, "Full TOC"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TOC-DBR" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TLS" -> 
               TypeSystem`PackageScope`UnknownShape[False], "Full TOC" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 5, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "Balanced Line", "Constrained Line", "TOC-DBR", "TLS", "Full TOC"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`AnyType, TypeSystem`AnyType}], 8], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 1, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Balanced Line", 
                  Style[
                  "Balanced Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Balanced Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Balanced Line"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Constrained Line", 
                  Style[
                  "Constrained Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Constrained Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Constrained Line"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TOC-DBR", 
                  Style[
                  "TOC-DBR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "TOC-DBR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "TOC-DBR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TLS", 
                  Style[
                  "TLS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "TLS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "TLS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Full TOC", 
                  Style[
                  "Full TOC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Full TOC"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Full TOC"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Throughput", 
                  Style[
                  "Throughput", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Throughput"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["132800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104600."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["134200."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory", 
                  Style[
                  "Inventory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104400."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Operating Expenses", 
                  Style[
                  "Operating Expenses", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Operating Expenses"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Net Profit", 
                  Style[
                  "Net Profit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Net Profit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["102800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ROI", 
                  Style[
                  "ROI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ROI"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.115%\"", ShowStringCharacters -> False], 
                  0.021152263374485596`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"0.9847%\"", ShowStringCharacters -> False], 
                  0.009846743295019156, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"1.315%\"", ShowStringCharacters -> False], 
                  0.013154761904761905`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.072%\"", ShowStringCharacters -> False], 
                  0.020722222222222222`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.32%\"", ShowStringCharacters -> False], 
                  0.023201970443349755`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Customer Service", 
                  Style[
                  "Customer Service", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Customer Service"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Productivity", 
                  Style[
                  "Productivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Productivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.42667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.48667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.355"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory Turnover", 
                  Style[
                  "Inventory Turnover", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory Turnover"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.879147"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.45588"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.5375"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.51456"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{616., {119., 125.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{616., {119., 125.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8252239326364703`*^9, 3.825225737320199*^9, 
  3.825228204101637*^9, 3.8252478335400796`*^9, 3.825248042248201*^9, 
  3.825248347785516*^9, 3.825248443037326*^9, 3.8252505518656874`*^9, 
  3.8252508237888346`*^9, 3.8253175221579714`*^9, 3.8253196248714495`*^9, 
  3.82532143817208*^9, 3.82532428890644*^9, 3.825324346084217*^9, 
  3.8253288808846135`*^9, 3.8253970827679024`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"5394e2c1-adcf-4a26-9cc0-3ecad40fe08d"]
}, Open  ]],

Cell["\<\
In case you study the code, you will recognize that I have added a $10,000 \
investment for the new dice into Operating Expenses. 
Nevertheless, our Throughput, ROI, and Inventory Turnover is outstanding. \
Even compared to the Balanced Line that remains unconstrained. Great isn\
\[CloseCurlyQuote]t it?\
\>", "Text",
 CellChangeTimes->{{3.8253198403496532`*^9, 3.8253201823311787`*^9}, {
   3.825322729646101*^9, 3.8253227728096523`*^9}, {3.8253970515058765`*^9, 
   3.8253970586399193`*^9}, 3.825397119112172*^9, {3.8253971513969345`*^9, 
   3.8253971526651697`*^9}, {3.8253972077101564`*^9, 
   3.8253972137821393`*^9}},ExpressionUUID->"206eca6c-105c-4320-8fa8-\
25f47638ab12"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8. Comparison of Final Results", "Section",
 CellChangeTimes->{{3.8217910866026297`*^9, 3.8217910889248667`*^9}, {
   3.8244549049181376`*^9, 3.8244549069825363`*^9}, 3.8252230625729666`*^9, 
   3.8252391915423594`*^9, {3.825320414386622*^9, 
   3.825320424139679*^9}},ExpressionUUID->"94d20477-ecd7-4191-8eca-\
6f3ee6ceb75f"],

Cell[CellGroupData[{

Cell["8.1 Calculation part", "Subsection",
 CellChangeTimes->{{3.821881696878251*^9, 3.8218816997077985`*^9}, {
   3.823779155155791*^9, 3.8237791573566236`*^9}, {3.824454911085722*^9, 
   3.8244549124448957`*^9}, 3.825223064512233*^9, 
   3.8252391938659635`*^9},ExpressionUUID->"6bbc904e-fd5e-449e-b4eb-\
26dbbc50e9b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "totalwipBL1", ",", "totalwipCL1", ",", "totalwipDBR", ",", 
       "totalWIPTLS", ",", "totalwipfulltoc"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Bal. Line\>\"", ",", "\"\<Constr. Line\>\"", ",", 
        "\"\<TOC DBR\>\"", ",", "\"\<TLS\>\"", ",", "\"\<Full TOC\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<amount of Ending WIP\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", " ",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.821791196061273*^9, 3.821791220807952*^9}, {
   3.821791310706643*^9, 3.8217913320918765`*^9}, {3.8217913843853507`*^9, 
   3.821791413789756*^9}, 3.821791498314723*^9, {3.821791529731254*^9, 
   3.8217915331039925`*^9}, 3.821791606242984*^9, {3.821791645004908*^9, 
   3.821791671845397*^9}, 3.821791933834572*^9, {3.8218716318045363`*^9, 
   3.82187163504091*^9}, {3.823158654910254*^9, 3.8231586560604897`*^9}, {
   3.8252370124701815`*^9, 3.8252370124781284`*^9}, {3.825238065708439*^9, 
   3.825238070733186*^9}, {3.8252391121255956`*^9, 3.8252391369234967`*^9}, {
   3.8252457193244658`*^9, 3.8252457199528847`*^9}, {3.825247981272785*^9, 
   3.8252479831230974`*^9}, {3.8252505017618694`*^9, 3.825250523823907*^9}, 
   3.8253205809319963`*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"d7461921-618f-495b-b1f2-4aac350de158"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"BarChart", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "finishedgoodsBL1", ",", "finishedgoodsCL1", ",", "finishedgoodsDBR", 
         ",", "finishedgoodsTLS", ",", " ", "finishedgoodsfulltoc"}], "}"}], 
       ",", "Blue"}], "]"}], ",", 
     RowBox[{"ChartLabels", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Bal. Line\>\"", ",", "\"\<Constr. Line\>\"", ",", 
        "\"\<TOC DBR\>\"", ",", "\"\<TLS\>\"", ",", "\"\<Full TOC\>\""}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<amount of Final Goods\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LabelingFunction", "\[Rule]", "Above"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AspectRatio", "\[Rule]", "0.5"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "\[IndentingNewLine]", " ",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8217912257356462`*^9, 3.8217912902458243`*^9}, {
   3.821791400582815*^9, 3.821791429731596*^9}, {3.821791513147912*^9, 
   3.8217915437964892`*^9}, 3.8217916196359625`*^9, {3.8217916892489653`*^9, 
   3.821791704117399*^9}, {3.821793167683634*^9, 3.821793167930788*^9}, {
   3.821871621399232*^9, 3.8218716251944227`*^9}, {3.8218772681584888`*^9, 
   3.821877303586068*^9}, {3.8218773388536997`*^9, 3.821877363421591*^9}, {
   3.8231586605740843`*^9, 3.823158661810345*^9}, {3.8252261763658295`*^9, 
   3.8252261764545975`*^9}, {3.8252391450888834`*^9, 3.825239166358079*^9}, {
   3.825247990680227*^9, 3.825248010611859*^9}, 3.825320514654993*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"97902f91-821a-4acc-91f9-8bb2b04cf3ae"]
}, Closed]],

Cell[CellGroupData[{

Cell["8.2 Comparison of Ending WIP and Final goods", "Subsection",
 CellChangeTimes->{{3.821881677006183*^9, 3.82188167931155*^9}, {
   3.823778845233135*^9, 3.8237788685458813`*^9}, {3.8244549215736976`*^9, 
   3.8244549226242905`*^9}, 3.825223066075551*^9, 3.825237012503131*^9, 
   3.8252391960644145`*^9},ExpressionUUID->"e915d5b8-7f12-4ad6-80a1-\
b16806e566d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Row", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"plot1", ",", "plot2"}], "}"}], ",", "\"\<*        *\>\""}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.8217917500391016`*^9, 3.8218816664366236`*^9, 3.8218823707178245`*^9, {
   3.8231586309922433`*^9, 3.823158641359666*^9}, {3.823158808434142*^9, 
   3.823158824690378*^9}, 3.8252261647631283`*^9, 3.825250622644786*^9},
 NumberMarks->False,
 CellLabel->
  "In[151]:=",ExpressionUUID->"4ba38fc4-e5ed-46be-9cb6-1bb2fade0695"],

Cell[BoxData[
 TemplateBox[{"*        *", "\"*        *\"", 
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.45075018208302986`, 0.}, {5.451201747997087, 0.}}]}, {{}, {
       Directive[
        EdgeForm[
         Directive[
          Thickness[Small], 
          Opacity[0.6649999999999999]]], 
        RGBColor[0.976, 0.6848, 0.26480000000000004`]], {{
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 143.}, 
          "RoundingRadius" -> 0]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
         RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 422.}, 
          "RoundingRadius" -> 0]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
         RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 68.}, 
          "RoundingRadius" -> 0]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
         RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 80.}, 
          "RoundingRadius" -> 0]}, {
         Directive[
          EdgeForm[
           Directive[
            Thickness[Small], 
            Opacity[0.6649999999999999]]], 
          RGBColor[0.976, 0.6848, 0.26480000000000004`]], 
         RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 103.}, 
          "RoundingRadius" -> 0]}}}, {}, {}}, {}, {
      InsetBox[
       FormBox[
        StyleBox["143", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {1., 143.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["422", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {2., 422.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["68", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {3., 68.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["80", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {4., 80.}], 
       ImageScaled[{0.5, 0}]], 
      InsetBox[
       FormBox[
        StyleBox["103", {}, StripOnInput -> False], TraditionalForm], 
       Offset[{0, 4}, {5., 103.}], 
       ImageScaled[{0.5, 0}]]}, {}, {}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> 0.5, Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.45075018208302986`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["\"Bal. Line\"", TraditionalForm], 0}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox["\"Constr. Line\"", TraditionalForm], 0}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox["\"TOC DBR\"", TraditionalForm], 0}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox["\"TLS\"", TraditionalForm], 0}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox["\"Full TOC\"", TraditionalForm], 0}}, None}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"amount of Ending WIP\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   GraphicsBox[{{{
       Opacity[0], 
       PointBox[{{0.45075018208302986`, 0.}, {5.451201747997087, 0.}}]}, {{}, {
        Directive[
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.6649999999999999]]], 
         RGBColor[0.976, 0.6848, 0.26480000000000004`]], {{
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.6649999999999999]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 664.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.6649999999999999]]], 
           RGBColor[0, 0, 1]], 
          RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 371.},
            "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.6649999999999999]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 371.},
            "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.6649999999999999]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 523.}, 
           "RoundingRadius" -> 0]}, {
          Directive[
           EdgeForm[
            Directive[
             Thickness[Small], 
             Opacity[0.6649999999999999]]], 
           RGBColor[0, 0, 1]], 
          
          RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 671.}, 
           "RoundingRadius" -> 0]}}}, {}, {}}, {}, {
       InsetBox[
        FormBox[
         StyleBox["664", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {1., 664.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["371", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {2., 371.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["371", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {3., 371.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["523", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {4., 523.}], 
        ImageScaled[{0.5, 0}]], 
       InsetBox[
        FormBox[
         StyleBox["671", {}, StripOnInput -> False], TraditionalForm], 
        Offset[{0, 4}, {5., 671.}], 
        ImageScaled[{0.5, 0}]]}, {}, {}, {}}, {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     0.5, Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.45075018208302986`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
        StrokeForm[
         Opacity[0]], 
        StrokeForm[
         Opacity[0]]}, {Automatic, None}}, 
     FrameTicks -> {{Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}]& , None}, {{{1., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {1., 
          FormBox["\"Bal. Line\"", TraditionalForm], 0}, {2., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {2., 
          FormBox["\"Constr. Line\"", TraditionalForm], 0}, {3., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {3., 
          FormBox["\"TOC DBR\"", TraditionalForm], 0}, {4., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {4., 
          FormBox["\"TLS\"", TraditionalForm], 0}, {5., 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {5., 
          FormBox["\"Full TOC\"", TraditionalForm], 0}}, None}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, PlotLabel -> 
     FormBox["\"amount of Final Goods\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}]},
  "RowWithSeparators"]], "Output",
 CellChangeTimes->{
  3.8217917244191413`*^9, 3.82179175520725*^9, 3.8217919535489607`*^9, 
   3.8217922318214073`*^9, 3.8217926607243643`*^9, 3.8217927831908207`*^9, 
   3.821793061244539*^9, {3.8217931016661973`*^9, 3.821793109662346*^9}, 
   3.8217933480073795`*^9, 3.821793389804306*^9, 3.8218715850563073`*^9, 
   3.8218716519939327`*^9, 3.821873654351861*^9, 3.8218753136222095`*^9, 
   3.8218772083464255`*^9, 3.821877280202104*^9, 3.821877369327613*^9, {
   3.8218823719664793`*^9, 3.8218823887478037`*^9}, 3.8218824864071674`*^9, 
   3.821884364146446*^9, 3.8218844317635503`*^9, 3.821884652757244*^9, 
   3.822305110365518*^9, 3.822921620615346*^9, 3.822921872852208*^9, 
   3.8229223439760227`*^9, 3.8230826769460154`*^9, 3.8230831843150043`*^9, 
   3.82308661430949*^9, 3.823086682043872*^9, 3.8230868291324635`*^9, 
   3.8230868874470444`*^9, 3.8230872175685987`*^9, 3.823087398414095*^9, 
   3.8230886455021954`*^9, 3.8230887782773294`*^9, 3.8231496876382737`*^9, {
   3.8231586420403147`*^9, 3.823158671054731*^9}, 3.8231587530772038`*^9, 
   3.8231588262105174`*^9, 3.8237655271142855`*^9, 3.823771937102765*^9, 
   3.8237752378115015`*^9, 3.8237790138148427`*^9, 3.8251533389067717`*^9, 
   3.8251535195668764`*^9, 3.825155135185356*^9, 3.8251557501112623`*^9, 
   3.8251560516999626`*^9, 3.8251569056770782`*^9, 3.825157173294586*^9, 
   3.8251572867548866`*^9, 3.8251582880659103`*^9, 3.8251587550897493`*^9, 
   3.8251588432173862`*^9, 3.825163627770711*^9, 3.825223932995471*^9, 
   3.8252257377722*^9, 3.8252261977209826`*^9, 3.8252282044556375`*^9, 
   3.825238080766631*^9, 3.825247834043069*^9, 3.8252483479345636`*^9, 
   3.8252484432153378`*^9, 3.8252505520224485`*^9, 3.825250824198836*^9, 
   3.825317522621973*^9, 3.825319625247444*^9, 3.825320440558293*^9, 
   3.8253205203310204`*^9, 3.8253205879478126`*^9, 3.8253214385770164`*^9, 
   3.8253242893344293`*^9, 3.825324346507355*^9, 3.825328881349662*^9, 
   3.8253970831479044`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"bc39d1be-920f-48f9-ad60-6a6c85f18a05"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.3 Comparison of Throughput Accounting figures", "Subsection",
 CellChangeTimes->{{3.8237789021813245`*^9, 3.8237789128611298`*^9}, {
   3.8244549329677124`*^9, 3.8244549338908577`*^9}, {3.825158796564331*^9, 
   3.825158802288004*^9}, 3.8252230703081646`*^9, 
   3.8252391997375903`*^9},ExpressionUUID->"0e721750-0e80-43ee-b8b5-\
0c519d706ad3"],

Cell[CellGroupData[{

Cell[BoxData["financeFullTOC"], "Input",
 CellChangeTimes->{
  3.8252239156508317`*^9, {3.825239094932804*^9, 3.82523909747948*^9}, {
   3.8253286775532446`*^9, 3.8253286801052485`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"944e8ebe-4b71-4850-ba4b-d4b53a52efbe"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Throughput" -> 
        Association[
         "Balanced Line" -> 132800., "Constrained Line" -> 74200., "TOC-DBR" -> 
          74200., "TLS" -> 104600., "Full TOC" -> 134200.], "Inventory" -> 
        Association[
         "Balanced Line" -> 48600., "Constrained Line" -> 104400., "TOC-DBR" -> 
          33600., "TLS" -> 36000., "Full TOC" -> 40600.], 
        "Operating Expenses" -> 
        Association[
         "Balanced Line" -> 30000., "Constrained Line" -> 30000., "TOC-DBR" -> 
          30000., "TLS" -> 30000., "Full TOC" -> 40000.], "Net Profit" -> 
        Association[
         "Balanced Line" -> 102800., "Constrained Line" -> 44200., "TOC-DBR" -> 
          44200., "TLS" -> 74600., "Full TOC" -> 94200.], "ROI" -> 
        Association[
         "Balanced Line" -> PercentForm[0.021152263374485596`], 
          "Constrained Line" -> PercentForm[0.009846743295019156], "TOC-DBR" -> 
          PercentForm[0.013154761904761905`], "TLS" -> 
          PercentForm[0.020722222222222222`], "Full TOC" -> 
          PercentForm[0.023201970443349755`]], "Customer Service" -> 
        Association[
         "Balanced Line" -> PercentForm[1.], "Constrained Line" -> 
          PercentForm[1.], "TOC-DBR" -> PercentForm[1.], "TLS" -> 
          PercentForm[1.], "Full TOC" -> PercentForm[1.]], "Productivity" -> 
        Association[
         "Balanced Line" -> 4.426666666666667, "Constrained Line" -> 
          2.473333333333333, "TOC-DBR" -> 2.473333333333333, "TLS" -> 
          3.486666666666667, "Full TOC" -> 3.355], "Inventory Turnover" -> 
        Association[
         "Balanced Line" -> 4.643356643356643, "Constrained Line" -> 
          0.8791469194312796, "TOC-DBR" -> 5.455882352941177, "TLS" -> 6.5375,
           "Full TOC" -> 6.514563106796117]]}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[15]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1, {All, All, "TOC-DBR"} -> 1, {All, All, "TLS"} -> 
        1, {All, All, "Full TOC"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TOC-DBR" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TLS" -> 
               TypeSystem`PackageScope`UnknownShape[False], "Full TOC" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 5, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "Balanced Line", "Constrained Line", "TOC-DBR", "TLS", "Full TOC"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`AnyType, TypeSystem`AnyType}], 8], 1], "Meta" -> 
     Association[HeaderBackground -> RGBColor[0.88, 1, 0.88]], "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, All, 
          TypeSystem`PackageScope`KeyDummy[15]} -> 
        1, {All, All, "Balanced Line"} -> 1, {All, All, "Constrained Line"} -> 
        1, {All, All, "TOC-DBR"} -> 1, {All, All, "TLS"} -> 
        1, {All, All, "Full TOC"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[172.8], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`RowShape[
              Association[
              "Balanced Line" -> TypeSystem`PackageScope`UnknownShape[False], 
               "Constrained Line" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TOC-DBR" -> 
               TypeSystem`PackageScope`UnknownShape[False], "TLS" -> 
               TypeSystem`PackageScope`UnknownShape[False], "Full TOC" -> 
               TypeSystem`PackageScope`UnknownShape[False]]], 
             DirectedInfinity[1], 5, {All, All}]]], 8, 
          DirectedInfinity[1], {All}]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "Balanced Line", "Constrained Line", "TOC-DBR", "TLS", "Full TOC"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`AnyType, TypeSystem`AnyType}], 8], 1], "Path" -> {}, 
     "BaseIndices" -> {}, "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 
     5, "DataRowCount" -> 1, "DataColumnCount" -> 5, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Balanced Line", 
                  Style[
                  "Balanced Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Balanced Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Balanced Line"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Constrained Line", 
                  Style[
                  "Constrained Line", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Constrained Line"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Constrained Line"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TOC-DBR", 
                  Style[
                  "TOC-DBR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "TOC-DBR"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "TOC-DBR"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TLS", 
                  Style[
                  "TLS", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "TLS"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "TLS"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Full TOC", 
                  Style[
                  "Full TOC", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "Full TOC"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "Full TOC"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Throughput", 
                  Style[
                  "Throughput", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Throughput"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["132800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104600."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["134200."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Throughput"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory", 
                  Style[
                  "Inventory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["48600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104400."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Operating Expenses", 
                  Style[
                  "Operating Expenses", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Operating Expenses"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Operating Expenses"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Net Profit", 
                  Style[
                  "Net Profit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Net Profit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["102800."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["74600.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["94200.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Net Profit"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ROI", 
                  Style[
                  "ROI", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["ROI"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.115%\"", ShowStringCharacters -> False], 
                  0.021152263374485596`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"0.9847%\"", ShowStringCharacters -> False], 
                  0.009846743295019156, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"1.315%\"", ShowStringCharacters -> False], 
                  0.013154761904761905`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.072%\"", ShowStringCharacters -> False], 
                  0.020722222222222222`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"2.32%\"", ShowStringCharacters -> False], 
                  0.023201970443349755`, AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ROI"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Customer Service", 
                  Style[
                  "Customer Service", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Customer Service"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                TagBox[
                 InterpretationBox[
                  StyleBox["\"100%\"", ShowStringCharacters -> False], 1., 
                  AutoDelete -> True], PercentForm]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Customer Service"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Productivity", 
                  Style[
                  "Productivity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Productivity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.42667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.47333"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.48667"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3.355"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Productivity"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Inventory Turnover", 
                  Style[
                  "Inventory Turnover", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Inventory Turnover"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{172.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[0.88, 1, 0.88], Background -> GrayLevel[0.95], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64336"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Balanced Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.879147"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Constrained Line"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5.45588"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["TOC-DBR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.5375"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["TLS"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.51456"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Inventory Turnover"], 
                 Key["Full TOC"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{616., {119., 125.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{616., {119., 125.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.823778927415422*^9, 3.8237790138708897`*^9, 
  3.825153338999778*^9, 3.8251535196669292`*^9, 3.8251551352613573`*^9, 
  3.8251557501922626`*^9, 3.825156051781962*^9, 3.8251569057690887`*^9, 
  3.8251571733885827`*^9, 3.8251572868488865`*^9, 3.825158288152913*^9, 
  3.825158755174749*^9, 3.82515884335139*^9, 3.825163627898658*^9, 
  3.82522393310347*^9, 3.8252257378822036`*^9, 3.8252261978609796`*^9, 
  3.825228204577637*^9, 3.825238080903638*^9, 3.825247834202402*^9, 
  3.8252483480775213`*^9, 3.8252484433683257`*^9, 3.8252505521734476`*^9, 
  3.8252508243388357`*^9, 3.8253175227709775`*^9, 3.8253196253834443`*^9, 
  3.825320440708289*^9, 3.8253205204690247`*^9, 3.82532058810281*^9, 
  3.82532143873302*^9, 3.825324289493424*^9, 3.825324346645355*^9, 
  3.8253288814996066`*^9, 3.825397083291897*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"b006eaca-cd25-4eaa-a5aa-c22c7a202a75"]
}, Open  ]],

Cell["Still amazing results, right? ", "Text",
 CellChangeTimes->{{3.825322578936777*^9, 
  3.825322698428879*^9}},ExpressionUUID->"559e5f5c-7006-4301-b1ab-\
98a926abc63d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["9. POOGI", "Section",
 CellChangeTimes->{{3.825321753825573*^9, 
  3.82532175714956*^9}},ExpressionUUID->"49ae9849-d4fa-4a07-8414-\
58c8dce80161"],

Cell[TextData[{
 StyleBox["POOGI",
  FontWeight->"Bold"],
 " is the abbreviation for ",
 StyleBox["P",
  FontWeight->"Bold"],
 "rocess ",
 StyleBox["O",
  FontWeight->"Bold"],
 "f ",
 StyleBox["O",
  FontWeight->"Bold"],
 "n",
 StyleBox["G",
  FontWeight->"Bold"],
 "oing ",
 StyleBox["I",
  FontWeight->"Bold"],
 "mprovement. What does it mean?\n\nSo far we did not finish our ",
 StyleBox["Five Focusing Steps",
  FontSlant->"Italic"],
 " approach. Step ",
 StyleBox["5. Prevent Inertia from Becoming the Constraint",
  FontWeight->"Bold"],
 " has not been realized yet. \nIt often happens that managers are happy we \
the results achieved by Full TOC and they leave it as it is. In such a moment \
human Inertia is triggered and the attention moves to other areas of \
interest. It would be much better and re-focus on the work that has been done \
and to further improve the system or a new constraint may pop up somewhere \
else. \nStep 5 is a warning sign. It means to go back to step 1 of the ",
 StyleBox["Five Focusing Steps",
  FontSlant->"Italic"],
 " and seek the next constraint. If you do this repeatedly you are \
automatically in POOGI. "
}], "Text",
 CellChangeTimes->{{3.825321765909965*^9, 3.8253218146629286`*^9}, {
  3.825321895912584*^9, 3.8253219532908554`*^9}, {3.825321994509699*^9, 
  3.8253220674361057`*^9}, {3.8253221102058597`*^9, 3.8253224589285154`*^9}, {
  3.82532250253558*^9, 
  3.8253225319922676`*^9}},ExpressionUUID->"5ab731bc-9de7-4ea9-a0af-\
2b379ea05275"]
}, Open  ]]
}, Open  ]]
},
WindowToolbars->"EditBar",
WindowSize->{1904, 981},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"Salvaged" -> True, "TryRealOnly" -> False},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d919837f-d1bd-49cd-b6e9-eb335cdddb43"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[1510, 35, 311, 5, 96, "Title",ExpressionUUID->"d9495d32-4a2a-4616-a4cf-6e834bb4eada"],
Cell[1824, 42, 183, 3, 53, "Subtitle",ExpressionUUID->"588cb68b-4b26-4c6c-81db-41e4ac606573"],
Cell[2010, 47, 198, 6, 56, "Text",ExpressionUUID->"82de57c8-8ff6-4aeb-acad-3f687568dd4e"],
Cell[2211, 55, 247, 4, 28, "Input",ExpressionUUID->"2e02b318-f9b3-4be0-80c0-b9d2cd7f94f0"],
Cell[CellGroupData[{
Cell[2483, 63, 215, 4, 67, "Section",ExpressionUUID->"e17a423f-c7d5-479a-b876-4dc4f98170ed"],
Cell[2701, 69, 1795, 28, 122, "Text",ExpressionUUID->"74d1c1c6-4348-4d93-9173-33cb1a8f0a54"],
Cell[4499, 99, 157, 3, 31, "Item",ExpressionUUID->"502765f4-b3fc-4750-b545-7226e7ec0002"],
Cell[4659, 104, 158, 3, 31, "Item",ExpressionUUID->"d142b3c8-e1ff-4803-a584-cd1c90755968"],
Cell[4820, 109, 178, 3, 31, "Item",ExpressionUUID->"8721d4bb-7d58-4ad5-b2fb-c55a0d190dd2"],
Cell[5001, 114, 198, 4, 31, "Item",ExpressionUUID->"914364b9-3e70-422e-a4b9-a7c84112e01f"],
Cell[5202, 120, 201, 4, 31, "Item",ExpressionUUID->"185534aa-1c94-477d-9617-190279c7e453"],
Cell[5406, 126, 464, 9, 34, "Text",ExpressionUUID->"808bf7f5-19e3-477d-b97f-9689db8fee8b"],
Cell[CellGroupData[{
Cell[5895, 139, 207, 4, 53, "Subsection",ExpressionUUID->"bbaa924c-4c3b-4658-bfeb-461f9a482435"],
Cell[6105, 145, 649, 14, 100, "Text",ExpressionUUID->"2b1c5e2b-f9c7-4ce7-bef4-5fa9be57186a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6791, 164, 204, 3, 53, "Subsection",ExpressionUUID->"d4d7b97b-247d-438f-a1c5-a85e61c3d793"],
Cell[6998, 169, 434, 8, 35, "Text",ExpressionUUID->"7cd75038-4c6c-4083-a32d-c12423664e07"],
Cell[CellGroupData[{
Cell[7457, 181, 568, 14, 48, "Input",ExpressionUUID->"ef9cf924-9004-41cb-8323-141d30643974"],
Cell[8028, 197, 6479, 167, 231, "Output",ExpressionUUID->"5d897369-1728-4bdb-a020-de02ac7194c3"]
}, Open  ]],
Cell[14522, 367, 168, 4, 34, "Text",ExpressionUUID->"e6c9e21f-5a02-41c7-8245-3e9060ee2257"],
Cell[CellGroupData[{
Cell[14715, 375, 271, 5, 28, "Input",ExpressionUUID->"6f54de26-bd2e-4cdf-92a2-f29d22dd5ebd"],
Cell[14989, 382, 628, 11, 32, "Output",ExpressionUUID->"8c0a7736-9d89-4cbe-a6e5-ee3bac2de683"]
}, Open  ]],
Cell[15632, 396, 203, 4, 34, "Text",ExpressionUUID->"b7749faf-9b28-4f75-9fea-0a09c72c3a91"],
Cell[CellGroupData[{
Cell[15860, 404, 311, 6, 28, "Input",ExpressionUUID->"1c1ef4a2-9496-4881-aeb9-cffea6c3e5d9"],
Cell[16174, 412, 638, 11, 32, "Output",ExpressionUUID->"3d2dea51-6d10-4897-a739-5c99e5a4de94"]
}, Open  ]],
Cell[16827, 426, 378, 8, 35, "Text",ExpressionUUID->"14bf0bca-a107-43be-9eac-5934713063ce"],
Cell[17208, 436, 664, 16, 28, "Input",ExpressionUUID->"8e8e29f4-51a9-421d-85d9-155bcaa3642e"],
Cell[CellGroupData[{
Cell[17897, 456, 217, 3, 28, "Input",ExpressionUUID->"79be946b-ffda-459c-b457-804b0047e683"],
Cell[18117, 461, 9200, 264, 231, "Output",ExpressionUUID->"c3c119d9-855e-4fff-9d35-f3686fb6fa7a"]
}, Open  ]],
Cell[27332, 728, 192, 4, 34, "Text",ExpressionUUID->"abf3be43-d8a2-47dc-b85f-c1bb0360457d"],
Cell[CellGroupData[{
Cell[27549, 736, 276, 5, 28, "Input",ExpressionUUID->"195d4b99-2ba0-4314-a2c2-af1ec6beae5f"],
Cell[27828, 743, 1427, 19, 32, "Output",ExpressionUUID->"4f1e8f42-55a5-4815-8343-a0140be6e4c7"]
}, Open  ]],
Cell[29270, 765, 203, 4, 34, "Text",ExpressionUUID->"1b1bfd27-c8c6-4b98-9ee6-fd1fbc41a3e0"],
Cell[CellGroupData[{
Cell[29498, 773, 285, 5, 28, "Input",ExpressionUUID->"fd261e8b-45f6-43d6-9878-490fb1ab0b43"],
Cell[29786, 780, 639, 11, 32, "Output",ExpressionUUID->"e12e8f79-0e43-45ea-9131-2da08898b782"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30474, 797, 226, 4, 53, "Subsection",ExpressionUUID->"01ddf129-ea6c-4a93-8b1a-5a0c22f683db"],
Cell[30703, 803, 882, 15, 34, "Text",ExpressionUUID->"b7d9077e-31ed-4383-a52f-3fa176c205e4"],
Cell[31588, 820, 227, 5, 31, "Item",ExpressionUUID->"631e0076-9204-44fa-814e-93ecc80a980c"],
Cell[31818, 827, 220, 5, 31, "Item",ExpressionUUID->"b19b5c92-6823-40ad-887a-95a5c7667f37"],
Cell[32041, 834, 190, 3, 31, "Item",ExpressionUUID->"7aa92fdd-bc94-4c35-8006-7143e69f4195"],
Cell[32234, 839, 174, 3, 31, "Item",ExpressionUUID->"26fb5fee-ac19-49ad-b0a1-7f59fa2dad63"],
Cell[32411, 844, 201, 3, 31, "Item",ExpressionUUID->"d592e3d6-bbd6-4f69-b715-b14c0dd447bc"],
Cell[32615, 849, 192, 3, 31, "Item",ExpressionUUID->"d92ee17d-ec77-4813-aa84-90275480b959"],
Cell[32810, 854, 200, 3, 31, "Item",ExpressionUUID->"407015a3-919f-4d83-a4d9-82761c586ffd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33047, 862, 177, 3, 53, "Subsection",ExpressionUUID->"0319adca-74b4-4c92-ae0d-2bb94977c79a"],
Cell[33227, 867, 308, 6, 34, "Text",ExpressionUUID->"c438f5df-5162-4e6f-81ca-adbfe5b83287"],
Cell[33538, 875, 175, 3, 31, "ItemNumbered",ExpressionUUID->"831e0a4f-1fc7-4311-acc6-bf826b241f96"],
Cell[33716, 880, 174, 3, 31, "ItemNumbered",ExpressionUUID->"238870df-a21e-4546-9490-9cef3db10db5"],
Cell[33893, 885, 195, 3, 31, "ItemNumbered",ExpressionUUID->"ab2a673d-0a91-4448-8c5f-9a4b8bbb8c64"],
Cell[34091, 890, 172, 3, 31, "ItemNumbered",ExpressionUUID->"bfb7254b-ae9a-44dc-8fc8-86849d9d9883"],
Cell[34266, 895, 194, 3, 31, "ItemNumbered",ExpressionUUID->"34234ab2-1c0f-4670-a165-a02403b9d0dc"],
Cell[34463, 900, 315, 6, 34, "Text",ExpressionUUID->"848a480e-b8e7-4a17-b6fd-c1f0088d0e4e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34827, 912, 317, 5, 67, "Section",ExpressionUUID->"434e09da-b8dd-4be0-a21e-2f63df69b138"],
Cell[35147, 919, 347, 7, 34, "Text",ExpressionUUID->"3cb86dc4-86a1-45f3-879a-b33b6d42609d"],
Cell[35497, 928, 426, 7, 28, "Input",ExpressionUUID->"2e67312a-b1eb-425f-92e5-086f13a1932e"],
Cell[35926, 937, 231, 5, 34, "Text",ExpressionUUID->"87ac37ad-46f5-4c16-855f-c474ce614226"],
Cell[36160, 944, 300, 5, 28, "Input",ExpressionUUID->"7940d3e1-1be0-4cbc-970d-96df8c3c7d86"],
Cell[36463, 951, 243, 4, 34, "Text",ExpressionUUID->"dfb2a934-0c7c-4d9f-8720-4a12fc0cf939"],
Cell[36709, 957, 246, 5, 28, "Input",ExpressionUUID->"3a6390e4-558a-49d3-a8e0-988fd202c164"],
Cell[36958, 964, 185, 3, 34, "Text",ExpressionUUID->"e4321bdf-6901-4dfc-a24a-ca58bb014ae9"],
Cell[37146, 969, 222, 4, 28, "Input",ExpressionUUID->"58d7f74e-2bca-4f43-a476-39c47ff02f71"],
Cell[37371, 975, 477, 9, 34, "Text",ExpressionUUID->"3277686c-d463-4c38-b630-86f1a01f1148"],
Cell[37851, 986, 293, 5, 28, "Input",ExpressionUUID->"4f79cf7f-9d1c-446c-a054-fff0b9c7270a"],
Cell[38147, 993, 292, 7, 34, "Text",ExpressionUUID->"899d6ffa-457a-4162-92b5-4430a340300a"],
Cell[38442, 1002, 273, 5, 28, "Input",ExpressionUUID->"e714a18a-04ab-46e7-908a-c6a5fab26218"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38752, 1012, 258, 4, 67, "Section",ExpressionUUID->"0d923d96-bd3a-4248-a2ec-dd00ba2c1b1f"],
Cell[39013, 1018, 142904, 2350, 408, "Text",ExpressionUUID->"c3dfe293-7c5a-41ff-869b-830206bf43fb"],
Cell[181920, 3370, 979, 21, 56, "Text",ExpressionUUID->"3e300580-181b-42fa-9351-791860667ca1"],
Cell[CellGroupData[{
Cell[182924, 3395, 297, 5, 53, "Subsection",ExpressionUUID->"df34e171-0bcd-4ac3-8933-341b271aebb2"],
Cell[183224, 3402, 231, 4, 28, "Input",ExpressionUUID->"82767dd4-ddc7-46c9-bc35-a67743b2c091"],
Cell[183458, 3408, 655, 14, 28, "Input",ExpressionUUID->"fdacdaf0-3052-46ea-b1c2-a3355edfce15"],
Cell[184116, 3424, 10733, 313, 409, "Input",ExpressionUUID->"b3264b48-837c-48ea-a343-b4e11b307d3d"],
Cell[194852, 3739, 1391, 36, 67, "Input",ExpressionUUID->"e050e895-ce2e-4dd4-a26d-29ad8c31b000"],
Cell[196246, 3777, 898, 28, 48, "Input",ExpressionUUID->"8e828675-1d82-4443-bc80-44719f2b2a63"],
Cell[197147, 3807, 36783, 897, 1378, "Input",ExpressionUUID->"66aae4b6-ef6d-4729-9d51-d5c417a3b62e"]
}, Closed]],
Cell[CellGroupData[{
Cell[233967, 4709, 324, 5, 37, "Subsection",ExpressionUUID->"88d2e239-caf1-4ed9-ab59-d8eaa0890d21"],
Cell[234294, 4716, 427, 10, 34, "Text",ExpressionUUID->"d3e629c9-df5f-42a6-9c26-97452def9c2c"],
Cell[CellGroupData[{
Cell[234746, 4730, 1322, 17, 28, "Input",ExpressionUUID->"04957034-0155-4abe-b008-a6470f4ada3b"],
Cell[236071, 4749, 68257, 1302, 217, "Output",ExpressionUUID->"4d98b134-7ca9-49c5-9a8e-2681ae55ec40"]
}, Open  ]],
Cell[304343, 6054, 270, 6, 34, "Text",ExpressionUUID->"0ac83f76-c63c-4493-9321-37fcc22998ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304650, 6065, 295, 5, 53, "Subsection",ExpressionUUID->"a5f7b1e5-97a0-43d4-905d-d836b12ebd72"],
Cell[304948, 6072, 1130, 22, 56, "Text",ExpressionUUID->"1d683d8b-f9c0-45f3-af7c-aec27d229adb"],
Cell[CellGroupData[{
Cell[306103, 6098, 235, 3, 28, "Input",ExpressionUUID->"8d99a2a5-81b3-4522-a92d-7b1220dfd329"],
Cell[306341, 6103, 13438, 316, 303, "Output",ExpressionUUID->"71858341-eabe-4a53-8f83-1be401b86993"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319816, 6424, 558, 7, 28, "Input",ExpressionUUID->"876591dc-bda1-4aa0-b894-cf01628fd032"],
Cell[320377, 6433, 67788, 1295, 217, "Output",ExpressionUUID->"d3ffa90c-ba5f-4ac5-b840-1b487a11493b"]
}, Open  ]],
Cell[388180, 7731, 385, 6, 34, "Text",ExpressionUUID->"de16bb20-20c2-4b20-9baf-8af97a62db29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388602, 7742, 400, 8, 53, "Subsection",ExpressionUUID->"1b38e92d-0865-42aa-963f-56e057e80773"],
Cell[CellGroupData[{
Cell[389027, 7754, 965, 17, 28, "Input",ExpressionUUID->"eb428ea9-1958-4942-a06b-c5496cac94b3"],
Cell[389995, 7773, 49630, 1077, 260, "Output",ExpressionUUID->"c496268c-c18f-490b-842e-93529a32f20b"]
}, Open  ]],
Cell[439640, 8853, 579, 12, 56, "Text",ExpressionUUID->"a62c0ff4-42a8-430a-88fc-1d9bb905e690"]
}, Open  ]],
Cell[CellGroupData[{
Cell[440256, 8870, 310, 5, 53, "Subsection",ExpressionUUID->"dd63d803-dd25-4ba4-9134-5ea15ae2fd58"],
Cell[CellGroupData[{
Cell[440591, 8879, 437, 6, 28, "Input",ExpressionUUID->"b2e765e9-625e-45e1-b6cd-2a5676fedd81"],
Cell[441031, 8887, 45546, 828, 263, "Output",ExpressionUUID->"c6244fc9-46a9-4c82-bc6f-0929ec49d8e5"]
}, Open  ]],
Cell[486592, 9718, 1516, 28, 122, "Text",ExpressionUUID->"eccc1be0-03a6-4a47-be3c-cf0d5fa6a501"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[488157, 9752, 321, 5, 67, "Section",ExpressionUUID->"9ea18ad7-e093-42eb-8c10-b7a7ddfc7c61"],
Cell[488481, 9759, 151046, 2483, 387, "Text",ExpressionUUID->"66be632c-3dc2-43c3-86fe-04072ed62152"],
Cell[639530, 12244, 1082, 25, 56, "Text",ExpressionUUID->"90f00860-08b3-42a7-bf0f-d2927fbbf211"],
Cell[CellGroupData[{
Cell[640637, 12273, 305, 5, 53, "Subsection",ExpressionUUID->"4e8a7eeb-3119-4240-b07c-9abe560933f9"],
Cell[640945, 12280, 10478, 307, 447, "Input",ExpressionUUID->"ff2947f2-7acc-4adc-8ac7-0b07b3033d17"],
Cell[651426, 12589, 1389, 36, 67, "Input",ExpressionUUID->"31bba2ef-9c35-4cba-9a26-90bd06085d23"],
Cell[652818, 12627, 898, 28, 48, "Input",ExpressionUUID->"f716a524-ca66-4e63-b980-ec6831cb1f01"],
Cell[653719, 12657, 37138, 912, 1378, "Input",ExpressionUUID->"227f7131-8b69-4197-b10e-7a2b8f72b3bd"]
}, Closed]],
Cell[CellGroupData[{
Cell[690894, 13574, 353, 5, 37, "Subsection",ExpressionUUID->"aab443e3-749e-4369-8a5f-49d44aacba2a"],
Cell[CellGroupData[{
Cell[691272, 13583, 214, 3, 28, "Input",ExpressionUUID->"18c6fecf-13c2-4fef-8bd9-baca531451dd"],
Cell[691489, 13588, 66168, 1275, 217, "Output",ExpressionUUID->"1d3ab90b-ccf4-42eb-8bce-54d91e21751a"]
}, Open  ]],
Cell[757672, 14866, 395, 10, 34, "Text",ExpressionUUID->"d2632221-1677-49c8-8d8c-20c238abcb97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758104, 14881, 299, 5, 53, "Subsection",ExpressionUUID->"38785bb1-fc18-4fc4-a049-37a1a9900918"],
Cell[CellGroupData[{
Cell[758428, 14890, 160, 2, 28, "Input",ExpressionUUID->"729fe62c-61d6-43c0-a897-fd0ce6c46f5b"],
Cell[758591, 14894, 13370, 316, 303, "Output",ExpressionUUID->"c5b45f1f-f9d8-4e6f-a9cf-6b7ac2cdd610"]
}, Open  ]],
Cell[771976, 15213, 573, 10, 56, "Text",ExpressionUUID->"e3c13700-faf7-4027-8e3d-5c58efb90c02"],
Cell[CellGroupData[{
Cell[772574, 15227, 212, 3, 28, "Input",ExpressionUUID->"44b82602-c4c7-4f9c-b4a6-8d5e861c3b68"],
Cell[772789, 15232, 66165, 1275, 217, "Output",ExpressionUUID->"5467a849-c995-4b74-b93d-4b896da540ca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[839003, 16513, 380, 8, 53, "Subsection",ExpressionUUID->"4fcb4906-87ca-4ad7-b4d8-d755e61b051d"],
Cell[CellGroupData[{
Cell[839408, 16525, 577, 11, 28, "Input",ExpressionUUID->"3b9fd45b-19de-4f96-98f0-77aa8b6f6e6d"],
Cell[839988, 16538, 49715, 1078, 260, "Output",ExpressionUUID->"d1fea344-367f-41c1-b4dd-e841e92b1b25"]
}, Open  ]],
Cell[889718, 17619, 1096, 26, 78, "Text",ExpressionUUID->"4b6cc3d0-ccc6-4729-b4cb-1b491a2a1077"]
}, Open  ]],
Cell[CellGroupData[{
Cell[890851, 17650, 300, 5, 53, "Subsection",ExpressionUUID->"5519a6ed-7280-41d5-9564-93ba4b99b994"],
Cell[CellGroupData[{
Cell[891176, 17659, 210, 3, 28, "Input",ExpressionUUID->"b8b1f3fe-c9f1-465d-bc45-1057bd2319a3"],
Cell[891389, 17664, 51494, 963, 263, "Output",ExpressionUUID->"1c9b6e89-df32-41c1-ac13-18cd86f2bc37"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[942944, 18634, 333, 5, 67, "Section",ExpressionUUID->"bbded5f9-d54a-48ab-bc75-6beecc52e64b"],
Cell[943280, 18641, 1840, 44, 166, "Text",ExpressionUUID->"e740a21f-b5aa-4b9f-a964-ba23b6079cf2"],
Cell[945123, 18687, 148921, 2449, 405, "Text",ExpressionUUID->"76655c2a-a387-401b-bed0-9a72d4e80632"],
Cell[CellGroupData[{
Cell[1094069, 21140, 320, 5, 53, "Subsection",ExpressionUUID->"6757e4c3-5cb1-4ba8-b5d2-3ad2477d25d9"],
Cell[1094392, 21147, 10894, 317, 428, "Input",ExpressionUUID->"345eb09a-caef-45f3-856b-7872d962d3de"],
Cell[1105289, 21466, 1439, 37, 67, "Input",ExpressionUUID->"113a0e63-8719-4a48-8c65-f139560e044e"],
Cell[1106731, 21505, 898, 28, 48, "Input",ExpressionUUID->"3d5ac86a-c778-4272-bc17-10eea40f0d30"],
Cell[1107632, 21535, 36454, 907, 1378, "Input",ExpressionUUID->"2595aa67-8234-4601-84c5-f10021836daf"]
}, Closed]],
Cell[CellGroupData[{
Cell[1144123, 22447, 330, 5, 37, "Subsection",ExpressionUUID->"1086e7c1-0def-4db6-a9c4-426c47cc0a6b"],
Cell[1144456, 22454, 302, 6, 34, "Text",ExpressionUUID->"e0dcc454-3e8e-42a4-9f62-2acf0a6f71cc"],
Cell[CellGroupData[{
Cell[1144783, 22464, 240, 4, 28, "Input",ExpressionUUID->"b013ba43-02a3-46dd-b79d-7b21ce852ad9"],
Cell[1145026, 22470, 66172, 1275, 217, "Output",ExpressionUUID->"dce7872c-3863-4cdb-9203-79cc02098042"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1211247, 23751, 269, 4, 53, "Subsection",ExpressionUUID->"babfe86c-0501-4c08-8b59-ffd7a8648876"],
Cell[CellGroupData[{
Cell[1211541, 23759, 285, 4, 28, "Input",ExpressionUUID->"c649e842-6dec-4af9-ae52-331443ad9d94"],
Cell[1211829, 23765, 12509, 306, 300, "Output",ExpressionUUID->"11895df0-10fb-4879-ba67-a66ec22e5d5f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1224375, 24076, 263, 3, 28, "Input",ExpressionUUID->"6731c68b-be23-48f9-a150-ef24de6f6cd7"],
Cell[1224641, 24081, 66139, 1274, 217, "Output",ExpressionUUID->"d7758b7c-ff25-4031-a095-a668650e0e71"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1290829, 25361, 348, 7, 53, "Subsection",ExpressionUUID->"45a72062-e2f6-4a75-bb70-8242d092e58a"],
Cell[CellGroupData[{
Cell[1291202, 25372, 485, 10, 28, "Input",ExpressionUUID->"4e8a46a4-34bd-4beb-a61c-e3c288f72f23"],
Cell[1291690, 25384, 47817, 1055, 260, "Output",ExpressionUUID->"3fae3904-de78-415b-bf6b-5585c47a19c5"]
}, Open  ]],
Cell[1339522, 26442, 545, 12, 56, "Text",ExpressionUUID->"96446378-038e-4f13-a5f2-f6ebe04d37a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1340104, 26459, 297, 5, 53, "Subsection",ExpressionUUID->"e52fb673-6605-45b8-8397-9e572c43aaec"],
Cell[CellGroupData[{
Cell[1340426, 26468, 212, 3, 28, "Input",ExpressionUUID->"988dbcf5-7be2-4fa4-ae2b-92510d137e79"],
Cell[1340641, 26473, 58561, 1108, 263, "Output",ExpressionUUID->"b93c6923-b0a5-4ec4-92d1-37f3531a5cd9"]
}, Open  ]],
Cell[1399217, 27584, 443, 8, 34, "Text",ExpressionUUID->"16d815cf-e7b5-4bbb-b92b-c20cbdfb3f1b"],
Cell[1399663, 27594, 481, 15, 56, "Text",ExpressionUUID->"6272b19e-72af-4449-bad7-60404d7b86a9"],
Cell[1400147, 27611, 352, 8, 34, "Text",ExpressionUUID->"0de8a973-ac54-44c9-ba74-4acf7ec75ce2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1400548, 27625, 357, 6, 67, "Section",ExpressionUUID->"d405687b-deb4-449b-9c12-f4344fc00bc2"],
Cell[1400908, 27633, 1149, 33, 100, "Text",ExpressionUUID->"ba41e9c1-6c81-4d0a-b70a-97fcb5ed12ee"],
Cell[1402060, 27668, 146978, 2417, 386, "Text",ExpressionUUID->"50c51568-3503-40ae-a5a3-387b5b27a56d"],
Cell[1549041, 30087, 481, 11, 34, "Text",ExpressionUUID->"2ecea37e-759a-4a67-8369-1331cb098f38"],
Cell[CellGroupData[{
Cell[1549547, 30102, 297, 5, 53, "Subsection",ExpressionUUID->"063f7ec5-7d69-4bb1-8d07-e9372cf21b9c"],
Cell[1549847, 30109, 11396, 324, 428, "Input",ExpressionUUID->"fcb20f96-c5ed-4547-a822-d7b4a175247d"],
Cell[1561246, 30435, 1156, 28, 28, "Input",ExpressionUUID->"958936a4-e6ed-4e33-89a3-13c4169e8227"],
Cell[1562405, 30465, 527, 13, 48, "Input",ExpressionUUID->"bb8dc752-3ffa-413c-b478-bea450af9c38"],
Cell[1562935, 30480, 902, 29, 48, "Input",ExpressionUUID->"adaf0ff6-2352-47aa-89a5-bb1217d3f7e5"],
Cell[1563840, 30511, 37389, 926, 1397, "Input",ExpressionUUID->"eab073c0-c1f9-4213-ab51-a6b440b251f2"]
}, Closed]],
Cell[CellGroupData[{
Cell[1601266, 31442, 328, 5, 37, "Subsection",ExpressionUUID->"dbe905fa-828c-4ac5-b270-3ba9032a0026"],
Cell[CellGroupData[{
Cell[1601619, 31451, 220, 4, 28, "Input",ExpressionUUID->"d22cbe94-2dac-41f7-ae6a-045ef7f3a9c2"],
Cell[1601842, 31457, 66147, 1273, 217, "Output",ExpressionUUID->"722ef305-d9be-486a-a543-6fb2cc519eef"]
}, Open  ]],
Cell[1668004, 32733, 350, 10, 34, "Text",ExpressionUUID->"a514a6e0-03f0-449c-929d-58b9985c5651"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1668391, 32748, 321, 5, 53, "Subsection",ExpressionUUID->"1834e62f-a378-4f8a-8d6d-8460312e81a9"],
Cell[CellGroupData[{
Cell[1668737, 32757, 188, 3, 28, "Input",ExpressionUUID->"2489999d-0870-4913-b285-70c48aa7c44a"],
Cell[1668928, 32762, 12207, 303, 307, "Output",ExpressionUUID->"0ecd32d9-72e9-4a22-abca-b23e91ae9392"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1681172, 33070, 214, 4, 28, "Input",ExpressionUUID->"f674c1b3-43d9-467f-b64d-23a5e49d37a7"],
Cell[1681389, 33076, 66115, 1272, 217, "Output",ExpressionUUID->"9064fae4-ea57-4717-a2f6-7250889a28d7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1747553, 34354, 376, 8, 53, "Subsection",ExpressionUUID->"7439154a-12b8-4159-9a3b-537aa9acb561"],
Cell[CellGroupData[{
Cell[1747954, 34366, 457, 10, 28, "Input",ExpressionUUID->"5867c2ee-6db6-422a-9628-ff5098aa87a7"],
Cell[1748414, 34378, 49136, 1071, 260, "Output",ExpressionUUID->"df029b63-f17b-4254-b604-2f3fb3c61430"]
}, Open  ]],
Cell[1797565, 35452, 356, 6, 40, "Text",ExpressionUUID->"164c0424-54cf-4dcd-bc4d-4af3aea4f3eb"],
Cell[CellGroupData[{
Cell[1797946, 35462, 212, 4, 28, "Input",ExpressionUUID->"f4276ab4-0076-448c-a5ab-77b20ecb627d"],
Cell[1798161, 35468, 65499, 1250, 263, "Output",ExpressionUUID->"3a565537-b1a0-4282-9090-268ec11d3f02"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1863721, 36725, 410, 6, 67, "Section",ExpressionUUID->"bdacaf37-d980-4fdc-8225-47bee7316098"],
Cell[1864134, 36733, 1220, 25, 78, "Text",ExpressionUUID->"d60f9793-8242-4554-8fd7-cfc7b33be0a1"],
Cell[1865357, 36760, 158106, 2599, 403, "Text",ExpressionUUID->"312982b3-b3aa-4a1d-ae5c-4503198d78af"],
Cell[2023466, 39361, 296, 5, 34, "Text",ExpressionUUID->"3d28ccf9-683b-46d1-9732-b8798766300c"],
Cell[CellGroupData[{
Cell[2023787, 39370, 343, 5, 53, "Subsection",ExpressionUUID->"71e11180-4623-4d6e-8a68-98363012440e"],
Cell[2024133, 39377, 254, 6, 28, "Input",ExpressionUUID->"48d2ff38-659a-47bf-b955-a3acb8db451d"],
Cell[2024390, 39385, 10519, 313, 428, "Input",ExpressionUUID->"a60cbc9e-c55c-4219-9383-7ee1c804df37"],
Cell[2034912, 39700, 1835, 43, 67, "Input",ExpressionUUID->"a55d926b-0bf7-4b20-9469-0984f8c6ba85"],
Cell[2036750, 39745, 902, 29, 48, "Input",ExpressionUUID->"d0ccf7a8-e03c-4be3-afe2-e8e96a31be9b"],
Cell[2037655, 39776, 38659, 948, 1416, "Input",ExpressionUUID->"9052165c-1ec0-4d32-aa7b-60533390a3b6"]
}, Closed]],
Cell[CellGroupData[{
Cell[2076351, 40729, 350, 5, 37, "Subsection",ExpressionUUID->"20ce4c57-634f-4a42-a3fe-80afa48115f5"],
Cell[CellGroupData[{
Cell[2076726, 40738, 269, 5, 28, "Input",ExpressionUUID->"367ccc06-4ece-4885-8f76-1062a1489f32"],
Cell[2076998, 40745, 66188, 1274, 217, "Output",ExpressionUUID->"b519f612-ce2c-4d99-ac2e-e597744d1788"]
}, Open  ]],
Cell[2143201, 42022, 492, 11, 34, "Text",ExpressionUUID->"4e49f4d4-fd80-4dde-a40e-9c13cc163f0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2143730, 42038, 342, 5, 53, "Subsection",ExpressionUUID->"05962ca9-6285-4939-8154-8cbdb602c9db"],
Cell[CellGroupData[{
Cell[2144097, 42047, 241, 4, 28, "Input",ExpressionUUID->"0a00d620-26f1-4279-93dd-c931a35225ff"],
Cell[2144341, 42053, 12085, 298, 300, "Output",ExpressionUUID->"e2fc9efa-df4b-4393-b770-5abf59bd9158"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2156463, 42356, 271, 5, 28, "Input",ExpressionUUID->"91f930ac-64fa-4c75-beba-057eed9286a5"],
Cell[2156737, 42363, 66177, 1273, 217, "Output",ExpressionUUID->"2043e80c-3e95-4c2d-88f4-1622e3dcbefa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2222963, 43642, 398, 8, 53, "Subsection",ExpressionUUID->"59e40150-c115-42aa-babf-599340dfa4eb"],
Cell[CellGroupData[{
Cell[2223386, 43654, 457, 10, 28, "Input",ExpressionUUID->"dffc875e-7de4-403d-86b5-c721c3e67926"],
Cell[2223846, 43666, 49184, 1072, 260, "Output",ExpressionUUID->"e821c6f0-938b-4f92-9641-a1acc4183394"]
}, Open  ]],
Cell[2273045, 44741, 335, 7, 34, "Text",ExpressionUUID->"b08a85c2-d7d1-4331-a21e-71cc82e935c6"],
Cell[2273383, 44750, 380, 6, 40, "Text",ExpressionUUID->"0d2cf2e1-42bc-49e0-b3ed-0c8e0473048f"],
Cell[CellGroupData[{
Cell[2273788, 44760, 274, 5, 28, "Input",ExpressionUUID->"82350612-ab95-4498-b659-54a44bdf8b4d"],
Cell[2274065, 44767, 72580, 1392, 263, "Output",ExpressionUUID->"5394e2c1-adcf-4a26-9cc0-3ecad40fe08d"]
}, Open  ]],
Cell[2346660, 46162, 691, 12, 56, "Text",ExpressionUUID->"206eca6c-105c-4320-8fa8-25f47638ab12"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2347400, 46180, 332, 5, 67, "Section",ExpressionUUID->"94d20477-ecd7-4191-8eca-6f3ee6ceb75f"],
Cell[CellGroupData[{
Cell[2347757, 46189, 321, 5, 53, "Subsection",ExpressionUUID->"6bbc904e-fd5e-449e-b4eb-26dbbc50e9b2"],
Cell[2348081, 46196, 1873, 37, 162, "Input",ExpressionUUID->"d7461921-618f-495b-b1f2-4aac350de158"],
Cell[2349957, 46235, 1855, 37, 143, "Input",ExpressionUUID->"97902f91-821a-4acc-91f9-8bb2b04cf3ae"]
}, Closed]],
Cell[CellGroupData[{
Cell[2351849, 46277, 366, 5, 37, "Subsection",ExpressionUUID->"e915d5b8-7f12-4ad6-80a1-b16806e566d1"],
Cell[CellGroupData[{
Cell[2352240, 46286, 543, 13, 48, "Input",ExpressionUUID->"4ba38fc4-e5ed-46be-9cb6-1bb2fade0695"],
Cell[2352786, 46301, 11662, 271, 228, "Output",ExpressionUUID->"bc39d1be-920f-48f9-ad60-6a6c85f18a05"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2364497, 46578, 352, 5, 53, "Subsection",ExpressionUUID->"0e721750-0e80-43ee-b8b5-0c519d706ad3"],
Cell[CellGroupData[{
Cell[2364874, 46587, 269, 5, 28, "Input",ExpressionUUID->"944e8ebe-4b71-4850-ba4b-d4b53a52efbe"],
Cell[2365146, 46594, 73010, 1398, 263, "Output",ExpressionUUID->"b006eaca-cd25-4eaa-a5aa-c22c7a202a75"]
}, Open  ]],
Cell[2438171, 47995, 172, 3, 34, "Text",ExpressionUUID->"559e5f5c-7006-4301-b1ab-98a926abc63d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2438392, 48004, 152, 3, 67, "Section",ExpressionUUID->"49ae9849-d4fa-4a07-8414-58c8dce80161"],
Cell[2438547, 48009, 1496, 40, 144, "Text",ExpressionUUID->"5ab731bc-9de7-4ea9-a0af-2b379ea05275"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature Kw0p3YKculCjkAg4E5vsR186 *)
